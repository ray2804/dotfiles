<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<process version="5.0">
  <context>
    <input/>
    <output/>
    <macros/>
  </context>
  <operator activated="true" class="process" expanded="true" name="Root">
    <description>&lt;p&gt;This process loads a data set containing missing values. The following operator is the ExampleFilter operator which is able to filter out examples fulfilling a given condition. In this case, only examples without missing values should be kept. Unfortunately, only one example is kept which isn't actually very useful for learning purposes :-) &lt;/p&gt;&lt;p&gt; Another useful possibility of this operator is to filter the data set according to values of a single attribute, e.g. to keep only those examples where a certain attribute is greater than, let's say, 5. You can specify several attribute value conditions with || for a logical OR and you can use several ExampleFilter operators in order to simulate a logical AND. &lt;/p&gt;</description>
    <parameter key="logverbosity" value="3"/>
    <parameter key="random_seed" value="2001"/>
    <parameter key="send_mail" value="1"/>
    <parameter key="process_duration_for_mail" value="30"/>
    <parameter key="encoding" value="SYSTEM"/>
    <process expanded="true" height="611" width="822">
      <operator activated="true" class="retrieve" expanded="true" height="60" name="Retrieve" width="90" x="45" y="30">
        <parameter key="repository_entry" value="../../data/Labor-Negotiations"/>
      </operator>
      <operator activated="true" class="filter_examples" expanded="true" height="76" name="ExampleFilter" width="90" x="179" y="30">
        <parameter key="condition_class" value="no_missing_attributes"/>
        <parameter key="invert_filter" value="false"/>
      </operator>
      <connect from_op="Retrieve" from_port="output" to_op="ExampleFilter" to_port="example set input"/>
      <connect from_op="ExampleFilter" from_port="example set output" to_port="result 1"/>
      <portSpacing port="source_input 1" spacing="0"/>
      <portSpacing port="sink_result 1" spacing="0"/>
      <portSpacing port="sink_result 2" spacing="0"/>
    </process>
  </operator>
</process>
