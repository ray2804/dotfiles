<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<process version="5.0">
  <context>
    <input/>
    <output/>
    <macros/>
  </context>
  <operator activated="true" class="process" expanded="true" name="Root">
    <description>This is another principal components operator creating a PCA model which can be applied to data sets. This allows for performance estimations of the feature transformation on unseen data sets.</description>
    <parameter key="logverbosity" value="3"/>
    <parameter key="random_seed" value="2001"/>
    <parameter key="send_mail" value="1"/>
    <parameter key="process_duration_for_mail" value="30"/>
    <parameter key="encoding" value="SYSTEM"/>
    <process expanded="true" height="604" width="846">
      <operator activated="true" class="retrieve" expanded="true" height="60" name="Retrieve" width="90" x="45" y="30">
        <parameter key="repository_entry" value="../../data/Sonar"/>
      </operator>
      <operator activated="true" class="principal_component_analysis" expanded="true" height="94" name="PCA" width="90" x="179" y="30">
        <parameter key="dimensionality_reduction" value="1"/>
        <parameter key="variance_threshold" value="0.95"/>
        <parameter key="number_of_components" value="1"/>
      </operator>
      <operator activated="true" class="apply_model" expanded="true" height="76" name="ModelApplier" width="90" x="380" y="30">
        <list key="application_parameters">
          <parameter key="variance_threshold" value="0.95"/>
        </list>
        <parameter key="create_view" value="false"/>
      </operator>
      <connect from_op="Retrieve" from_port="output" to_op="PCA" to_port="example set input"/>
      <connect from_op="PCA" from_port="original" to_op="ModelApplier" to_port="unlabelled data"/>
      <connect from_op="PCA" from_port="preprocessing model" to_op="ModelApplier" to_port="model"/>
      <connect from_op="ModelApplier" from_port="labelled data" to_port="result 1"/>
      <connect from_op="ModelApplier" from_port="model" to_port="result 2"/>
      <portSpacing port="source_input 1" spacing="0"/>
      <portSpacing port="sink_result 1" spacing="0"/>
      <portSpacing port="sink_result 2" spacing="0"/>
      <portSpacing port="sink_result 3" spacing="0"/>
    </process>
  </operator>
</process>
