{
    "name": "StringTemplate",
    "scopeName": "text.stringtemplate",
    "fileTypes": [],
    "patterns": [
        { "include": "#dollar" }
        ],
    "repository": {
        "dollar": {
            "patterns": [
                {
                    "name": "comment.block.stringtemplate",
                    "comment": "Comments",
                    "begin": "\\$!",
                    "end": "!\\$"
                    },
                {
                    "name": "meta.function.variable.template.stringtemplate",
                    "comment": "Template and variable calls",
                    "begin": "\\$\\s*(?=[^\\$]+:)",
                    "beginCaptures": {
                        "0": { "name": "punctuation.definition.delimiter.begin.stringtemplate" }
                        },
                    "patterns": [
                        { "include": "#dollar-variable-template" }
                        ],
                    "end": "\\s*\\$",
                    "endCaptures": {
                        "0": { "name": "punctuation.definition.delimiter.end.stringtemplate" }
                        }
                    },
                {
                    "name": "meta.keyword.control.stringtemplate",
                    "comment": "Keyword calls",
                    "begin": "(\\$\\s*)(if|elseif)(\\s*\\(\\s*)(!?)",
                    "beginCaptures": {
                        "1": { "name": "punctuation.definition.delimiter.begin.stringtemplate" },
                        "2": { "name": "keyword.control.if.stringtemplate" },
                        "3": { "name": "punctuation.definition.control.begin.stringtemplate" },
                        "4": { "name": "punctuation.definition.logical.not.stringtemplate" }
                        },
                    "patterns": [
                        { "include": "#variable" }
                        ],
                    "end": "(\\s*\\))(\\s*\\$)",
                    "endCaptures": {
                        "1": { "name": "punctuation.definition.control.end.stringtemplate" },
                        "2": { "name": "punctuation.definition.delimiter.end.stringtemplate" }
                        }
                    },
                {
                    "name": "meta.function.support.stringtemplate",
                    "comment": "Function calls",
                    "begin": "(\\$\\s*)(first|last|rest|trunc|strip|length)(\\s*\\(\\s*)",
                    "beginCaptures": {
                        "1": { "name": "punctuation.definition.delimiter.begin.stringtemplate" },
                        "2": { "name": "support.function.stringtemplate" },
                        "3": { "name": "punctuation.definition.function.begin.stringtemplate" }
                        },
                    "patterns": [
                        { "include": "#variable" }
                        ],
                    "end": "(\\s*\\))(\\s*\\$)",
                    "endCaptures": {
                        "1": { "name": "punctuation.definition.function.end.stringtemplate" },
                        "2": { "name": "punctuation.definition.delimiter.end.stringtemplate" }
                        }
                    },
                {
                    "name": "meta.function.template.indirect.stringtemplate",
                    "comment": "Indirect template calls",
                    "begin": "\\$\\s*(?=\\([^\\$]+\\)\\()",
                    "beginCaptures": {
                        "0": { "name": "punctuation.definition.delimiter.begin.stringtemplate" }
                        },
                    "patterns": [
                        { "include": "#indirect-template" }
                        ],
                    "end": "\\s*\\$",
                    "endCaptures": {
                        "0": { "name": "punctuation.definition.delimiter.end.stringtemplate" }
                        }
                    },
                {
                    "name": "meta.function.template.stringtemplate",
                    "comment": "Template calls",
                    "begin": "\\$\\s*(?=[^\\$\\.]+\\()",
                    "beginCaptures": {
                        "0": { "name": "punctuation.definition.delimiter.begin.stringtemplate" }
                        },
                    "patterns": [
                        { "include": "#template" }
                        ],
                    "end": "\\s*\\$",
                    "endCaptures": {
                        "0": { "name": "punctuation.definition.delimiter.end.stringtemplate" }
                        }
                    },
                {
                    "name": "meta.keyword.control.stringtemplate",
                    "comment": "Keyword calls",
                    "match": "(\\$\\s*)(else|endif)(\\s*\\$)",
                    "captures": {
                        "1": { "name": "punctuation.definition.delimiter.begin.stringtemplate" },
                        "2": { "name": "keyword.control.stringtemplate" },
                        "3": { "name": "punctuation.definition.delimiter.end.stringtemplate" }
                        }
                    },
                {
                    "name": "meta.variable.other.options.stringtemplate",
                    "comment": "Variable with option calls",
                    "begin": "\\$\\s*(?=[^\\$]+;)",
                    "beginCaptures": {
                        "0": { "name": "punctuation.definition.delimiter.begin.stringtemplate" }
                        },
                    "patterns": [
                        { "include": "#dollar-variable-options" }
                        ],
                    "end": "\\s*\\$",
                    "endCaptures": {
                        "0": { "name": "punctuation.definition.delimiter.end.stringtemplate" }
                        }
                    },
                {
                    "name": "meta.variable.other.stringtemplate",
                    "comment": "Variable calls",
                    "begin": "\\$\\s*",
                    "beginCaptures": {
                        "0": { "name": "punctuation.definition.delimiter.begin.stringtemplate" }
                        },
                    "patterns": [
                        { "include": "#variable" }
                        ],
                    "end": "\\s*\\$",
                    "endCaptures": {
                        "0": { "name": "punctuation.definition.delimiter.end.stringtemplate" }
                        }
                    }
                ]
            },
        "dollar-options": {
            "patterns": [
                {
                    "name": "meta.storage.modifier.option.stringtemplate",
                    "comment": "Variable option",
                    "begin": "(separator|format|null|wrap|anchor)(\\s*=\\s*)",
                    "beginCaptures": {
                        "1": { "name" : "storage.modifier.option.stringtemplate" },
                        "2": { "name" : "punctuation.definition.equal.stringtemplate" }
                        },
                    "patterns": [
                        { "include": "#expression" }
                        ],
                    "end": "\\s*,\\s*|(?=\\$)",
                    "endCaptures": {
                        "0": { "name" : "punctuation.definition.comma.stringtemplate" }
                        }
                    }
                ]
            },
        "dollar-variable-options": {
            "patterns": [
                {
                    "name": "meta.punctuation.definition.semicolon.stringtemplate",
                    "comment": "Variable options",
                    "begin": ";\\s*",
                    "beginCaptures": {
                        "0": { "name" : "punctuation.definition.semicolon.stringtemplate" }
                        },
                    "patterns": [
                        { "include": "#dollar-options" }
                        ],
                    "end": "(?=\\$)"
                    },
                { "include": "#variable" }
                ]
            },
        "dollar-variable-template": {
            "patterns": [
                {
                    "name": "meta.function.template.anonymous.stringtemplate",
                    "comment": "Indirect template with parameters",
                    "begin": "(:\\s*)(\\{\\s*)((([A-Za-z]\\w*)(\\s*,?\\s*))+(\\|))?",
                    "beginCaptures": {
                        "1": { "name" : "punctuation.definition.template.call.stringtemplate" },
                        "2": { "name" : "punctuation.definition.anonymous.begin.stringtemplate" },
                        "5": { "name" : "variable.parameter.template.anonymous.stringtemplate" },
                        "6": { "name" : "punctuation.definition.comma.stringtemplate" },
                        "7": { "name" : "punctuation.definition.pipe.stringtemplate" }
                        },
                    "patterns": [
                        { "include": "#expression-internal" }
                        ],
                    "end": "(\\}\\s*)(,?)",
                    "endCaptures": {
                        "1": { "name" : "punctuation.definition.anonymous.end.stringtemplate" },
                        "2": { "name" : "punctuation.definition.comma.stringtemplate" }
                        }
                    },
                {
                    "name": "meta.function.template.indirect.stringtemplate",
                    "comment": "Indirect template",
                    "begin": ":\\s*(?=\\()",
                    "beginCaptures": {
                        "0": { "name" : "punctuation.definition.template.call.stringtemplate" }
                        },
                    "patterns": [
                        { "include": "#indirect-template" }
                        ],
                    "end": "(?=\\$)"
                    },
                {
                    "name": "meta.function.template.stringtemplate",
                    "comment": "Template",
                    "begin": ":",
                    "beginCaptures": {
                        "0": { "name" : "punctuation.definition.template.call.stringtemplate" }
                        },
                    "patterns": [
                        { "include": "#template" }
                        ],
                    "end": "(?=\\$)"
                    },
                { "include": "#variable" }
                ]
            },
        "angle": {
            "patterns": [
                {
                    "name": "comment.block.stringtemplate",
                    "comment": "Comments",
                    "begin": "<!",
                    "end": "!>"
                    },
                {
                    "name": "meta.function.variable.template.stringtemplate",
                    "comment": "Template and variable calls",
                    "begin": "<(?=[^>]+:)",
                    "beginCaptures": {
                        "0": { "name": "punctuation.definition.delimiter.begin.stringtemplate" }
                        },
                    "patterns": [
                        { "include": "#angle-variable-template" }
                        ],
                    "end": ">",
                    "endCaptures": {
                        "0": { "name": "punctuation.definition.delimiter.end.stringtemplate" }
                        }
                    },
                {
                    "name": "meta.keyword.control.stringtemplate",
                    "comment": "Keyword calls",
                    "begin": "(<\\s*)(if|elseif)(\\s*\\(\\s*)(!?)",
                    "beginCaptures": {
                        "1": { "name": "punctuation.definition.delimiter.begin.stringtemplate" },
                        "2": { "name": "keyword.control.if.stringtemplate" },
                        "3": { "name": "punctuation.definition.control.begin.stringtemplate" },
                        "4": { "name": "punctuation.definition.logical.not.stringtemplate" }
                        },
                    "patterns": [
                        { "include": "#variable" }
                        ],
                    "end": "(\\s*\\))(\\s*>)",
                    "endCaptures": {
                        "1": { "name": "punctuation.definition.control.end.stringtemplate" },
                        "2": { "name": "punctuation.definition.delimiter.end.stringtemplate" }
                        }
                    },
                {
                    "name": "meta.function.support.stringtemplate",
                    "comment": "Function calls",
                    "begin": "(<\\s*)(first|last|rest|trunc|strip|length)(\\s*\\(\\s*)",
                    "beginCaptures": {
                        "1": { "name": "punctuation.definition.delimiter.begin.stringtemplate" },
                        "2": { "name": "support.function.stringtemplate" },
                        "3": { "name": "punctuation.definition.function.begin.stringtemplate" }
                        },
                    "patterns": [
                        { "include": "#variable" }
                        ],
                    "end": "(\\s*\\))(\\s*>)",
                    "endCaptures": {
                        "1": { "name": "punctuation.definition.function.end.stringtemplate" },
                        "2": { "name": "punctuation.definition.delimiter.end.stringtemplate" }
                        }
                    },
                {
                    "name": "meta.function.template.indirect.stringtemplate",
                    "comment": "Indirect template calls",
                    "begin": "<\\s*(?=\\([^>]+\\)\\()",
                    "beginCaptures": {
                        "0": { "name": "punctuation.definition.delimiter.begin.stringtemplate" }
                        },
                    "patterns": [
                        { "include": "#indirect-template" }
                        ],
                    "end": "\\s*>",
                    "endCaptures": {
                        "0": { "name": "punctuation.definition.delimiter.end.stringtemplate" }
                        }
                    },
                {
                    "name": "meta.function.template.stringtemplate",
                    "comment": "Template calls",
                    "begin": "<\\s*(?=[^>\\.]+\\()",
                    "beginCaptures": {
                        "0": { "name": "punctuation.definition.delimiter.begin.stringtemplate" }
                        },
                    "patterns": [
                        { "include": "#template" }
                        ],
                    "end": "\\s*>",
                    "endCaptures": {
                        "0": { "name": "punctuation.definition.delimiter.end.stringtemplate" }
                        }
                    },
                {
                    "name": "meta.keyword.control.stringtemplate",
                    "comment": "Keyword calls",
                    "match": "(<\\s*)(else|endif)(\\s*>)",
                    "captures": {
                        "1": { "name": "punctuation.definition.delimiter.begin.stringtemplate" },
                        "2": { "name": "keyword.control.stringtemplate" },
                        "3": { "name": "punctuation.definition.delimiter.end.stringtemplate" }
                        }
                    },
                {
                    "name": "meta.variable.other.options.stringtemplate",
                    "comment": "Variable with option calls",
                    "begin": "<\\s*(?=[^>]+;)",
                    "beginCaptures": {
                        "0": { "name": "punctuation.definition.delimiter.begin.stringtemplate" }
                        },
                    "patterns": [
                        { "include": "#angle-variable-options" }
                        ],
                    "end": "\\s*>",
                    "endCaptures": {
                        "0": { "name": "punctuation.definition.delimiter.end.stringtemplate" }
                        }
                    },
                {
                    "name": "meta.variable.other.stringtemplate",
                    "comment": "Variable calls",
                    "begin": "<\\s*",
                    "beginCaptures": {
                        "0": { "name": "punctuation.definition.delimiter.begin.stringtemplate" }
                        },
                    "patterns": [
                        { "include": "#variable" }
                        ],
                    "end": "\\s*>",
                    "endCaptures": {
                        "0": { "name": "punctuation.definition.delimiter.end.stringtemplate" }
                        }
                    }
                ]
            },
        "angle-options": {
            "patterns": [
                {
                    "name": "meta.storage.modifier.option.stringtemplate",
                    "comment": "Anonymous template",
                    "begin": "(\\s*(separator|format|null|wrap|anchor))(\\s*=\\s*)",
                    "beginCaptures": {
                        "1": { "name" : "storage.modifier.option.stringtemplate" },
                        "3": { "name" : "punctuation.definition.equal.stringtemplate" }
                        },
                    "patterns": [
                        { "include": "#expression" }
                        ],
                    "end": "\\s*,|(?=\\$)",
                    "endCaptures": {
                        "0": { "name" : "punctuation.definition.comma.stringtemplate" }
                        }
                    }
                ]
            },
        "angle-variable-options": {
            "patterns": [
                {
                    "name": "meta.punctuation.definition.semicolon.stringtemplate",
                    "comment": "Variable options",
                    "begin": "\\s*;\\s*",
                    "beginCaptures": {
                        "0": { "name" : "punctuation.definition.semicolon.stringtemplate" }
                        },
                    "patterns": [
                        { "include": "#angle-options" }
                        ],
                    "end": "(?=\\$)"
                    },
                { "include": "#variable" }
                ]
            },
        "angle-variable-template": {
            "patterns": [
                {
                    "name": "meta.function.template.indirect.stringtemplate",
                    "comment": "Indirect template call",
                    "begin": "\\s*:\\s*(?=\\()",
                    "beginCaptures": {
                        "0": { "name" : "punctuation.definition.template.call.stringtemplate" }
                        },
                    "patterns": [
                        { "include": "#indirect-template" }
                        ],
                    "end": "(?=\\$)"
                    },
                {
                    "name": "meta.function.template.stringtemplate",
                    "comment": "Template call",
                    "begin": "\\s*:\\s*",
                    "beginCaptures": {
                        "0": { "name" : "punctuation.definition.template.call.stringtemplate" }
                        },
                    "patterns": [
                        { "include": "#template" }
                        ],
                    "end": "(?=\\$)"
                    },
                { "include": "#variable" }
                ]
            },
        "argument-list": {
            "patterns": [
                { "include": "#comma" },
                {
                    "name": "meta.variable.parameter.stringtemplate",
                    "comment": "Argument",
                    "match": "([A-Za-z]\\w*)(\\s*=\\s*)",
                    "captures": {
                        "1": { "name" : "variable.parameter.stringtemplate" },
                        "2": { "name" : "punctuation.definition.equal.stringtemplate" }
                        }
                    },
                { "include": "#expression" }
                ]
            },
        "comma": {
            "patterns": [
                {
                    "name": "punctuation.definition.comma.stringtemplate",
                    "comment": "Separator",
                    "match": "\\s*,\\s*"
                    }
                ]
            },
        "expression": {
            "patterns": [
                {
                    "name": "string.quoted.double.stringtemplate",
                    "comment": "Quoted string",
                    "begin": "\"",
                    "beginCaptures": {
                        "0": { "name" : "punctuation.definition.string.begin.stringtemplate" }
                        },
                    "end": "\"",
                    "endCaptures": {
                        "0": { "name" : "punctuation.definition.string.end.stringtemplate" }
                        }
                    },
                {
                    "name": "meta.function.template.anonymous.stringtemplate",
                    "comment": "Anonymous template",
                    "begin": "\\{",
                    "beginCaptures": {
                        "0": { "name" : "punctuation.definition.anonymous.begin.stringtemplate" }
                        },
                    "patterns": [
                        { "include": "#expression-internal" }
                        ],
                    "end": "\\}",
                    "endCaptures": {
                        "0": { "name" : "punctuation.definition.anonymous.end.stringtemplate" }
                        }
                    },
                {
                    "name": "punctuation.definition.concatenation.stringtemplate",
                    "comment": "Concatenation operator",
                    "match": "\\s*\\+\\s*"
                    },
                { "include": "#variable" }
                ]
            },
        "expression-internal": {
            "patterns": [
                { "include": "text.html.basic" }
                ]
            },
        "indirect-template": {
            "patterns": [
                {
                    "name": "meta.function.template.indirect.expression.stringtemplate",
                    "comment": "Indirect template calls",
                    "begin": "\\(\\s*",
                    "beginCaptures": {
                        "0": { "name": "punctuation.definition.indirect.begin.stringtemplate" }
                        },
                    "patterns": [
                        { "include": "#expression" }
                        ],
                    "end": "\\s*\\)\\s*(?=\\()",
                    "endCaptures": {
                        "0": { "name": "punctuation.definition.template.end.stringtemplate" }
                        }
                    },
                {
                    "name": "meta.function.template.indirect.call.stringtemplate",
                    "comment": "Template calls",
                    "begin": "\\(",
                    "beginCaptures": {
                        "0": { "name": "punctuation.definition.template.begin.stringtemplate" }
                        },
                    "patterns": [
                        { "include": "#argument-list" }
                        ],
                    "end": "\\)",
                    "endCaptures": {
                        "0": { "name": "punctuation.definition.template.end.stringtemplate" }
                        }
                    }
                ]
            },
        "list": {
            "patterns": [
                { "include": "#comma" },
                { "include": "#expression" }
                ]
            },
        "template": {
            "patterns": [
                {
                    "name": "meta.function.template.call.stringtemplate",
                    "comment": "Template calls",
                    "begin": "([A-Za-z]\\w*(/[A-Za-z]\\w*)*)(\\(\\s*)",
                    "beginCaptures": {
                        "1": { "name": "entity.name.function.template.stringtemplate" },
                        "3": { "name": "punctuation.definition.template.begin.stringtemplate" }
                        },
                    "patterns": [
                        { "include": "#argument-list" }
                        ],
                    "end": "(\\))(\\s*,?)",
                    "endCaptures": {
                        "1": { "name": "punctuation.definition.template.end.stringtemplate" },
                        "2": { "name": "punctuation.definition.comma.stringtemplate" }
                        }
                    }
                ]
            },
        "variable": {
            "patterns": [
                {
                    "name": "meta.variable.other.list.stringtemplate",
                    "comment": "List creation",
                    "begin": "\\[\\s*",
                    "beginCaptures": {
                        "0": { "name" : "punctuation.definition.list.begin.stringtemplate" }
                        },
                    "patterns": [
                        { "include": "#list" }
                        ],
                    "end": "\\s*\\]",
                    "endCaptures": {
                        "0": { "name" : "punctuation.definition.list.end.stringtemplate" }
                        }
                    },
                {
                    "name": "meta.variable.other.indirect.stringtemplate",
                    "comment": "Indirect property lookup",
                    "begin": "\\(\\s*",
                    "beginCaptures": {
                        "0": { "name" : "punctuation.definition.indirect.begin.stringtemplate" }
                        },
                    "patterns": [
                        { "include": "#expression" }
                        ],
                    "end": "\\s*\\)",
                    "endCaptures": {
                        "0": { "name" : "punctuation.definition.indirect.end.stringtemplate" }
                        }
                    },
                {
                    "name": "variable.other.stringtemplate",
                    "comment": "Variable",
                    "match": "[\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}_][\\p{Lu}\\p{Ll}\\p{Lt}\\p{Lm}\\p{Lo}\\p{Nl}\\p{Nd}\\p{Pc}\\p{Mn}\\p{Mc}\\p{Cf}]*"
                    },
                {
                    "name": "punctuation.definition.dot.stringtemplate",
                    "comment": "Property operator",
                    "match": "\\."
                    }
                ]
            }
        },
    "uuid": "5a350372-2b96-410f-8f76-370f15c5dbcc"
    }
