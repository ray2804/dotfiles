2013-05-08 21:56:24	-->	supersym (~supersym@5418DBD7.cm-5-1d.dynamic.ziggo.nl) has joined #scala
2013-05-08 21:56:24	--	Topic for #scala is "The Scala Programming Language http://www.scala-lang.org/ stable 2.10.1 dev 2.11.0-M2 Scala API: http://scala-lang.org/api | Paste http://pastie.org/?lang=scala"
2013-05-08 21:56:24	--	Topic set by ijuma (~ijuma@83-244-132-215.cust-83.exponential-e.net) on Mon, 18 Mar 2013 11:12:32
2013-05-08 21:56:25	--	Nicks #scala: [17SACS680 __main__ _janne `fogus abumirqaan aburr adammh adelbertc Aidanie ajhager alambert alippai aloiscochard anelson anildigital antoineB Apocalisp appamatto arkx artemk Ashoat atoll avenj balrog bartt baseonmars bblfish_ beawesomeinstead befuddled benj_ betehess bitonic bjartek blair blast_hardcheese blizzarac BombStrike Bracki_ bradhe bryanl_ Caelum calculus callen camerin casualjim_zzz cespare charlesofarrell cheeser ches chriswk Clinteger` codingkevin companion_cube copumpkin cpojer crazysim cross_ cybernd cythrawll d_m dacc DanBurton darkfrog Dashkal datura David____ dcsobral derpfacade desaila_ deuteros dgreensp digicyc DigitalKiwi dimensia dmilith dolio DonRichie Droggl duncanm dwins dxtr eamelink edwtjo eklavya ekneuss Eldariof-ru elek__ enebo eprst epuckett Excureo Ezku fanf fattrat fayimora fbe fbettag FDFlock fhaslam fikle fiv flazz flowsnake folone foobarbaz fsvehla gabkla__ gazarsgo gdey gemelen genehack gereedy ggreg Ghoul_ gian Glavata goodfoo gowlin gpampara gseitz Guest49412 Guest60513 Happy0 hdoshi headius heikkih hhak_ hikot hiptobecubic hiratara hiredman hirsch_ hoodow hoxu hvesalai_ hyko hyperboreean hypervise ijuma imeredith infynyxx_ io2 ironm isaacbw jamesiry jan_n jaroslav jasonmay jberkel jden jdstroy jedws jhannah Jibbers42_away jimbaker jkarlsson jkim jlewis jmvanel joed joev johnlcox joni6128 joschi jpiche jrodicus jroesch jsuereth justinmcp jyxent k7k kelvl Kemppi keras kippesoep Kneiva knix kobain kppullin kratorius ktosiek Kuba_ kyrre lambdabot lazrahl_ lcfrs Leon liszt lizzin_ lkba lmm lopex lusory Lymia m0sf3t m_m8 machisuji machisuji_ magicaltrout majoh malaverdiere maluco_ Mandus Mapleh mapreduce mariaDa2 mary5030 MasseR matheus23 matt_c MCamou mehitabel mharrah miasma milessabin milosn mister_m MisterD mjc mknoszlig mljsimone mnml monique_ mononofu mononofu- moops mrrobbot mtk multibot_ nae Nicol2 nielsbusch nirvdrum Nitro nn0101 Nosceteipsum ntelford nuttycom nuttycom1 oantsy obcode Obvious oehman ogreface ohama OlegYch oncenull OOPMan oriig oscarvarto Osho ousado pa paddymahoney pantsman pcarrier pcboy_ pdrFurst pdxleif pellegrino peltchu PeteDaGuru pettter pfn pfurla piggybox pionic- pipeline pmenon pragma- predator117 przl psino Pyppe qknight qu1j0t3 quackv4 qz rackesis rafl Ragnor raid ramses_ rayfinkle reactormonk recurrence reddickulous RedPunch reeses refefer relrod rethaw rodgort` Rogach RogueShadow rom1dep rossabaker Rovak RRSchulz Rschulz2 RSchulzB RSchulzM Rubennn rue_XIV runT1ME Ry4an ryanlecompte saml scalabot scenefinale schone Scient ScriptDevil sdeinum SethTisue sevvie sgronblo Shadda Shapeshifter sharpobject Shepard shergill SHODAN siksi skchrko skchrko_ skrblr Skyr sl33v3 sleepynate slpsys Smol spiffxp_ Spin1987 spjt splittingfield sproates sproingie Squarism squeeks squimmy sritchie srm` stdDoubt steffo stevan__ stew stnly stonecolddevin strax stroan_ suiside supersym SuperTux88 supki tanner taylr tazle_ teamon_ tessi texray theatrus thereisnospoon timemage tixxit tnks Tok-A-Mak tomh- tomku topi` toudi travisbrady tsinnema tupshin twoism ultiprosan verma Voomer Voomer2 vpm vsayer_ w0rp waerloga wagle wajiii wallclockbuilder weie whaley woshty Xaseron xastey xav xeno Xorlev xplat yacks yan_ yoong zacharypch zakora Zol zuzkins]
2013-05-08 21:56:25	--	Channel #scala: 402 nicks (0 ops, 0 halfops, 0 voices, 402 normals)
2013-05-08 21:56:27	--	Mode #scala [+nt]
2013-05-08 21:56:27	--	Channel created on Sun, 28 Jan 2007 23:58:41
2013-05-08 21:56:31	<--	cybernd (~cybernd@85-127-116-142.dynamic.xdsl-line.inode.at) has quit (Quit: running away)
2013-05-08 21:58:41	<--	lizzin_ (~b@c-24-14-148-164.hsd1.il.comcast.net) has quit (Ping timeout: 255 seconds)
2013-05-08 21:58:43	<--	moops (~username@unaffiliated/moops) has quit (Quit: Leaving.)
2013-05-08 21:59:05	-->	moops (~username@adsl-74-243-160-32.ard.bellsouth.net) has joined #scala
2013-05-08 21:59:05	<--	moops (~username@adsl-74-243-160-32.ard.bellsouth.net) has quit (Changing host)
2013-05-08 21:59:05	-->	moops (~username@unaffiliated/moops) has joined #scala
2013-05-08 21:59:37	-->	tpolecat (~tpolecat@c-24-22-11-146.hsd1.or.comcast.net) has joined #scala
2013-05-08 22:01:32	<--	eklavya (~eklavya@180.151.121.61) has quit (Quit: Konversation terminated!)
2013-05-08 22:02:24	<--	Ashoat (~Ashoat@173.252.71.189) has quit (Ping timeout: 256 seconds)
2013-05-08 22:03:05	<--	runT1ME (~vmarquez@wsip-98-189-136-56.oc.oc.cox.net) has quit (Quit: runT1ME)
2013-05-08 22:08:34	<--	Leon (~Leon@s83-180-231-178.cust.tele2.se) has quit (Quit: Leon)
2013-05-08 22:08:55	<--	hdoshi (~hdoshi@66.54.159.166) has quit (Ping timeout: 260 seconds)
2013-05-08 22:09:26	-->	Watcher7 (~w@silly.tabby.cat) has joined #scala
2013-05-08 22:09:28	-->	runT1ME (~vmarquez@wsip-98-189-136-56.oc.oc.cox.net) has joined #scala
2013-05-08 22:10:04	-->	sl33v3_ (~sl33v3@114-36-224-43.dynamic.hinet.net) has joined #scala
2013-05-08 22:10:13	-->	bblfish (~bblfish@AAubervilliers-651-1-306-218.w83-114.abo.wanadoo.fr) has joined #scala
2013-05-08 22:10:20	<--	bblfish_ (~bblfish@AAubervilliers-651-1-306-218.w83-114.abo.wanadoo.fr) has quit (Read error: No route to host)
2013-05-08 22:11:08	<--	oscarvarto (~oscarvart@187.193.29.77) has quit (Quit: oscarvarto)
2013-05-08 22:11:43	<--	sl33v3 (~sl33v3@114-36-236-211.dynamic.hinet.net) has quit (Ping timeout: 260 seconds)
2013-05-08 22:12:07	--	sl33v3_ is now known as sl33v3
2013-05-08 22:12:57	<--	artemk (~artem@95.81.3.50) has quit (Ping timeout: 252 seconds)
2013-05-08 22:13:06	<--	zakora (~NC@tok69-4-82-236-111-173.fbx.proxad.net) has quit (Quit: Quit: Textual IRC Client: www.textualapp.com)
2013-05-08 22:13:11	<--	bblfish (~bblfish@AAubervilliers-651-1-306-218.w83-114.abo.wanadoo.fr) has quit (Read error: Connection reset by peer)
2013-05-08 22:13:28	-->	bblfish (~bblfish@AAubervilliers-651-1-306-218.w83-114.abo.wanadoo.fr) has joined #scala
2013-05-08 22:13:58	reactormonk	pfn, any nice description about them?
2013-05-08 22:14:24	pfn	nope, I haven't worked with macros at all
2013-05-08 22:14:26	-->	djspiewak (~djspiewak@70-91-169-68-BusName-Colorado.hfc.comcastbusiness.net) has joined #scala
2013-05-08 22:15:47	<--	przl (~przlrkt@p5B298E12.dip0.t-ipconnect.de) has quit (Ping timeout: 255 seconds)
2013-05-08 22:15:52	-->	m-jack (~chatzilla@209.226.201.250) has joined #scala
2013-05-08 22:16:18	reactormonk	any way to have mapping code => macro?
2013-05-08 22:18:01	OlegYch	mate what are you trying to screw
2013-05-08 22:18:07	-->	MarkMenard (~mark@rrcs-69-193-10-226.nys.biz.rr.com) has joined #scala
2013-05-08 22:18:16	<--	Spin1987 (~Adium@port-92-196-100-232.dynamic.qsc.de) has quit (Quit: Leaving.)
2013-05-08 22:18:22	<--	MarkMenard (~mark@rrcs-69-193-10-226.nys.biz.rr.com) has quit (Client Quit)
2013-05-08 22:18:45	-->	OwenOu (~Adium@ws171.acl.com) has joined #scala
2013-05-08 22:18:55	reactormonk	OlegYch, http://sprunge.us/JZiH that's the code that I intend to fix
2013-05-08 22:18:59	reactormonk	got the same about three times
2013-05-08 22:19:18	<--	wallclockbuilder (~wallclock@197.220.163.60) has quit (Ping timeout: 245 seconds)
2013-05-08 22:19:23	<--	pcarrier (~textual@unaffiliated/pcarrier) has quit (Quit: Computer has gone to sleep.)
2013-05-08 22:19:38	-->	mizu_no_oto (~textual@gw1.mcgraw-hill.com) has joined #scala
2013-05-08 22:20:00	OlegYch	where do you need methods generated?
2013-05-08 22:20:43	reactormonk	in akka actors
2013-05-08 22:20:49	reactormonk	three different ones
2013-05-08 22:20:59	reactormonk	not exactly those methods, as they don't work
2013-05-08 22:21:14	reactormonk	gotta switch them to Object{Input,Output}Stream
2013-05-08 22:21:32	tpolecat	i heard you can use a "function" to abstract out common functionality 
2013-05-08 22:21:42	tpolecat	probably crazy talk
2013-05-08 22:21:55	-->	artemk (~artem@95.81.3.50) has joined #scala
2013-05-08 22:21:59	<--	artemk (~artem@95.81.3.50) has quit (Client Quit)
2013-05-08 22:22:09	reactormonk	hum
2013-05-08 22:22:27	reactormonk	still involves about as much copy/pasting
2013-05-08 22:22:35	reactormonk	but fuck it
2013-05-08 22:23:41	<--	Eldariof-ru (~CLD@pppoe-221-128-dyn-sr.volgaline.ru) has quit (Read error: Operation timed out)
2013-05-08 22:24:08	mizu_no_oto	What's the difference, in Build.sbt, between saying lazy val foo = Project(  … , dependencies = Seq(bar) )  and saying lazy val foo = Project(…) dependsOn(bar)?  http://www.scala-sbt.org/release/docs/Getting-Started/Multi-Project talks about dependsOn, but I can't find the documentation for what dependencies does
2013-05-08 22:24:23	mizu_no_oto	Build.scala, I mean
2013-05-08 22:25:52	-->	oscarvarto (~oscarvart@187.193.29.77) has joined #scala
2013-05-08 22:26:54	OlegYch	def dependsOn(deps: ClasspathDep[ProjectReference]*): Project = copy(dependencies = dependencies ++ deps)
2013-05-08 22:27:29	-->	wallclockbuilder (~wallclock@41-66-207-155-dedicated.4u.com.gh) has joined #scala
2013-05-08 22:27:39	--	gpampara is now known as gpampara_off
2013-05-08 22:27:47	<--	pantsman (~pantsman@pdpc/supporter/active/pantsman) has quit (Ping timeout: 252 seconds)
2013-05-08 22:28:44	mizu_no_oto	ah
2013-05-08 22:28:53	<--	m-jack (~chatzilla@209.226.201.250) has quit (Ping timeout: 248 seconds)
2013-05-08 22:29:27	<--	tupshin (~quassel@207-237-102-71.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has quit (Remote host closed the connection)
2013-05-08 22:30:08	-->	rhysyngsun (~rhysyngsu@173-162-158-30-NewEngland.hfc.comcastbusiness.net) has joined #scala
2013-05-08 22:30:48	-->	agumonkey (~agu@101.217.72.86.rev.sfr.net) has joined #scala
2013-05-08 22:31:04	-->	wallcloc_ (~wallclock@us1x.mullvad.net) has joined #scala
2013-05-08 22:31:15	<--	matheus23 (~quassel@p4FDF31F5.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2013-05-08 22:32:07	mizu_no_oto	Are dependencies transitive?  That is to say, if bar dependsOn(baz % "test->test;compile->compile") and foo dependsOn(bar % "test->test;compile->compile"), does foo also get baz's test classes in its test classpath?
2013-05-08 22:32:13	<--	wallclockbuilder (~wallclock@41-66-207-155-dedicated.4u.com.gh) has quit (Ping timeout: 245 seconds)
2013-05-08 22:33:00	-->	tupshin (~quassel@207-237-102-71.c3-0.nyr-ubr1.nyr.ny.cable.rcn.com) has joined #scala
2013-05-08 22:33:44	<--	wallcloc_ (~wallclock@us1x.mullvad.net) has quit (Remote host closed the connection)
2013-05-08 22:34:04	-->	mawueli (~mawueli@199.115.115.212) has joined #scala
2013-05-08 22:34:04	--	`fogus is now known as fogus|gone
2013-05-08 22:34:09	<--	whaley (~whaley@97-82-192-22.dhcp.hckr.nc.charter.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2013-05-08 22:34:47	-->	jcazevedo (~jcazevedo@bl18-118-29.dsl.telepac.pt) has joined #scala
2013-05-08 22:34:50	-->	hdoshi (~hdoshi@66.54.159.166) has joined #scala
2013-05-08 22:36:29	<--	RedPunch (~RedPunch@159.140.254.103) has quit (Ping timeout: 255 seconds)
2013-05-08 22:37:08	-->	RedPunch (~RedPunch@159.140.254.103) has joined #scala
2013-05-08 22:37:19	-->	J1m (~jim@74.84.203.176) has joined #scala
2013-05-08 22:39:01	<--	lkba (~AndChat@abhx192.neoplus.adsl.tpnet.pl) has quit (Ping timeout: 248 seconds)
2013-05-08 22:39:47	OlegYch	dependencies are projects, not artifacts
2013-05-08 22:40:53	OlegYch	you probably want libraryDependecies setting
2013-05-08 22:41:16	OlegYch	both are transitive in their own sense though
2013-05-08 22:41:45	<--	recurrence (~recurrenc@ip66-2-41-118.z41-2-66.customer.algx.net) has quit (Quit: Computer has gone to sleep.)
2013-05-08 22:41:53	-->	whaley (~whaley@97-82-192-22.dhcp.hckr.nc.charter.com) has joined #scala
2013-05-08 22:42:14	<--	hdoshi (~hdoshi@66.54.159.166) has quit (Read error: Operation timed out)
2013-05-08 22:42:41	OlegYch	dunno how configurations for projects are handled..
2013-05-08 22:42:43	-->	pcarrier (~textual@unaffiliated/pcarrier) has joined #scala
2013-05-08 22:43:16	-->	biomunky (~biomunky@host-92-24-85-144.ppp.as43234.net) has joined #scala
2013-05-08 22:43:54	<--	bblfish (~bblfish@AAubervilliers-651-1-306-218.w83-114.abo.wanadoo.fr) has quit (Ping timeout: 264 seconds)
2013-05-08 22:44:01	mharrah	OlegYch: it's pretty similar.  mizu_no_oto: I think the snippet above should work, does it not?
2013-05-08 22:44:03	<--	jsuereth (~jsuereth@dynamic-acs-72-23-189-218.zoominternet.net) has quit (Remote host closed the connection)
2013-05-08 22:44:17	<--	mariaDa2 (~dark@213.238.10.41) has quit (Ping timeout: 252 seconds)
2013-05-08 22:44:44	-->	mawueli_ (~mawueli@41-66-207-155-dedicated.4u.com.gh) has joined #scala
2013-05-08 22:45:12	OlegYch	how about just make a usual project with classes you want to share and add it to libraryDependencies with test scope
2013-05-08 22:45:25	<--	nielsbusch (~textual@4606ds3-van.0.fullrate.dk) has quit (Quit: Computer has gone to sleep.)
2013-05-08 22:45:26	<--	tpolecat (~tpolecat@c-24-22-11-146.hsd1.or.comcast.net) has quit (Quit: is having a little nap now.)
2013-05-08 22:45:26	mizu_no_oto	mharrah: foo/test is failing to find some test classes from baz; trying to figure out why.
2013-05-08 22:45:29	<--	mawueli (~mawueli@199.115.115.212) has quit (Ping timeout: 255 seconds)
2013-05-08 22:46:06	OlegYch	sharing test classes is not a common practice
2013-05-08 22:46:36	mharrah	mizu_no_oto: ok, I'll try a test project
2013-05-08 22:46:40	mharrah	OlegYch: not rare either, though
2013-05-08 22:47:17	<--	mljsimone (~mljsimone@186.137.248.10) has quit (Ping timeout: 255 seconds)
2013-05-08 22:47:20	mharrah	https://github.com/sbt/sbt/blob/0.13/project/Sbt.scala#L39
2013-05-08 22:47:32	mharrah	(i.e., I do it)
2013-05-08 22:47:55	OlegYch	i would not advise that anyway
2013-05-08 22:48:26	mizu_no_oto	OlegYch:  There's a core subproject, and bridge (code to interface with several internal databases) depends on a few of core's setup test classes
2013-05-08 22:48:52	OlegYch	well move those setup classes into a common project
2013-05-08 22:49:00	-->	bblfish (~bblfish@AAubervilliers-651-1-306-218.w83-114.abo.wanadoo.fr) has joined #scala
2013-05-08 22:49:04	mharrah	what purpose does that serve?
2013-05-08 22:49:18	<--	mawueli_ (~mawueli@41-66-207-155-dedicated.4u.com.gh) has quit (Ping timeout: 245 seconds)
2013-05-08 22:49:19	OlegYch	otherwise you're sharing too much
2013-05-08 22:49:40	<--	Nitro (~nitro@unaffiliated/nitro) has quit (Quit: Hmm)
2013-05-08 22:50:03	-->	mawueli (~mawueli@41-66-207-155-dedicated.4u.com.gh) has joined #scala
2013-05-08 22:50:10	<--	bblfish (~bblfish@AAubervilliers-651-1-306-218.w83-114.abo.wanadoo.fr) has quit (Read error: Connection reset by peer)
2013-05-08 22:50:25	-->	joneshf-laptop (~joneshf@mail.concordusapps.com) has joined #scala
2013-05-08 22:50:27	-->	bblfish (~bblfish@AAubervilliers-651-1-306-218.w83-114.abo.wanadoo.fr) has joined #scala
2013-05-08 22:50:55	-->	m-jack (~chatzilla@207.61.57.13) has joined #scala
2013-05-08 22:51:54	mharrah	mizu_no_oto: a basic test project works for me
2013-05-08 22:52:10	mizu_no_oto	Hmm.  I'll continue poking into it, then
2013-05-08 22:53:04	<--	rhysyngsun (~rhysyngsu@173-162-158-30-NewEngland.hfc.comcastbusiness.net) has quit (Quit: rhysyngsun)
2013-05-08 22:53:50	mharrah	mizu_no_oto: you can run 'show test:internal-dependency-classpath' to verify that the classes directories from the other projects are on the classpath
2013-05-08 22:54:24	mizu_no_oto	mharrah: thanks
2013-05-08 22:54:34	<--	mawueli (~mawueli@41-66-207-155-dedicated.4u.com.gh) has quit (Ping timeout: 268 seconds)
2013-05-08 22:55:19	-->	daniel_hinojosa (~danno@67-0-179-87.albq.qwest.net) has joined #scala
2013-05-08 22:55:41	<--	dwins (~dwins@195-239-234-66.static.cosmoweb.net) has quit (Quit: WeeChat 0.4.0)
2013-05-08 22:55:59	-->	ATuin (~atuin@213.Red-83-61-152.dynamicIP.rima-tde.net) has joined #scala
2013-05-08 22:59:29	<--	zuzkins (~zuzkins@191.211.broadband3.iol.cz) has quit (Remote host closed the connection)
2013-05-08 23:00:09	-->	dcorbin (~dcorbin@c-76-97-197-9.hsd1.ga.comcast.net) has joined #scala
2013-05-08 23:00:10	<--	dcorbin (~dcorbin@c-76-97-197-9.hsd1.ga.comcast.net) has quit (Changing host)
2013-05-08 23:00:10	-->	dcorbin (~dcorbin@unaffiliated/dcorbin) has joined #scala
2013-05-08 23:01:15	-->	sritchie_ (~sritchie@8.25.197.25) has joined #scala
2013-05-08 23:02:27	-->	hdoshi (~hdoshi@66.54.159.166) has joined #scala
2013-05-08 23:02:29	<--	jkarlsson (~jonas@70-100-130-14.dsl1-field.roch.ny.frontiernet.net) has quit (Quit: jkarlsson)
2013-05-08 23:02:35	-->	tpolecat (~tpolecat@ip-64-134-130-17.public.wayport.net) has joined #scala
2013-05-08 23:02:39	-->	benkard (~benkard@host-188-174-218-217.customer.m-online.net) has joined #scala
2013-05-08 23:02:56	-->	jkarlsson (~jonas@70-100-130-14.dsl1-field.roch.ny.frontiernet.net) has joined #scala
2013-05-08 23:04:26	<--	sritchie (~sritchie@8.25.197.24) has quit (Ping timeout: 268 seconds)
2013-05-08 23:04:26	--	sritchie_ is now known as sritchie
2013-05-08 23:08:38	<--	infynyxx_ (~infynyxx@208.82.12.18) has quit (Remote host closed the connection)
2013-05-08 23:08:55	<--	fsvehla (~fsvehla@h081217181184.dyn.cm.kabsi.at) has quit (Quit: fsvehla)
2013-05-08 23:08:57	<--	twoism (~twoism@8.25.197.24) has quit (Remote host closed the connection)
2013-05-08 23:09:10	-->	s3b` (~shendows@2001:420:4:ed4f:80c1:eb99:db18:f064) has joined #scala
2013-05-08 23:09:11	s3b`	Hi :D
2013-05-08 23:09:34	<--	paddymahoney (~patrick@24.137.221.230) has quit (Remote host closed the connection)
2013-05-08 23:10:17	<--	saml (~sam@adfb12c6.cst.lightpath.net) has quit (Quit: Leaving)
2013-05-08 23:10:42	<--	hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Ping timeout: 252 seconds)
2013-05-08 23:12:23	-->	stephenjudkins (~textual@216.99.208.188) has joined #scala
2013-05-08 23:12:31	<--	dolio (~dolio@gw1.mcgraw-hill.com) has quit (Ping timeout: 256 seconds)
2013-05-08 23:12:37	<--	m-jack (~chatzilla@207.61.57.13) has quit (Ping timeout: 248 seconds)
2013-05-08 23:14:18	-->	infynyxx (~infynyxx@208.82.12.18) has joined #scala
2013-05-08 23:16:23	 *	adelbertc started learning haskell today, feels like he's going down a dark dark path
2013-05-08 23:17:27	sproingie	> fix error
2013-05-08 23:17:30	lambdabot	  "*Exception: *Exception: *Exception: *Exception: *Exception: *Exception: *E...
2013-05-08 23:17:36	reactormonk	:D
2013-05-08 23:17:57	qu1j0t3	adelbertc: it's fine if you have the right text.
2013-05-08 23:18:08	adelbertc	qu1j0t3: starting with LYAH
2013-05-08 23:18:13	qu1j0t3	adelbertc: if you don't facepalm regularly going "crumbs this is simple" you have the wrong text.
2013-05-08 23:18:21	qu1j0t3	well everyone recommends that.. i hope it's good. i never tried it.
2013-05-08 23:18:26	sproingie	LYAH is terrific.  gets a bit slow going later, but it's worth going through all the way
2013-05-08 23:18:46	sleepynate	qu1j0t3: it's actually great for how painfully slow it explains it to you
2013-05-08 23:18:48	-->	nielsbusch (~textual@4606ds3-van.0.fullrate.dk) has joined #scala
2013-05-08 23:18:48	qu1j0t3	adelbertc: you're going to enjoy the journey.
2013-05-08 23:18:52	qu1j0t3	sleepynate: cool!
2013-05-08 23:18:57	adelbertc	yeah, played around at tryhaskell just now, i really like it so far, at least syntax wise
2013-05-08 23:18:58	qu1j0t3	sleepynate: that's what i like about the Thompson book
2013-05-08 23:19:07	qu1j0t3	adelbertc: :)
2013-05-08 23:19:16	qu1j0t3	adelbertc: i used Hugs for all my exercises
2013-05-08 23:19:21	sleepynate	but it forces the explanation onto you so laboriously that it prevents the "i'm a programmer i am smart i know what i'm doing i'll just gloss over this bit"
2013-05-08 23:19:40	sleepynate	and makes it funny with goofy drawings along the way
2013-05-08 23:20:02	adelbertc	im "worried" (for lack of a better term) learning haskell will make me hate scala haha
2013-05-08 23:20:18	sleepynate	then you'll want to deploy something and come back
2013-05-08 23:20:38	sleepynate	i came from haskell to scala so i could actually get something into production :P
2013-05-08 23:20:42	sproingie	maybe the verbosity of scala's type system, but you'll come to love scalaz regardless
2013-05-08 23:20:51	sproingie	you will come to hate the scala stdlib
2013-05-08 23:20:54	-->	m-jack (~chatzilla@207.61.57.13) has joined #scala
2013-05-08 23:20:59	-->	cppexpert (~cppexpert@c-24-5-149-123.hsd1.ca.comcast.net) has joined #scala
2013-05-08 23:21:08	adelbertc	haha makes sense
2013-05-08 23:21:17	sproingie	i'm a fence sitter because i'm a mere dilettante in haskell
2013-05-08 23:21:42	sleepynate	the good news is, you'll come away with a much greater understanding of FP, even if you think it's old hat to you
2013-05-08 23:22:04	cppexpert	Hey guys! Could you please help me debug a bug in spray-json library ? Here is test that always leads to NullPointerException: http://pastebin.com/YQtApW1Y
2013-05-08 23:22:07	sleepynate	things like currying and partial application are so integral in haskell you don't even realize you're doing them some time
2013-05-08 23:22:19	<--	bitonic (~user@176.27.229.121) has quit (Ping timeout: 268 seconds)
2013-05-08 23:22:20	sleepynate	whereas in scala there is separate specific syntax
2013-05-08 23:22:26	cppexpert	NPE happens here https://github.com/spray/spray-json/blob/master/src/main/scala/spray/json/package.scala#L39  because "writer" is null.
2013-05-08 23:22:27	sleepynate	it will up your game
2013-05-08 23:22:39	<--	jimbaker (~jbaker@canonical/jimbaker) has quit (Changing host)
2013-05-08 23:22:39	-->	jimbaker (~jbaker@unaffiliated/jimbaker) has joined #scala
2013-05-08 23:22:45	sproingie	i've upped my game, up yours!
2013-05-08 23:22:47	sproingie	:)
2013-05-08 23:22:51	adelbertc	haha
2013-05-08 23:23:09	<--	RSchulzB (~Adium@67.218.117.3) has quit (Quit: Leaving.)
2013-05-08 23:23:10	adelbertc	just curious, what makes you say that when i want to deploy haskell ill come running back to scala?
2013-05-08 23:23:28	sleepynate	the end result of scala is some compiled class files
2013-05-08 23:23:28	adelbertc	or is this one of those "you'll see" things
2013-05-08 23:23:32	sleepynate	or a war file
2013-05-08 23:23:38	sleepynate	you drop those in tomcat
2013-05-08 23:23:43	sleepynate	or put them on any jvm
2013-05-08 23:23:45	sleepynate	BAM
2013-05-08 23:23:49	cppexpert	The object it's going to serialize at the moment when write equals null is "TestItem(None)". It should be serizlized but by JsonFormats implicit is not visible anymore.
2013-05-08 23:23:49	sleepynate	you're in business
2013-05-08 23:24:12	adelbertc	ah
2013-05-08 23:24:25	sleepynate	however.. trying to get cabal working with any stable kind of hackage clone to do actually build and deploy automatically will cause baldness
2013-05-08 23:24:36	adelbertc	yeah i suppose the JVM has had quite a lot of time to get their entire deployment process "right" - or at least right enough
2013-05-08 23:25:37	sleepynate	for example, to deploy haskell to heroku you need to set up a 64-bit ubuntu vm on 12.04, then set up C compilers and cabal and compile against those libs then take that binary and check it into git
2013-05-08 23:25:38	 *	dacc hates the java containers.
2013-05-08 23:25:45	dacc	give me a fat jar and embedded jetty any day
2013-05-08 23:25:59	s3b`	Hey, I have an array of my own object and I need to convert it to a seq of maps
2013-05-08 23:26:13	sleepynate	adelbertc: and don't even get me started on cabal vs sbt
2013-05-08 23:26:26	<--	kobain (~kobian@unaffiliated/kobain) has quit (Remote host closed the connection)
2013-05-08 23:26:29	adelbertc	ah yes, the prevalence of the JVM was always one of my biggest draws
2013-05-08 23:26:31	s3b`	can I array.map{}.toSeq or something?
2013-05-08 23:26:43	-->	kobain (~kobian@unaffiliated/kobain) has joined #scala
2013-05-08 23:26:46	<--	antoineB (~antoine@226.224.13.109.rev.sfr.net) has quit (Quit: Lost terminal)
2013-05-08 23:26:51	dacc	s3b`: probably array.toList first
2013-05-08 23:26:52	adelbertc	though i confess to only have ever written 1 java program in my life, and that was a prank program on my friend's machine
2013-05-08 23:27:01	sleepynate	adelbertc: not to mention... i'm using scala on android these days no sweat
2013-05-08 23:27:06	s3b`	dacc: does a toSeq exist?
2013-05-08 23:27:28	sleepynate	adelbertc: using haskell on android means tying into the NDK which is horrendous
2013-05-08 23:27:29	dacc	s3b`: actually yeah, looks better
2013-05-08 23:27:31	dacc	! Array(1,2).toSeq
2013-05-08 23:27:31	multibot_	 Seq[Int] = WrappedArray(1, 2)
2013-05-08 23:27:34	<--	sdeinum (~Spencer@dn-142-89-188-47.sjhc.london.on.ca) has quit (Quit: leaving)
2013-05-08 23:28:41	<--	sritchie (~sritchie@8.25.197.25) has quit (Quit: sritchie)
2013-05-08 23:30:25	s3b`	! Array(1, 2, 3).map { _ + 2 }
2013-05-08 23:30:26	multibot_	 Array[Int] = Array(3, 4, 5)
2013-05-08 23:30:28	s3b`	sweet
2013-05-08 23:30:32	s3b`	! Array(1, 2, 3).map { _ + 2 }.toList
2013-05-08 23:30:33	multibot_	 List[Int] = List(3, 4, 5)
2013-05-08 23:30:36	s3b`	great
2013-05-08 23:30:56	-->	Nekuromento (~Nekuromen@91.187.26.197) has joined #scala
2013-05-08 23:31:18	-->	tyoc213 (~tyoc213@189.135.138.242) has joined #scala
2013-05-08 23:32:12	adelbertc	sleepynate: did you get my private message?
2013-05-08 23:32:23	<--	infynyxx (~infynyxx@208.82.12.18) has quit (Remote host closed the connection)
2013-05-08 23:32:31	s3b`	dacc: Although it ends up in a WrappedArray. is that the same thing?
2013-05-08 23:32:44	s3b`	only reason I ask, is because I have to set it up a certain way to convert to json
2013-05-08 23:33:54	tyoc213	join #mercurial
2013-05-08 23:34:10	<--	xeno (~ixeno@106.80-203-229.nextgentel.com) has quit (Read error: Connection reset by peer)
2013-05-08 23:34:37	-->	xeno (~ixeno@80.203.229.106) has joined #scala
2013-05-08 23:34:57	<--	oscarvarto (~oscarvart@187.193.29.77) has quit (Quit: oscarvarto)
2013-05-08 23:36:01	<--	kobain (~kobian@unaffiliated/kobain) has quit (Remote host closed the connection)
2013-05-08 23:36:21	-->	sritchie (~sritchie@8.25.197.25) has joined #scala
2013-05-08 23:37:05	-->	kobain (~kobian@unaffiliated/kobain) has joined #scala
2013-05-08 23:37:25	-->	bitonic (~user@176.27.229.121) has joined #scala
2013-05-08 23:37:53	<--	atoll (~atoll@84-74-102-216.dclient.hispeed.ch) has quit (Quit: WeeChat 0.4.0)
2013-05-08 23:39:41	<--	joev (~joev@pdpc/supporter/active/joev) has quit (Quit: leaving)
2013-05-08 23:40:17	tpolecat	ryanlecompte: fyi https://github.com/tpolecat/examples/blob/master/src/main/scala/eg/ZipMany.scala .. thanks again
2013-05-08 23:40:33	-->	purak (~burak@78.178.223.160) has joined #scala
2013-05-08 23:41:11	ryanlecompte	tpolecat: so cool! thanks
2013-05-08 23:42:58	<--	kobain (~kobian@unaffiliated/kobain) has quit (Remote host closed the connection)
2013-05-08 23:43:42	-->	kobain (~kobian@unaffiliated/kobain) has joined #scala
2013-05-08 23:45:00	-->	LennyLinux (~LennyLinu@151.64.1.88) has joined #scala
2013-05-08 23:45:48	<--	lazrahl_ (~lazrahl@atlanta.tstllc.net) has quit (Remote host closed the connection)
2013-05-08 23:46:12	<--	tpolecat (~tpolecat@ip-64-134-130-17.public.wayport.net) has quit (Quit: is having a little nap now.)
2013-05-08 23:47:28	<--	sleepynate (~sleepynat@199.16.190.194) has quit (Remote host closed the connection)
2013-05-08 23:47:41	<--	ATuin (~atuin@213.Red-83-61-152.dynamicIP.rima-tde.net) has quit (Quit: WeeChat 0.4.0)
2013-05-08 23:48:29	<--	io2 (~io2@unaffiliated/irrequietus) has quit
2013-05-08 23:48:47	<--	m-jack (~chatzilla@207.61.57.13) has quit (Ping timeout: 260 seconds)
2013-05-08 23:49:37	-->	Ashoat (~Ashoat@173.252.71.189) has joined #scala
2013-05-08 23:49:41	-->	elek_ (elek_@c-76-111-252-247.hsd1.fl.comcast.net) has joined #scala
2013-05-08 23:49:45	<--	Apocalisp (~textual@c-174-62-237-65.hsd1.ma.comcast.net) has quit (Quit: Computer has gone to sleep.)
2013-05-08 23:50:43	-->	taylr_ (~taylr@static-96-239-100-47.nycmny.fios.verizon.net) has joined #scala
2013-05-08 23:50:49	<--	Osho (~jevan@169.237.131.44) has quit (Quit: Leaving.)
2013-05-08 23:53:02	<--	pfn (pfnguyen@socal.hanhuy.com) has quit (Ping timeout: 252 seconds)
2013-05-08 23:53:20	<--	pmenon (~pmenon@75.98.196.98) has quit (Read error: Operation timed out)
2013-05-08 23:53:32	-->	RSchulzB (~Adium@67.218.117.3) has joined #scala
2013-05-08 23:53:52	<--	J1m (~jim@74.84.203.176) has left #scala ("Leaving")
2013-05-08 23:53:59	-->	talios (~talios@akl.smx.co.nz) has joined #scala
2013-05-08 23:54:09	<--	taylr (~taylr@static-96-239-100-47.nycmny.fios.verizon.net) has quit (Ping timeout: 252 seconds)
2013-05-08 23:54:28	-->	dobblego (~nobody@220-245-107-64.static.tpgi.com.au) has joined #scala
2013-05-08 23:56:58	-->	doctau (doctau@nat/redhat/x-khgwdympeqwduooe) has joined #scala
2013-05-08 23:57:15	-->	tsan (~Adium@wsip-68-96-157-236.no.no.cox.net) has joined #scala
2013-05-08 23:57:18	<--	befuddled (~brian@cpc2-aztw24-2-0-cust618.aztw.cable.virginmedia.com) has quit (Read error: Connection reset by peer)
2013-05-08 23:59:18	<--	nielsbusch (~textual@4606ds3-van.0.fullrate.dk) has quit (Quit: Computer has gone to sleep.)
2013-05-09 00:00:20	-->	Nitro (~nitro@unaffiliated/nitro) has joined #scala
2013-05-09 00:01:27	<--	biomunky (~biomunky@host-92-24-85-144.ppp.as43234.net) has quit (Quit: biomunky)
2013-05-09 00:01:50	<--	mizu_no_oto (~textual@gw1.mcgraw-hill.com) has quit (Ping timeout: 252 seconds)
2013-05-09 00:01:58	-->	Agro (~Agro@108-79-20-223.lightspeed.hstntx.sbcglobal.net) has joined #scala
2013-05-09 00:02:15	 *	sproingie sighs, did alter table add column on production mysql db, forgot how grotesquely slow as fuck mysql is about that.
2013-05-09 00:02:44	sproingie	i fear to interrupt it, it'll probably corrupt the whole damn thing
2013-05-09 00:02:50	squeeks	it's faster to back the table up, alter, and restore it
2013-05-09 00:02:54	<--	tsan (~Adium@wsip-68-96-157-236.no.no.cox.net) has quit (Quit: Leaving.)
2013-05-09 00:03:07	pfurla	sproingie: how big is the table?
2013-05-09 00:03:07	sproingie	bad habit, i keep thinking i'm working with a db that doesn't suck
2013-05-09 00:03:22	pfurla	is it in use?
2013-05-09 00:03:25	sproingie	not sure, few thousand records
2013-05-09 00:03:31	sproingie	used sporadically
2013-05-09 00:03:36	squeeks	you should be doing it irregardless of the DB.
2013-05-09 00:03:40	pfurla	really? how is the load?
2013-05-09 00:04:06	stephenjudkins	sproingie: it won't corrupt the whole damn thing
2013-05-09 00:04:18	-->	dolio (~dolio@c-174-63-84-118.hsd1.ma.comcast.net) has joined #scala
2013-05-09 00:04:22	squeeks	That depends… if it's MyISAM or not.
2013-05-09 00:04:32	pfurla	InnoDB
2013-05-09 00:04:51	stephenjudkins	and yes, mysql *sucks* for this kind of thing. if it's under constant load, after a certain size you basically need to treat it as a schemaless DB
2013-05-09 00:05:00	stephenjudkins	postgresql ftw
2013-05-09 00:05:19	pfurla	sproingie: I always could stop the systems before doing these changes. a luxury not every has
2013-05-09 00:05:31	qu1j0t3	don't use MyISAM. period.
2013-05-09 00:05:37	squeeks	I've got a DB at 450Gb and I'm not yet at the "needs to have less normalisation" phase.
2013-05-09 00:05:44	-->	jrbalderrama (~Thunderbi@181.114.95.162) has joined #scala
2013-05-09 00:05:45	<--	jrbalderrama (~Thunderbi@181.114.95.162) has quit (Remote host closed the connection)
2013-05-09 00:05:59	-->	jrbalderrama (~Thunderbi@181.114.95.162) has joined #scala
2013-05-09 00:06:13	sproingie	it's an innodb table.  rest of the crap on there is myisam but i made this one innodb
2013-05-09 00:06:15	<--	headius (~headius@65-128-131-102.mpls.qwest.net) has quit (Quit: headius)
2013-05-09 00:06:34	stephenjudkins	squeeks: so you're OK with a complete read-and-write lock on a table for many minutes every time you alter the schema?
2013-05-09 00:06:34	sproingie	guess i feel safer stopping it.  i'll just give it a few more minutes i guess.
2013-05-09 00:06:56	-->	k7k1 (~k7k@77-254-210-48.adsl.inetia.pl) has joined #scala
2013-05-09 00:07:25	squeeks	I don't alter schema every day. I do it maybe a few times a year.
2013-05-09 00:07:33	<--	k7k (~k7k@77-254-210-48.adsl.inetia.pl) has quit (Ping timeout: 248 seconds)
2013-05-09 00:07:47	pfurla	sproingie: is the system responding? whatever consuming the db
2013-05-09 00:07:51	<--	agumonkey (~agu@101.217.72.86.rev.sfr.net) has quit (Ping timeout: 276 seconds)
2013-05-09 00:07:57	<--	folone (~folone@brln-4db80927.pool.mediaWays.net) has quit (Ping timeout: 268 seconds)
2013-05-09 00:08:09	sproingie	eh i just stopped it, truncated the table, and added it.  it's just long-term cache data that was misbehaving anyway
2013-05-09 00:08:21	squeeks	and when I do alter schema, I take the box out of replication, truncate, change, replay. Do that across however many machines and I have zero downtime as a whole, and don't really care about each one 15-20+ minutes.
2013-05-09 00:08:22	sproingie	no one's gonna miss it
2013-05-09 00:08:54	-->	neutrino_ (~neutrino@p4FD0EB79.dip0.t-ipconnect.de) has joined #scala
2013-05-09 00:11:46	<--	RSchulzB (~Adium@67.218.117.3) has quit (Quit: Leaving.)
2013-05-09 00:11:55	<--	stdDoubt (~ptiago@a79-169-41-79.cpe.netcabo.pt) has quit (Quit: Leaving)
2013-05-09 00:12:24	stephenjudkins	ok, not going to get into a postgres vs mysql nerd slapfight here. but all that sounds like an insane and annoying amount of work, vs postgresql which just works.
2013-05-09 00:12:31	<--	enebo (~enebo@c-75-73-8-169.hsd1.mn.comcast.net) has quit (Quit: enebo)
2013-05-09 00:12:47	cppexpert	Guys, could you please tell me why my top-level implicit value is not being used and instead some evidence$x$y field is used as I go deeper in call-stack ? I described test code here: http://goo.gl/v6zgX
2013-05-09 00:13:12	OlegYch	in my experience mysql master-slave or master-master replication is a pain to maintain
2013-05-09 00:13:15	squeeks	When you're reaching half a Tb in a single database, I really doubt anything will "just work". Some will be less painful than others.
2013-05-09 00:13:24	OlegYch	is it any better with postgres?
2013-05-09 00:13:41	<--	Nosceteipsum (~Nosceteip@d122243.adsl.hansenet.de) has quit (Ping timeout: 256 seconds)
2013-05-09 00:13:42	-->	atoll (~atoll@84-74-102-216.dclient.hispeed.ch) has joined #scala
2013-05-09 00:14:06	-->	Nosceteipsum (~Nosceteip@d122243.adsl.hansenet.de) has joined #scala
2013-05-09 00:14:12	stephenjudkins	OlegYch: postgresql replication is more difficult to set up than mysql's, but considerably more robust
2013-05-09 00:14:14	runT1ME	size is less important than row count, i'm imagining
2013-05-09 00:14:50	OlegYch	cppexpert: where is implicit value?
2013-05-09 00:15:04	-->	Pranz (~Zorro_24@c80-217-216-30.bredband.comhem.se) has joined #scala
2013-05-09 00:15:09	cppexpert	OlegYch: implicit val testItemFormat: RootJsonFormat[TestItem] = jsonFormat(TestItem, "subitems")
2013-05-09 00:15:18	OlegYch	oh
2013-05-09 00:16:10	<--	oncenull (~oncenull@200.69.203.221) has quit (Remote host closed the connection)
2013-05-09 00:16:53	OlegYch	but where is the implicit parameter?
2013-05-09 00:17:35	OlegYch	your TestItem doesn't seem to have any
2013-05-09 00:17:51	-->	RSchulzB (~Adium@67.218.117.3) has joined #scala
2013-05-09 00:17:54	cppexpert	OlegYch: It's here I believe:   def toJson(implicit writer: JsonWriter[T]): JsValue = writer.write(any)
2013-05-09 00:20:10	OlegYch	dunno how spray-json works, but evidence$bla is just a way to store implicit value inserted by compiler at the point of invocation
2013-05-09 00:20:15	cppexpert	OlegYch: I just don't understand what's this bested evidence$x$y business is about.
2013-05-09 00:20:28	-->	twoism (~twoism@8.25.197.24) has joined #scala
2013-05-09 00:20:28	cppexpert	OlegYch: But why is it nested ?
2013-05-09 00:20:47	OlegYch	i don't understand what's nested
2013-05-09 00:20:56	cppexpert	OlegYch: Let me show you screenshot. One second.
2013-05-09 00:21:47	cppexpert	OlegYch: http://snag.gy/xOSSs.jpg
2013-05-09 00:23:22	OlegYch	no idea what that is, are you sure it's causing your nullpointer?
2013-05-09 00:23:44	cppexpert	OlegYch: Yes. So every time app enters toJson() it takes reference to implicit from evidence field. Eventually it reaches null and crashes.
2013-05-09 00:24:21	<--	oehman (~martinohm@c-1bf5e253.06-10-686c6d10.cust.bredbandsbolaget.se) has quit (Quit: Leaving...)
2013-05-09 00:24:58	<--	MCamou (~Adium@176.3.219.87.dynamic.jazztel.es) has quit (Quit: Leaving.)
2013-05-09 00:25:07	OlegYch	do you have implicit val boobs = null anywhere?
2013-05-09 00:25:51	s3b`	lolol
2013-05-09 00:25:52	cppexpert	OlegYch: I don't but who knows what spray-json creators put there. Let me grep "= null" in sources.
2013-05-09 00:26:00	cppexpert	s3b`: yeah yeah :)
2013-05-09 00:27:00	cppexpert	OlegYch: no signs of "= null" in spray-json sources.
2013-05-09 00:27:27	runT1ME	uh
2013-05-09 00:27:38	runT1ME	somehow I don't think they'd set something to null on purpose
2013-05-09 00:27:45	runT1ME	it's possible that the reference it points to is null
2013-05-09 00:28:20	s3b`	I just glanced over and saw "boobs"
2013-05-09 00:28:25	cppexpert	runT1ME: Do know know mechanism how this artificial field "evidence$x$y" gets created and by whom ?
2013-05-09 00:28:52	OlegYch	i guess they are invoking toJson and explicitly passing something that evaluates to null
2013-05-09 00:28:54	runT1ME	by scalac most likely
2013-05-09 00:29:28	cppexpert	runT1ME: Googling tells me it's related to context bound but reading relevant chapter in the book didn't clarify it to me. I'm just curious why it's nested.
2013-05-09 00:29:43	<--	oriig (~ilia@78-83-56-21.spectrumnet.bg) has quit (Remote host closed the connection)
2013-05-09 00:29:45	OlegYch	if they are using reflection it's very unlikely that such recursive type definitions will work out of the box
2013-05-09 00:29:57	<--	RSchulzB (~Adium@67.218.117.3) has quit (Quit: Leaving.)
2013-05-09 00:30:52	 *	cppexpert sighs
2013-05-09 00:30:53	<--	travisbrady (~travisbra@office.massrel.com) has quit (Quit: travisbrady)
2013-05-09 00:32:18	<--	ramses_ (~ramses@cl-1301.bru-01.be.sixxs.net) has quit (Ping timeout: 256 seconds)
2013-05-09 00:33:40	-->	SingingBoyo (~brandon@d154-5-190-48.bchsia.telus.net) has joined #scala
2013-05-09 00:33:54	<--	taylr_ (~taylr@static-96-239-100-47.nycmny.fios.verizon.net) has quit (Remote host closed the connection)
2013-05-09 00:35:58	-->	RSchulzB (~Adium@67.218.117.3) has joined #scala
2013-05-09 00:36:23	-->	andrewaclt (~andrew@cpe-174-099-108-247.nc.res.rr.com) has joined #scala
2013-05-09 00:36:24	<--	RedPunch (~RedPunch@159.140.254.103) has quit (Remote host closed the connection)
2013-05-09 00:37:00	-->	pfn (pfnguyen@socal.hanhuy.com) has joined #scala
2013-05-09 00:37:31	<--	benkard (~benkard@host-188-174-218-217.customer.m-online.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2013-05-09 00:37:33	-->	tpolecat (~tpolecat@c-24-22-11-146.hsd1.or.comcast.net) has joined #scala
2013-05-09 00:38:07	<--	milessabin (~miles@private.milessabin.com) has quit (Ping timeout: 246 seconds)
2013-05-09 00:39:43	<--	Ashoat (~Ashoat@173.252.71.189) has quit (Ping timeout: 245 seconds)
2013-05-09 00:40:45	OlegYch	you might try argonaut which gives more explicit control over how stuff is done
2013-05-09 00:41:06	-->	arn (~arn@192.210.214.195) has joined #scala
2013-05-09 00:41:06	--	arn is now known as shrewdu
2013-05-09 00:41:37	-->	Ashoat (~Ashoat@66-192-186-66.static.twtelecom.net) has joined #scala
2013-05-09 00:42:35	-->	infynyxx (~infynyxx@208.82.12.18) has joined #scala
2013-05-09 00:42:53	<--	whaley (~whaley@97-82-192-22.dhcp.hckr.nc.charter.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2013-05-09 00:43:20	cppexpert	OlegYch: Yeah. I'l try it. It's just funny that I'm switching from one json library to another. I began with json4s but after it failed to parse 35Mb json I decided to try spray-json.
2013-05-09 00:43:42	OlegYch	was json4s slow?
2013-05-09 00:43:59	OlegYch	i think it has pull api support..
2013-05-09 00:44:43	dobblego	we have been here over and over
2013-05-09 00:45:31	cppexpert	dobblego: Please don't start jacking off here again :)
2013-05-09 00:45:43	dobblego	and yes, like others said, he is an idiot
2013-05-09 00:46:05	cppexpert	dobblego: and yes, looks like you still haven't gotten laid :)
2013-05-09 00:46:15	<--	lcfrs (~lcfrs@8.25.197.24) has quit (Remote host closed the connection)
2013-05-09 00:46:44	dobblego	told yas :)
2013-05-09 00:47:27	cppexpert	dobblego: But it's funny that you refer to yourself as "others". I thinkg there is term for it psychiatry for it but I don't remember it :)
2013-05-09 00:47:43	--	flazz is now known as flazz_gone
2013-05-09 00:48:01	-->	lcfrs (~lcfrs@8.25.197.24) has joined #scala
2013-05-09 00:49:52	<--	gdey (~gdey@72-34-68-226.skyriver.net) has quit (Ping timeout: 256 seconds)
2013-05-09 00:50:04	dobblego	hmm how you say? the dimmest of sims?
2013-05-09 00:50:23	squeeks	"beer short of a six pack"
2013-05-09 00:52:21	<--	Nosceteipsum (~Nosceteip@d122243.adsl.hansenet.de) has quit (Quit: This computer has gone to sleep)
2013-05-09 00:52:25	<--	infynyxx (~infynyxx@208.82.12.18) has quit (Remote host closed the connection)
2013-05-09 00:52:30	<--	runT1ME (~vmarquez@wsip-98-189-136-56.oc.oc.cox.net) has quit (Quit: runT1ME)
2013-05-09 00:57:15	<--	neutrino_ (~neutrino@p4FD0EB79.dip0.t-ipconnect.de) has quit (Ping timeout: 276 seconds)
2013-05-09 00:57:22	<--	atoll (~atoll@84-74-102-216.dclient.hispeed.ch) has quit (Ping timeout: 276 seconds)
2013-05-09 00:57:30	<--	Rovak (~rovak@188.142.3.79) has quit (Quit: Konversation terminated!)
2013-05-09 00:58:30	<--	Nicol2 (Nicol@122-49-169-138.ip.adam.com.au) has quit (Ping timeout: 252 seconds)
2013-05-09 00:59:15	<--	jrbalderrama (~Thunderbi@181.114.95.162) has quit (Quit: jrbalderrama)
2013-05-09 01:01:08	cppexpert	Whatever, dude :) We have proverb about people like you. Closest English translation would be "Аny bauble of folly will keep baby jolly".
2013-05-09 01:01:40	squeeks	"Whatever floats your boat"
2013-05-09 01:04:05	-->	lkba (~AndChat@bqm185.neoplus.adsl.tpnet.pl) has joined #scala
2013-05-09 01:05:24	-->	agumonkey (~agu@101.217.72.86.rev.sfr.net) has joined #scala
2013-05-09 01:05:27	<--	hdoshi (~hdoshi@66.54.159.166) has quit (Quit: leaving)
2013-05-09 01:06:05	-->	hdoshi (~hdoshi@66.54.159.166) has joined #scala
2013-05-09 01:06:57	-->	runT1ME (~vmarquez@wsip-98-189-26-19.oc.oc.cox.net) has joined #scala
2013-05-09 01:08:16	moops	found: Array[Array[Int]], required: IndexedSeq[IndexedSeq[Int]]
2013-05-09 01:08:25	moops	could swear this works in other places
2013-05-09 01:09:04	<--	djspiewak (~djspiewak@70-91-169-68-BusName-Colorado.hfc.comcastbusiness.net) has quit (Quit: djspiewak)
2013-05-09 01:09:19	<--	OOPMan (~adamj@105-236-113-162.access.mtnbusiness.co.za) has quit (Remote host closed the connection)
2013-05-09 01:09:37	<--	k7k1 (~k7k@77-254-210-48.adsl.inetia.pl) has quit (Read error: Connection reset by peer)
2013-05-09 01:09:43	dobblego	Arrays are invariant, so no
2013-05-09 01:09:59	dobblego	you have probably seen Array[IndexedSeq[Int]]
2013-05-09 01:10:16	moops	whose idea was that!
2013-05-09 01:10:20	moops	i will fight them irl
2013-05-09 01:10:23	dobblego	java's
2013-05-09 01:10:28	moops	i will fight java
2013-05-09 01:10:30	dobblego	indirectly
2013-05-09 01:10:39	dobblego	java is the second dimmest of all sims
2013-05-09 01:12:12	tpolecat	array can be converted to indexedseq, but the compiler will not map it across your array for you
2013-05-09 01:12:16	<--	stephenjudkins (~textual@216.99.208.188) has quit (Quit: Textual IRC Client: www.textualapp.com)
2013-05-09 01:13:51	tpolecat	! Array(Array(1)).map(a => a : IndexedSeq[Int]) : IndexedSeq[IndexedSeq[Int]]
2013-05-09 01:13:52	multibot_	 IndexedSeq[IndexedSeq[Int]] = ArraySeq(WrappedArray(1))
2013-05-09 01:13:52	<--	gowlin (~rgolbeck@debian/developer/rmgolbeck) has quit (Read error: Connection reset by peer)
2013-05-09 01:14:00	-->	miclorb (~miclorb@ppp121-44-136-248.lns20.syd7.internode.on.net) has joined #scala
2013-05-09 01:14:04	tpolecat	:-\
2013-05-09 01:14:28	moops	that made it happy
2013-05-09 01:14:31	moops	thanks
2013-05-09 01:14:52	pfurla	to?
2013-05-09 01:14:53	moops	what is that syntax even called
2013-05-09 01:14:55	moops	never seen it before
2013-05-09 01:14:59	-->	stephenjudkins (~textual@216.99.208.188) has joined #scala
2013-05-09 01:15:16	moops	value : type
2013-05-09 01:15:22	moops	when its not a declaration
2013-05-09 01:15:26	dobblego	syntax
2013-05-09 01:15:27	pfurla	! Array(Array(1)).map { _.to[IndexedSeq } to[IndexSeq]
2013-05-09 01:15:27	multibot_	 error: ']' expected but '}' found.
2013-05-09 01:15:28	multibot_	        Array(Array(1)).map { _.to[IndexedSeq } to[IndexSeq]
2013-05-09 01:15:29	tpolecat	it's an ascription
2013-05-09 01:15:29	multibot_	                                              ^
2013-05-09 01:15:31	multibot_	 <console>:1: error: ';' expected but '[' found.
2013-05-09 01:15:31	multibot_	        Array(Array(1)).map { _.to[IndexedSeq } to[IndexSeq]
2013-05-09 01:15:36	pfurla	! Array(Array(1)).map { _.to[IndexedSeq] } to[IndexSeq]
2013-05-09 01:15:36	multibot_	 error: ';' expected but '[' found.
2013-05-09 01:15:37	multibot_	        Array(Array(1)).map { _.to[IndexedSeq] } to[IndexSeq]
2013-05-09 01:15:38	multibot_	                                                   ^
2013-05-09 01:15:54	pfurla	! Array(Array(1)) map { _.to[IndexedSeq] } to[IndexSeq]
2013-05-09 01:15:54	multibot_	 error: ';' expected but '[' found.
2013-05-09 01:15:55	multibot_	        Array(Array(1)) map { _.to[IndexedSeq] } to[IndexSeq]
2013-05-09 01:15:56	multibot_	                                                   ^
2013-05-09 01:15:56	Lymia	! Array(Array(1)).map  _.to[IndexedSeq] }.to[IndexSeq]
2013-05-09 01:15:57	multibot_	 error: ';' expected but '.' found.
2013-05-09 01:15:58	multibot_	        Array(Array(1)).map  _.to[IndexedSeq] }.to[IndexSeq]
2013-05-09 01:15:59	multibot_	                              ^
2013-05-09 01:16:01	<--	Nitro (~nitro@unaffiliated/nitro) has quit (Quit: Hmm)
2013-05-09 01:16:03	tpolecat	jebus
2013-05-09 01:16:06	tpolecat	an ascription can fix or widen the type, or trigger an implicit conversion 
2013-05-09 01:16:08	Lymia	Ah..?
2013-05-09 01:16:09	tpolecat	it's not a cast
2013-05-09 01:16:14	<--	andrewaclt (~andrew@cpe-174-099-108-247.nc.res.rr.com) has quit (Quit: Leaving)
2013-05-09 01:16:15	Lymia	! Array(Array(1)).map{ _.to[IndexedSeq] }.to[IndexSeq]
2013-05-09 01:16:15	multibot_	 error: not found: type IndexSeq
2013-05-09 01:16:16	multibot_	               Array(Array(1)).map{ _.to[IndexedSeq] }.to[IndexSeq]
2013-05-09 01:16:17	multibot_	                                                          ^
2013-05-09 01:16:23	s3b`	! var x = Array[Int](1, 2, 3, 4, 5, 6, 7)
2013-05-09 01:16:23	tpolecat	Indexed
2013-05-09 01:16:23	multibot_	 x: Array[Int] = Array(1, 2, 3, 4, 5, 6, 7)
2013-05-09 01:16:25	s3b`	!x
2013-05-09 01:16:35	s3b`	does it not work multiple
2013-05-09 01:16:38	s3b`	k
2013-05-09 01:16:38	pfurla	! List(1,2,3,4).to[IndexSeq]
2013-05-09 01:16:38	multibot_	 error: not found: type IndexSeq
2013-05-09 01:16:39	multibot_	               List(1,2,3,4).to[IndexSeq]
2013-05-09 01:16:40	multibot_	                                ^
2013-05-09 01:16:47	pfurla	! List(1,2,3,4).to[IndexedSeq]
2013-05-09 01:16:47	multibot_	 IndexedSeq[Int] = Vector(1, 2, 3, 4)
2013-05-09 01:17:08	pfurla	! Array(Array(1)) map { _.to[IndexedSeq] }
2013-05-09 01:17:08	multibot_	 Array[IndexedSeq[Int]] = Array(Vector(1))
2013-05-09 01:17:29	s3b`	! var x = Array[Int](1, 2, 3, 4, 5, 6, 7);  x.filter(i => i == 3).patch(0, Seq(10), 0)
2013-05-09 01:17:30	multibot_	 x: Array[Int] = Array(1, 2, 3, 4, 5, 6, 7)
2013-05-09 01:17:31	multibot_	 Array[Int] = Array(10, 3)
2013-05-09 01:17:42	pfurla	patch?
2013-05-09 01:18:31	s3b`	I have an array of items, and I need to be able to change a variable on one of them (yeah I know, not the scala way to do things)
2013-05-09 01:19:07	pfurla	! x(1) = 10
2013-05-09 01:19:11	dobblego	it's more about the easy way than the scala way
2013-05-09 01:19:11	pfurla	! x
2013-05-09 01:19:12	multibot_	 Array[Int] = Array(1, 10, 3, 4, 5, 6, 7)
2013-05-09 01:19:33	s3b`	How can I get the index?
2013-05-09 01:19:37	pfurla	or, feed the changes
2013-05-09 01:19:44	pfurla	! x.find(10)
2013-05-09 01:19:44	multibot_	 error: type mismatch;
2013-05-09 01:19:44	s3b`	right now I have, item_list.filter( i => i.uid == id)
2013-05-09 01:19:45	multibot_	  found   : Int(10)
2013-05-09 01:19:46	multibot_	  required: Int => Boolean
2013-05-09 01:19:47	multibot_	               x.find(10)
2013-05-09 01:19:48	multibot_	                      ^
2013-05-09 01:19:53	pfurla	ops
2013-05-09 01:19:58	pfurla	! x.find(_==10)
2013-05-09 01:19:59	multibot_	 Option[Int] = Some(10)
2013-05-09 01:20:04	pfurla	! x.find(_===10)
2013-05-09 01:20:04	multibot_	 Option[Int] = Some(10)
2013-05-09 01:20:35	s3b`	That returns the item but how do I get the index to () update it
2013-05-09 01:20:48	pfurla	! x.indexOf(_===10)
2013-05-09 01:20:48	multibot_	 error: missing parameter type for expanded function ((x$1) => x$1.$eq$eq$eq(10))
2013-05-09 01:20:49	multibot_	               x.indexOf(_===10)
2013-05-09 01:20:50	multibot_	                         ^
2013-05-09 01:20:55	pfurla	! x.indexOf(10)
2013-05-09 01:20:55	multibot_	 Int = 1
2013-05-09 01:20:56	squeeks	>:[
2013-05-09 01:21:04	pfurla	d'oh
2013-05-09 01:21:06	dobblego	update(x) compose moveRight(p) 
2013-05-09 01:21:16	pfurla	moveRight?
2013-05-09 01:21:26	dobblego	sorry, I am going it the easy way on principle :)
2013-05-09 01:21:40	dobblego	I will watch from here!
2013-05-09 01:21:46	dobblego	s/going/doing
2013-05-09 01:22:06	s3b`	!case class ItemObj(id: Int)
2013-05-09 01:22:36	s3b`	!var x = Array[ItemObj](new ItemObj(10), new ItemObj(5))
2013-05-09 01:22:40	s3b`	!x
2013-05-09 01:22:49	s3b`	gr. what's that scalify site
2013-05-09 01:22:55	-->	gowlin (~rgolbeck@debian/developer/rmgolbeck) has joined #scala
2013-05-09 01:22:59	s3b`	scala fiddle
2013-05-09 01:23:01	tpolecat	you have to put a space after the !
2013-05-09 01:23:03	pfurla	you need spaces
2013-05-09 01:23:06	s3b`	oh
2013-05-09 01:23:13	s3b`	! case class ItemObj(id: Int)
2013-05-09 01:23:13	multibot_	 defined class ItemObj
2013-05-09 01:23:21	s3b`	! var x = Array[ItemObj](new ItemObj(10), new ItemObj(5))
2013-05-09 01:23:21	multibot_	 x: Array[ItemObj] = Array(ItemObj(10), ItemObj(5))
2013-05-09 01:23:38	s3b`	! x.indexOf( i => i.id == 10 )
2013-05-09 01:23:38	multibot_	 error: missing parameter type
2013-05-09 01:23:39	multibot_	               x.indexOf( i => i.id == 10 )
2013-05-09 01:23:40	multibot_	                          ^
2013-05-09 01:24:48	-->	cdidd (~cdidd@93-80-82-211.broadband.corbina.ru) has joined #scala
2013-05-09 01:24:52	s3b`	! x.find( _.id == 10  )
2013-05-09 01:24:52	multibot_	 Option[ItemObj] = Some(ItemObj(10))
2013-05-09 01:24:59	s3b`	! x.find( _.id == 10  ).indexOf()
2013-05-09 01:24:59	multibot_	 error: value indexOf is not a member of Option[ItemObj]
2013-05-09 01:25:00	multibot_	               x.find( _.id == 10  ).indexOf()
2013-05-09 01:25:01	multibot_	                                     ^
2013-05-09 01:25:11	s3b`	:(
2013-05-09 01:25:14	pfurla	dobblego: moveRight( p )(update(x)), what is the moveRight?
2013-05-09 01:25:31	tpolecat	zipper ops i reckon
2013-05-09 01:25:31	dobblego	pfurla: a method on ListZipper, which is what he really should be using
2013-05-09 01:26:05	pfurla	dobblego: ohhh coool, got the idea
2013-05-09 01:26:26	pfurla	zippers are awesome
2013-05-09 01:26:46	-->	hanncx (~hann@c-69-181-139-150.hsd1.ca.comcast.net) has joined #scala
2013-05-09 01:27:24	<--	MisterD (MisterD@port-92-205-60-191.dynamic.qsc.de) has quit (Quit: Read Error: 1337 (to leet to stay on server))
2013-05-09 01:27:35	pfurla	s3b`: indexOf give the index of a object, find gives the element that satisfies the conditions
2013-05-09 01:27:53	pfurla	actually Option[Element]
2013-05-09 01:28:07	tpolecat	! List(1,2,3).indexOf(5)
2013-05-09 01:28:07	multibot_	 Int = -1
2013-05-09 01:28:09	<--	stephenjudkins (~textual@216.99.208.188) has quit (Quit: Computer has gone to sleep.)
2013-05-09 01:28:10	tpolecat	boo
2013-05-09 01:28:15	pfurla	yeah, bad
2013-05-09 01:28:27	dobblego	it helps adoption of scala
2013-05-09 01:28:46	dobblego	you see, it keeps java programmers familiar with existing APIs happy
2013-05-09 01:28:51	pfurla	yes it does and undermines its good parts
2013-05-09 01:28:53	dobblego	makes totalol sense
2013-05-09 01:29:12	tpolecat	it keeps java programmers familiar with existing categories of bugs happy 
2013-05-09 01:29:28	dobblego	taking stupid ideas and reimplementing them for the people who haven't yet recognised that it is stupid, is going to help adoption silly!
2013-05-09 01:29:32	<--	Nekuromento (~Nekuromen@91.187.26.197) has quit (Quit: Nekuromento)
2013-05-09 01:30:08	pfurla	dobblego: give how had it's been to hiring a scala dev in br. I don't put it in the totalol… I put the state software dev. in totalol
2013-05-09 01:30:22	<--	LennyLinux (~LennyLinu@151.64.1.88) has quit (Remote host closed the connection)
2013-05-09 01:30:30	dobblego	hey I am just trying to make sense of these claims bro
2013-05-09 01:31:37	pfurla	yeah, but at least you are surrounded by smart ppl
2013-05-09 01:31:51	dobblego	I am? I am at home writing scala for a FP course
2013-05-09 01:32:00	pfurla	i am surrounded by sissies that can see any new syntax or star using their brains
2013-05-09 01:32:03	-->	lizzin (~b@c-24-14-148-164.hsd1.il.comcast.net) has joined #scala
2013-05-09 01:32:04	dobblego	I am surrounded by you!
2013-05-09 01:32:14	dobblego	oh you mean dim sims?
2013-05-09 01:32:27	--	lizzin is now known as Guest97411
2013-05-09 01:32:47	pfurla	sims ? simcity?
2013-05-09 01:33:09	dobblego	why the fucking fuck does Tuple2 still not have a map method?
2013-05-09 01:33:23	dobblego	too fucking busy writing broken indexOf, gah!
2013-05-09 01:33:39	-->	m-jack (~chatzilla@173.243.38.82) has joined #scala
2013-05-09 01:33:49	pfurla	indexOf in a tuple would be fun
2013-05-09 01:33:59	pfurla	let's write it!!! eheheh
2013-05-09 01:34:20	dobblego	pretty easy yo, it would take Boolean, so copumpkin should write it
2013-05-09 01:34:42	SingingBoyo	23 method bodies later... or whatever the maximum tuple size is
2013-05-09 01:34:43	<--	bitonic (~user@176.27.229.121) has quit (Ping timeout: 264 seconds)
2013-05-09 01:35:00	<--	reactormonk (~reactormo@cpe-70-113-86-124.austin.res.rr.com) has quit (Ping timeout: 264 seconds)
2013-05-09 01:35:13	pfurla	now I know what that Go guy why ranting about tuples!
2013-05-09 01:35:21	pfurla	ungloried Lists
2013-05-09 01:35:28	sproingie	aren't tuples just read-only lists?</python>
2013-05-09 01:35:30	pfurla	unglorified Lists
2013-05-09 01:35:46	SingingBoyo	map/indexOf don't really make sense on tuples, given the possibility of different types for the contents
2013-05-09 01:35:55	dobblego	yes they do
2013-05-09 01:36:03	dobblego	even flatMap makes sense for semigroup on one side
2013-05-09 01:36:09	sproingie	an indexOf that returned the accessor method would be pretty neat
2013-05-09 01:36:20	pfurla	sproingie: don't start mocking python or I my rewrite my python homework in haskell
2013-05-09 01:36:23	-->	headius (~headius@65-128-131-102.mpls.qwest.net) has joined #scala
2013-05-09 01:36:26	sproingie	not very compatible i guess
2013-05-09 01:36:27	dobblego	indexOf also makes sense, but is of limited practical use
2013-05-09 01:36:28	pfurla	and I don't wanna do that
2013-05-09 01:36:39	SingingBoyo	pfurla: that'd be bad.  Type errors, type errors everywhere
2013-05-09 01:37:01	pfurla	SingingBoyo: for a start
2013-05-09 01:37:25	 *	sproingie gets the stabbies at iphone theme authors.  fucking theme installed a widget that crammed my icons into a smaller space, and now the space won't go away
2013-05-09 01:37:44	dacc	i wish tuples had map, and you could do things like (1, "one").map(_ + 1) // (2, "one1")
2013-05-09 01:37:53	pfurla	indexOf returning chuch/peano numerals could be useful
2013-05-09 01:37:56	dobblego	case class Tuple2[A](a: A, b: B) { def map[C](f: B => C): Tuple2[A, C] = Tuple2(a, f(b)); def flatMap[C](f: A => Tuple2[B, C]): Tuple2[B, C] = { val t = f(a); ??? need Semigroup[B] } 
2013-05-09 01:38:10	pfurla	map and flatMap too
2013-05-09 01:38:23	dacc	woah
2013-05-09 01:38:30	dobblego	flatMap would require a decent semigroup/monoid library and good fucking luck with that
2013-05-09 01:38:51	-->	enebo (~enebo@c-75-73-8-169.hsd1.mn.comcast.net) has joined #scala
2013-05-09 01:38:53	-->	whaley (~whaley@97-82-192-22.dhcp.hckr.nc.charter.com) has joined #scala
2013-05-09 01:38:55	<--	m-jack (~chatzilla@173.243.38.82) has quit (Ping timeout: 260 seconds)
2013-05-09 01:38:56	pfurla	oh, tuple variance could be painful
2013-05-09 01:39:03	dobblego	remove all the variances
2013-05-09 01:39:07	pfurla	don't even remember what it is
2013-05-09 01:39:13	dobblego	lucky you
2013-05-09 01:39:40	tpolecat	why isn't flatMap A => (C, B)?
2013-05-09 01:39:41	pfurla	I mostly didn't need to care so far
2013-05-09 01:39:45	<--	kobain (~kobian@unaffiliated/kobain) has quit (Read error: Connection reset by peer)
2013-05-09 01:39:55	tpolecat	er
2013-05-09 01:40:08	dobblego	tpolecat: because I messed up, Tuple2[A, C]
2013-05-09 01:40:11	tpolecat	B => (A,C)
2013-05-09 01:40:18	-->	kobain (~kobian@unaffiliated/kobain) has joined #scala
2013-05-09 01:40:54	<--	mary5030 (~mary5030@of1-nat2.aus1.rackspace.com) has quit (Remote host closed the connection)
2013-05-09 01:40:58	tpolecat	do you generalize this to all tuples, and just fix all but the first or last type param?
2013-05-09 01:41:07	dobblego	yes
2013-05-09 01:41:15	dobblego	but you can also have n-ary map
2013-05-09 01:41:35	pfurla	map1-23
2013-05-09 01:42:48	pfurla	L3
2013-05-09 01:43:08	-->	fayimora_ (~fayimora@5.151.0.0) has joined #scala
2013-05-09 01:43:39	-->	mljsimone (~mljsimone@186.137.248.10) has joined #scala
2013-05-09 01:44:19	<--	fayimora (~fayimora@5.151.0.1) has quit (Ping timeout: 264 seconds)
2013-05-09 01:44:19	--	fayimora_ is now known as fayimora
2013-05-09 01:44:33	-->	gphat (~gphat@99-8-185-28.lightspeed.snfcca.sbcglobal.net) has joined #scala
2013-05-09 01:46:20	<--	gazarsgo (gazarsgo@nat/balfour/x-uswcmrdqjsekmgqe) has quit (Quit: gazarsgo)
2013-05-09 01:47:32	-->	RedPunch (~RedPunch@159.140.254.103) has joined #scala
2013-05-09 01:48:43	<--	schone (~schone@38.125.127.130) has quit (Ping timeout: 276 seconds)
2013-05-09 01:49:00	<--	gowlin (~rgolbeck@debian/developer/rmgolbeck) has quit (Remote host closed the connection)
2013-05-09 01:50:05	<--	Squarism (~Squarism4@130.238.144.175) has quit (Read error: Operation timed out)
2013-05-09 01:50:07	<--	SingingBoyo (~brandon@d154-5-190-48.bchsia.telus.net) has quit (Quit: Leaving)
2013-05-09 01:50:22	<--	blair (~blair@static-108-0-197-17.lsanca.fios.verizon.net) has quit (Quit: Ex-Chat)
2013-05-09 01:51:38	pfurla	aws volumes are being annoying :/
2013-05-09 01:52:09	imeredith	pfurla: we have been trying to stop using them for ages now
2013-05-09 01:52:14	<--	RedPunch (~RedPunch@159.140.254.103) has quit (Ping timeout: 255 seconds)
2013-05-09 01:52:34	pfurla	imeredith: how??? 
2013-05-09 01:52:38	imeredith	pfurla: we are moving to zfs on ehpemeral storage 
2013-05-09 01:53:06	--	wajiii is now known as wajiii-afk
2013-05-09 01:53:15	imeredith	pfurla: oh but aws volumes you mean ebs volumes right?
2013-05-09 01:53:22	pfurla	imeredith: got some links? not sure we can afford anything more soffisticated 
2013-05-09 01:53:25	pfurla	ebs
2013-05-09 01:53:41	imeredith	im not the ops guy that does it sorry5
2013-05-09 01:53:47	pfurla	@google aws zfs ephemeral storage
2013-05-09 01:53:49	lambdabot	https://blogs.oracle.com/VirtualGuru/entry/getting_sense_of_ephemeral_store
2013-05-09 01:54:11	imeredith	i do maintain our scala provisioning engine though, and ebs volumes cause us pain
2013-05-09 01:54:24	imeredith	we get stuck volumes all the time when detaching
2013-05-09 01:54:35	<--	Guest97411 (~b@c-24-14-148-164.hsd1.il.comcast.net) has quit (Ping timeout: 256 seconds)
2013-05-09 01:54:45	imeredith	pfurla: zfs lets you do snapshotting
2013-05-09 01:54:46	-->	SingingBoyo (~brandon@d154-5-190-48.bchsia.telus.net) has joined #scala
2013-05-09 01:54:48	<--	nuttycom1 (~Adium@70-91-169-68-BusName-Colorado.hfc.comcastbusiness.net) has quit (Quit: Leaving.)
2013-05-09 01:55:32	-->	predator217 (~predator1@p50803773.dip0.t-ipconnect.de) has joined #scala
2013-05-09 01:55:33	imeredith	pfurla: we are a provisioning engine that manages the starting of instances, creating and attaching volumes, then installing services on the running machine, as well as deprovisioning etc
2013-05-09 01:55:37	imeredith	have a*
2013-05-09 01:56:17	<--	doctau (doctau@nat/redhat/x-khgwdympeqwduooe) has quit (Ping timeout: 255 seconds)
2013-05-09 01:56:31	pfurla	imeredith: i know a few services like these.
2013-05-09 01:57:09	<--	enebo (~enebo@c-75-73-8-169.hsd1.mn.comcast.net) has quit (Quit: enebo)
2013-05-09 01:58:20	-->	buhawi (~buhawi@124.105.60.242) has joined #scala
2013-05-09 01:58:24	<--	DanBurton (~DanBurton@204-16-157-170-static.ipnetworksinc.net) has quit (Remote host closed the connection)
2013-05-09 01:58:39	-->	mary5030 (~mary5030@65-36-87-170.static.grandenetworks.net) has joined #scala
2013-05-09 01:58:59	<--	predator117 (~predator1@p508064FB.dip0.t-ipconnect.de) has quit (Ping timeout: 260 seconds)
2013-05-09 01:59:16	-->	chatsiri_ (~chatsiri_@14.207.91.4) has joined #scala
2013-05-09 01:59:39	<--	mary5030 (~mary5030@65-36-87-170.static.grandenetworks.net) has quit (Remote host closed the connection)
2013-05-09 02:00:13	-->	mary5030 (~mary5030@72.32.115.231) has joined #scala
2013-05-09 02:00:48	<--	ktosiek (~quassel@46.22.173.54) has quit (Ping timeout: 268 seconds)
2013-05-09 02:01:01	-->	nhanho (~nhanho@madison.cs.pdx.edu) has joined #scala
2013-05-09 02:02:26	-->	ktosiek (~quassel@46.22.173.54) has joined #scala
2013-05-09 02:03:39	<--	gphat (~gphat@99-8-185-28.lightspeed.snfcca.sbcglobal.net) has quit (Remote host closed the connection)
2013-05-09 02:03:44	<--	headius (~headius@65-128-131-102.mpls.qwest.net) has quit (Quit: headius)
2013-05-09 02:04:20	nhanho	If I define type X = List[(Char, Int)], why doesn't " Y filter ( (x, y) => x == "a") " with Y of type X work?
2013-05-09 02:04:45	nhanho	the compiler said there is a mismatch of (Char, Int) => Boolean and ((Char, Int)) => Boolean
2013-05-09 02:05:16	tpolecat	{ case (x, y) => ...
2013-05-09 02:05:38	tpolecat	or   p => p._1 == "a" 
2013-05-09 02:05:43	tpolecat	or  _._1 == "a"
2013-05-09 02:05:55	<--	chatsiri_ (~chatsiri_@14.207.91.4) has quit (Ping timeout: 256 seconds)
2013-05-09 02:06:50	nhanho	thanks, do you mind being a little more specific on the case (x, y) ?
2013-05-09 02:06:52	-->	chatsiri_ (~chatsiri_@kuwin-131-1.kuwin.ku.ac.th) has joined #scala
2013-05-09 02:07:20	<--	goodfoo (~goodfoo@of1-nat2.aus1.rackspace.com) has quit (Remote host closed the connection)
2013-05-09 02:08:10	runT1ME	! List(('a', 1)).filter { case (x,y) => x == 'a' }
2013-05-09 02:08:10	multibot_	 List[(Char, Int)] = List((a,1))
2013-05-09 02:08:31	tpolecat	filter expects a function of one parameter, of type (Char,Int)
2013-05-09 02:08:57	runT1ME	you don't get tuple expansion on a generic lambda
2013-05-09 02:09:25	tpolecat	you can also give it a partial function literal, which is a set of case clauses that do pattern matching
2013-05-09 02:10:16	<--	hanncx (~hann@c-69-181-139-150.hsd1.ca.comcast.net) has quit (Quit: hanncx)
2013-05-09 02:10:29	nhanho	okay, thanks
2013-05-09 02:11:39	<--	DonRichie (~DonRichie@dslb-094-219-047-047.pools.arcor-ip.net) has quit (Ping timeout: 252 seconds)
2013-05-09 02:12:18	-->	DonRichie (~DonRichie@dslb-088-068-231-198.pools.arcor-ip.net) has joined #scala
2013-05-09 02:12:56	-->	doctau (doctau@nat/redhat/x-rwaikuasemhhymqs) has joined #scala
2013-05-09 02:15:22	<--	sritchie (~sritchie@8.25.197.25) has quit (Quit: sritchie)
2013-05-09 02:15:31	<--	mrrobbot (~siksia@unaffiliated/siksia) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2013-05-09 02:16:17	<--	Ashoat (~Ashoat@66-192-186-66.static.twtelecom.net) has quit (Quit: Computer has gone to sleep.)
2013-05-09 02:16:32	<--	buhawi (~buhawi@124.105.60.242) has quit (Ping timeout: 255 seconds)
2013-05-09 02:16:57	-->	m-jack (~chatzilla@cmr-208-97-104-82.cr.net.cable.rogers.com) has joined #scala
2013-05-09 02:17:06	-->	oscarvarto (~oscarvart@187.193.29.77) has joined #scala
2013-05-09 02:17:08	<--	tpolecat (~tpolecat@c-24-22-11-146.hsd1.or.comcast.net) has quit (Quit: is having a little nap now.)
2013-05-09 02:17:29	-->	gphat (~gphat@99-8-185-28.lightspeed.snfcca.sbcglobal.net) has joined #scala
2013-05-09 02:18:23	-->	Nitro (~nitro@unaffiliated/nitro) has joined #scala
2013-05-09 02:19:23	-->	buhawi (~buhawi@124.105.60.242) has joined #scala
2013-05-09 02:19:43	<--	agumonkey (~agu@101.217.72.86.rev.sfr.net) has quit (Ping timeout: 264 seconds)
2013-05-09 02:20:34	<--	tomku (~tomku@96-42-15-24.dhcp.fdul.wi.charter.com) has quit (Quit: WeeChat 0.4.0)
2013-05-09 02:22:24	<--	ryanlecompte (~ryanlecom@c-67-180-16-120.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2013-05-09 02:25:53	-->	tomku (~tomku@96-42-15-24.dhcp.fdul.wi.charter.com) has joined #scala
2013-05-09 02:26:38	-->	headius (~headius@65-128-131-102.mpls.qwest.net) has joined #scala
2013-05-09 02:27:16	-->	P1RATEZ (piratez@CPE602ad086e9b5-CM602ad086e9b2.cpe.net.cable.rogers.com) has joined #scala
2013-05-09 02:28:30	<--	gphat (~gphat@99-8-185-28.lightspeed.snfcca.sbcglobal.net) has quit (Remote host closed the connection)
2013-05-09 02:30:15	<--	m-jack (~chatzilla@cmr-208-97-104-82.cr.net.cable.rogers.com) has quit (Ping timeout: 260 seconds)
2013-05-09 02:30:30	<--	jkarlsson (~jonas@70-100-130-14.dsl1-field.roch.ny.frontiernet.net) has quit (Quit: jkarlsson)
2013-05-09 02:32:11	<--	PeteDaGuru (~PeteDaGur@user-0c99bnk.cable.mindspring.com) has quit (Quit: Leaving.)
2013-05-09 02:33:11	-->	dankest (~dankest@wsip-70-182-130-90.sb.sd.cox.net) has joined #scala
2013-05-09 02:33:43	-->	deuteros_ (~deuteros@unaffiliated/deuteros) has joined #scala
2013-05-09 02:34:12	<--	purak (~burak@78.178.223.160) has quit (Ping timeout: 252 seconds)
2013-05-09 02:34:24	<--	headius (~headius@65-128-131-102.mpls.qwest.net) has quit (Quit: headius)
2013-05-09 02:34:33	<--	Pranz (~Zorro_24@c80-217-216-30.bredband.comhem.se) has quit (Quit: Lämnar)
2013-05-09 02:36:34	<--	buhawi (~buhawi@124.105.60.242) has quit (Ping timeout: 268 seconds)
2013-05-09 02:38:14	<--	splittingfield (~m@66.171.190.186) has quit (Quit: splittingfield)
2013-05-09 02:38:28	<--	refefer (~astanton@c-76-111-70-251.hsd1.va.comcast.net) has quit (Ping timeout: 245 seconds)
2013-05-09 02:38:54	-->	pskirko (~pskirko@c-76-103-232-209.hsd1.ca.comcast.net) has joined #scala
2013-05-09 02:38:58	-->	buhawi (~buhawi@124.6.182.55) has joined #scala
2013-05-09 02:39:05	-->	headius (~headius@65-128-131-102.mpls.qwest.net) has joined #scala
2013-05-09 02:39:41	<--	tyoc213 (~tyoc213@189.135.138.242) has quit (Ping timeout: 252 seconds)
2013-05-09 02:40:50	<--	headius (~headius@65-128-131-102.mpls.qwest.net) has quit (Client Quit)
2013-05-09 02:43:46	<--	buhawi (~buhawi@124.6.182.55) has quit (Ping timeout: 256 seconds)
2013-05-09 02:44:17	--	flazz_gone is now known as flazz
2013-05-09 02:44:19	<--	s3b` (~shendows@2001:420:4:ed4f:80c1:eb99:db18:f064) has quit (Ping timeout: 264 seconds)
2013-05-09 02:44:23	-->	headius (~headius@65-128-131-102.mpls.qwest.net) has joined #scala
2013-05-09 02:44:26	-->	buhawi (~buhawi@124.6.182.55) has joined #scala
2013-05-09 02:47:42	<--	RRSchulz (~RRSchulz@67.218.117.4) has quit (Quit: Leaving.)
2013-05-09 02:48:29	-->	Apocalisp (~textual@c-174-62-237-65.hsd1.ma.comcast.net) has joined #scala
2013-05-09 02:48:37	-->	tyoc213 (~tyoc213@189.135.138.242) has joined #scala
2013-05-09 02:50:40	-->	mizu_no_oto (~textual@c-76-24-19-222.hsd1.ma.comcast.net) has joined #scala
2013-05-09 02:51:39	<--	joneshf-laptop (~joneshf@mail.concordusapps.com) has quit (Ping timeout: 276 seconds)
2013-05-09 02:55:05	<--	RSchulzB (~Adium@67.218.117.3) has quit (Ping timeout: 252 seconds)
2013-05-09 02:56:26	-->	schone (~schone@38.125.127.130) has joined #scala
2013-05-09 02:57:47	<--	fayimora (~fayimora@5.151.0.0) has quit (Quit: zzzzz...)
2013-05-09 02:58:31	--	pdxleif is now known as pdxleif_away
2013-05-09 02:59:11	-->	m-jack (~chatzilla@cmr-208-97-104-82.cr.net.cable.rogers.com) has joined #scala
2013-05-09 02:59:46	<--	chatsiri_ (~chatsiri_@kuwin-131-1.kuwin.ku.ac.th) has quit (Ping timeout: 256 seconds)
2013-05-09 03:00:41	<--	twoism (~twoism@8.25.197.24) has quit (Remote host closed the connection)
2013-05-09 03:01:31	<--	schone (~schone@38.125.127.130) has quit (Ping timeout: 276 seconds)
2013-05-09 03:01:35	<--	lcfrs (~lcfrs@8.25.197.24) has quit (Remote host closed the connection)
2013-05-09 03:01:42	<--	mizu_no_oto (~textual@c-76-24-19-222.hsd1.ma.comcast.net) has quit (Quit: Computer has gone to sleep.)
2013-05-09 03:02:09	-->	infynyxx (~infynyxx@cpe-24-90-84-91.nyc.res.rr.com) has joined #scala
2013-05-09 03:04:54	-->	tpolecat (~tpolecat@173-164-68-213-Oregon.hfc.comcastbusiness.net) has joined #scala
2013-05-09 03:05:25	-->	Amanas (~Amanas@c-24-128-204-226.hsd1.ma.comcast.net) has joined #scala
2013-05-09 03:05:30	-->	lazrahl (~lazrahl@108-210-182-134.lightspeed.tukrga.sbcglobal.net) has joined #scala
2013-05-09 03:07:05	-->	mizu_no_oto (~textual@c-76-24-19-222.hsd1.ma.comcast.net) has joined #scala
2013-05-09 03:07:57	<--	tpolecat (~tpolecat@173-164-68-213-Oregon.hfc.comcastbusiness.net) has quit (Client Quit)
2013-05-09 03:08:12	<--	whaley (~whaley@97-82-192-22.dhcp.hckr.nc.charter.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2013-05-09 03:08:25	<--	lazrahl (~lazrahl@108-210-182-134.lightspeed.tukrga.sbcglobal.net) has quit (Remote host closed the connection)
2013-05-09 03:08:39	-->	lazrahl (~lazrahl@108-210-182-134.lightspeed.tukrga.sbcglobal.net) has joined #scala
2013-05-09 03:11:32	dacc	! Seq((1,2):_*)
2013-05-09 03:11:32	multibot_	 error: type mismatch;
2013-05-09 03:11:33	multibot_	  found   : (Int, Int)
2013-05-09 03:11:34	multibot_	  required: Seq[?]
2013-05-09 03:11:35	multibot_	               Seq((1,2):_*)
2013-05-09 03:11:36	multibot_	                   ^
2013-05-09 03:11:37	dacc	any way to do this?
2013-05-09 03:11:44	dacc	er hmm
2013-05-09 03:12:43	OlegYch	tuple is not a seq..
2013-05-09 03:12:47	<--	hiratara (~hiratara@j080068.dynamic.ppp.asahi-net.or.jp) has quit (Ping timeout: 255 seconds)
2013-05-09 03:13:00	dacc	oh right
2013-05-09 03:13:43	-->	reactormonk (~tass@71.21.85.8) has joined #scala
2013-05-09 03:14:46	reactormonk	When I have two sets with the same string content, can I rely that the order is the same when I call .mkString ?
2013-05-09 03:15:40	-->	epuckett1 (~Adium@adsl-108-200-236-245.dsl.pltn13.sbcglobal.net) has joined #scala
2013-05-09 03:16:12	<--	epuckett (~Adium@adsl-108-200-236-245.dsl.pltn13.sbcglobal.net) has quit (Ping timeout: 256 seconds)
2013-05-09 03:16:27	qu1j0t3	it wouldn't seem wise
2013-05-09 03:16:46	<--	dankest (~dankest@wsip-70-182-130-90.sb.sd.cox.net) has quit (Quit: Leaving...)
2013-05-09 03:16:48	<--	mljsimone (~mljsimone@186.137.248.10) has quit (Read error: Connection reset by peer)
2013-05-09 03:17:04	reactormonk	the other option would be a globally mutable hash with set => actor :-/
2013-05-09 03:18:01	reactormonk	so sort it beforehand?
2013-05-09 03:19:39	<--	pskirko (~pskirko@c-76-103-232-209.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2013-05-09 03:20:05	-->	RRSchulz (~RRSchulz@173-228-5-23.dsl.static.sonic.net) has joined #scala
2013-05-09 03:20:11	<--	m-jack (~chatzilla@cmr-208-97-104-82.cr.net.cable.rogers.com) has quit (Ping timeout: 260 seconds)
2013-05-09 03:20:27	-->	hiratara (~hiratara@j080110.dynamic.ppp.asahi-net.or.jp) has joined #scala
2013-05-09 03:20:54	<--	OwenOu (~Adium@ws171.acl.com) has quit (Quit: Leaving.)
2013-05-09 03:21:22	-->	pskirko (~pskirko@c-76-103-232-209.hsd1.ca.comcast.net) has joined #scala
2013-05-09 03:25:36	<--	runT1ME (~vmarquez@wsip-98-189-26-19.oc.oc.cox.net) has quit (Quit: runT1ME)
2013-05-09 03:26:38	-->	runT1ME (~vmarquez@wsip-98-189-26-19.oc.oc.cox.net) has joined #scala
2013-05-09 03:26:50	-->	lcfrs (~lcfrs@8.25.197.25) has joined #scala
2013-05-09 03:27:36	<--	kelvl (~kelvl@192-195-80-114-TWIL.static.monkeybrains.net) has quit (Remote host closed the connection)
2013-05-09 03:28:53	<--	steffo (~steffo@535155D5.cm-6-2b.dynamic.ziggo.nl) has quit (Quit: steffo)
2013-05-09 03:29:51	<--	bradhe (~bradhe@71-20-59-137.war.clearwire-wmx.net) has quit (Remote host closed the connection)
2013-05-09 03:29:59	<--	doctau (doctau@nat/redhat/x-rwaikuasemhhymqs) has quit (Ping timeout: 260 seconds)
2013-05-09 03:31:23	-->	ranie (~rramiso@124.6.182.55) has joined #scala
2013-05-09 03:31:26	<--	talios (~talios@akl.smx.co.nz) has quit (Quit: My iMac has gone to sleep. ZZZzzz…)
2013-05-09 03:33:35	<--	reactormonk (~tass@71.21.85.8) has quit (Ping timeout: 252 seconds)
2013-05-09 03:35:29	<--	mary5030 (~mary5030@72.32.115.231) has quit (Remote host closed the connection)
2013-05-09 03:35:55	<--	thereisnospoon (~thereisno@113-61-86-28.static.qld.dsl.net.au) has quit (Ping timeout: 246 seconds)
2013-05-09 03:35:56	-->	doctau (doctau@nat/redhat/x-bvskoizuyunhmiab) has joined #scala
2013-05-09 03:35:56	-->	reactormonk (~tass@71.21.85.8) has joined #scala
2013-05-09 03:35:57	-->	mary5030 (~mary5030@72.32.115.231) has joined #scala
2013-05-09 03:36:21	<--	ranie (~rramiso@124.6.182.55) has quit (Ping timeout: 252 seconds)
2013-05-09 03:36:39	-->	nocturne7 (~havoc@c-76-103-150-97.hsd1.ca.comcast.net) has joined #scala
2013-05-09 03:36:44	-->	mary5030_ (~mary5030@65-36-87-170.static.grandenetworks.net) has joined #scala
2013-05-09 03:36:52	<--	Apocalisp (~textual@c-174-62-237-65.hsd1.ma.comcast.net) has quit (Quit: Computer has gone to sleep.)
2013-05-09 03:37:02	-->	Nicol (~Nicol@129.96.181.117) has joined #scala
2013-05-09 03:37:07	-->	ranie (~rramiso@124.6.182.55) has joined #scala
2013-05-09 03:37:54	<--	hdoshi (~hdoshi@66.54.159.166) has quit (Ping timeout: 264 seconds)
2013-05-09 03:38:34	<--	bblfish (~bblfish@AAubervilliers-651-1-306-218.w83-114.abo.wanadoo.fr) has quit (Ping timeout: 276 seconds)
2013-05-09 03:39:08	<--	mary5030_ (~mary5030@65-36-87-170.static.grandenetworks.net) has quit (Remote host closed the connection)
2013-05-09 03:39:32	<--	malaverdiere (~marc-andr@bas10-montreal28-2925247893.dsl.bell.ca) has quit (Remote host closed the connection)
2013-05-09 03:40:43	<--	mary5030 (~mary5030@72.32.115.231) has quit (Ping timeout: 260 seconds)
2013-05-09 03:40:52	-->	malaverdiere (~marc-andr@bas10-montreal28-2925247893.dsl.bell.ca) has joined #scala
2013-05-09 03:45:01	-->	m-jack (~chatzilla@cmr-208-97-104-82.cr.net.cable.rogers.com) has joined #scala
2013-05-09 03:45:53	-->	talios (~talios@akl.smx.co.nz) has joined #scala
2013-05-09 03:47:05	<--	lcfrs (~lcfrs@8.25.197.25) has quit (Remote host closed the connection)
2013-05-09 03:48:02	-->	asQuirreL (~asQuirreL@oriel-student-nat.oriel.ox.ac.uk) has joined #scala
2013-05-09 03:48:40	<--	mizu_no_oto (~textual@c-76-24-19-222.hsd1.ma.comcast.net) has quit (Quit: Computer has gone to sleep.)
2013-05-09 03:49:19	-->	asrail (~quassel@177.193.199.186) has joined #scala
2013-05-09 03:49:38	-->	thereisnospoon (~thereisno@113-61-86-28.static.qld.dsl.net.au) has joined #scala
2013-05-09 03:50:31	<--	m-jack (~chatzilla@cmr-208-97-104-82.cr.net.cable.rogers.com) has quit (Ping timeout: 260 seconds)
2013-05-09 03:53:28	-->	m-jack (~chatzilla@cmr-208-97-104-82.cr.net.cable.rogers.com) has joined #scala
2013-05-09 03:53:33	-->	Nicol2 (~Nicol@129.96.181.117) has joined #scala
2013-05-09 03:53:53	<--	Nicol (~Nicol@129.96.181.117) has quit (Ping timeout: 245 seconds)
2013-05-09 03:56:27	-->	soulofpeace (~soulofpea@119.75.11.250) has joined #scala
2013-05-09 03:56:48	-->	dankest (~dankest@ip24-254-84-12.sb.sd.cox.net) has joined #scala
2013-05-09 03:58:45	<--	asQuirreL (~asQuirreL@oriel-student-nat.oriel.ox.ac.uk) has quit (Quit: Computer has gone to sleep.)
2013-05-09 03:59:12	<--	talios (~talios@akl.smx.co.nz) has quit (Quit: My iMac has gone to sleep. ZZZzzz…)
2013-05-09 04:00:18	<--	oscarvarto (~oscarvart@187.193.29.77) has quit (Quit: oscarvarto)
2013-05-09 04:00:23	<--	jamesiry (~Adium@c-24-7-67-118.hsd1.ca.comcast.net) has quit (Quit: Leaving.)
2013-05-09 04:08:14	<--	asrail (~quassel@177.193.199.186) has quit (Ping timeout: 252 seconds)
2013-05-09 04:12:47	-->	kelvl (~kelvl@c-24-5-148-128.hsd1.ca.comcast.net) has joined #scala
2013-05-09 04:13:22	-->	asrail (~quassel@177.193.199.186) has joined #scala
2013-05-09 04:14:05	<--	lazrahl (~lazrahl@108-210-182-134.lightspeed.tukrga.sbcglobal.net) has quit (Remote host closed the connection)
2013-05-09 04:14:18	<--	Agro (~Agro@108-79-20-223.lightspeed.hstntx.sbcglobal.net) has quit (Ping timeout: 245 seconds)
2013-05-09 04:14:54	-->	jamesiry (~Adium@c-24-7-67-118.hsd1.ca.comcast.net) has joined #scala
2013-05-09 04:16:08	<--	jedws (~jwesleysm@eth59-167-133-100.static.internode.on.net) has quit (Quit: Textual IRC Client: http://www.textualapp.com/)
2013-05-09 04:16:46	-->	maxiaoyu (~maxiaoyu@122.4.21.234) has joined #scala
2013-05-09 04:17:55	-->	mizu_no_oto (~textual@c-76-24-19-222.hsd1.ma.comcast.net) has joined #scala
2013-05-09 04:20:10	-->	talios (~talios@akl.smx.co.nz) has joined #scala
2013-05-09 04:21:59	-->	sleepynate (~sleepynat@108-228-209-115.lightspeed.livnmi.sbcglobal.net) has joined #scala
2013-05-09 04:23:25	<--	nhanho (~nhanho@madison.cs.pdx.edu) has quit (Remote host closed the connection)
2013-05-09 04:25:44	-->	lizzin (~b@c-24-14-148-164.hsd1.il.comcast.net) has joined #scala
2013-05-09 04:26:08	--	lizzin is now known as Guest19429
2013-05-09 04:27:23	-->	Agro (~Agro@108-79-20-223.lightspeed.hstntx.sbcglobal.net) has joined #scala
2013-05-09 04:33:58	<--	Nicol2 (~Nicol@129.96.181.117) has quit (Ping timeout: 256 seconds)
2013-05-09 04:33:59	-->	Nicol (~Nicol@129.96.181.117) has joined #scala
2013-05-09 04:34:41	<--	moops (~username@unaffiliated/moops) has quit (Quit: Leaving.)
2013-05-09 04:34:57	-->	tsan (~Adium@ip184-184-189-4.br.br.cox.net) has joined #scala
2013-05-09 04:35:12	-->	reactormonk_ (~reactormo@cpe-70-113-86-124.austin.res.rr.com) has joined #scala
2013-05-09 04:36:00	<--	Amanas (~Amanas@c-24-128-204-226.hsd1.ma.comcast.net) has quit (Quit: Leaving)
2013-05-09 04:36:34	-->	hahuang65 (~hahuang65@c-76-21-60-158.hsd1.ca.comcast.net) has joined #scala
2013-05-09 04:38:29	<--	Nicol (~Nicol@129.96.181.117) has quit (Ping timeout: 252 seconds)
2013-05-09 04:38:48	<--	runT1ME (~vmarquez@wsip-98-189-26-19.oc.oc.cox.net) has quit (Quit: runT1ME)
2013-05-09 04:38:55	<--	reactormonk (~tass@71.21.85.8) has quit (Ping timeout: 264 seconds)
2013-05-09 04:39:44	-->	chatsiri_ (~chatsiri_@kuwin-133-10.kuwin.ku.ac.th) has joined #scala
2013-05-09 04:44:33	<--	hikot (~hiltontok@87-194-60-217.bethere.co.uk) has quit (Ping timeout: 252 seconds)
2013-05-09 04:44:55	-->	hdoshi (~hdoshi@c-67-180-211-122.hsd1.ca.comcast.net) has joined #scala
2013-05-09 04:48:35	dacc	really appreciating "match may not be exhaustive" for the first time.  keep adding new concrete types and it's like a checklist for where i need to handle them =)
2013-05-09 04:49:30	--	spiffxp_ is now known as spiffxp
2013-05-09 04:50:24	<--	hdoshi (~hdoshi@c-67-180-211-122.hsd1.ca.comcast.net) has quit (Ping timeout: 256 seconds)
2013-05-09 04:53:03	<--	m-jack (~chatzilla@cmr-208-97-104-82.cr.net.cable.rogers.com) has quit (Ping timeout: 260 seconds)
2013-05-09 04:54:29	qu1j0t3	:)
2013-05-09 04:56:32	<--	Guest19429 (~b@c-24-14-148-164.hsd1.il.comcast.net) has quit (Ping timeout: 256 seconds)
2013-05-09 04:58:29	<--	Agro (~Agro@108-79-20-223.lightspeed.hstntx.sbcglobal.net) has quit (Read error: Connection reset by peer)
2013-05-09 04:58:35	-->	Agrosis (~Agro@108-79-20-223.lightspeed.hstntx.sbcglobal.net) has joined #scala
2013-05-09 05:01:44	<--	pskirko (~pskirko@c-76-103-232-209.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2013-05-09 05:03:12	-->	[mth] (~mth@123.208.38.34) has joined #scala
2013-05-09 05:04:34	<--	jamesiry (~Adium@c-24-7-67-118.hsd1.ca.comcast.net) has quit (Quit: Leaving.)
2013-05-09 05:04:45	<--	kobain (~kobian@unaffiliated/kobain) has quit (Quit: l'unica verità.. è la morte stessa!)
2013-05-09 05:04:59	<--	mizu_no_oto (~textual@c-76-24-19-222.hsd1.ma.comcast.net) has quit (Quit: Computer has gone to sleep.)
2013-05-09 05:05:26	-->	jamesiry (~Adium@c-24-7-67-118.hsd1.ca.comcast.net) has joined #scala
2013-05-09 05:07:25	--	Agrosis is now known as Agro
2013-05-09 05:07:49	-->	mizu_no_oto (~textual@c-76-24-19-222.hsd1.ma.comcast.net) has joined #scala
2013-05-09 05:08:02	<--	weie (~eie@softbank221078042071.bbtec.net) has quit (Read error: Connection reset by peer)
2013-05-09 05:08:09	-->	kobain (~kobian@unaffiliated/kobain) has joined #scala
2013-05-09 05:08:36	<--	deuteros_ (~deuteros@unaffiliated/deuteros) has quit (Read error: Connection reset by peer)
2013-05-09 05:08:37	-->	weie (~eie@softbank221078042071.bbtec.net) has joined #scala
2013-05-09 05:08:43	-->	gphat (~gphat@99-8-185-28.lightspeed.snfcca.sbcglobal.net) has joined #scala
2013-05-09 05:08:58	-->	vramana (~chatzilla@117.207.250.232) has joined #scala
2013-05-09 05:09:00	-->	deuteros_ (~deuteros@unaffiliated/deuteros) has joined #scala
2013-05-09 05:09:14	-->	dek5 (~eugene@mail.quickpay.ru) has joined #scala
2013-05-09 05:09:26	<--	mizu_no_oto (~textual@c-76-24-19-222.hsd1.ma.comcast.net) has quit (Client Quit)
2013-05-09 05:09:34	<--	talios (~talios@akl.smx.co.nz) has quit (Ping timeout: 276 seconds)
2013-05-09 05:09:56	<--	bryanl_ (~bryanl@li362-49.members.linode.com) has quit (Quit: bryanl out)
2013-05-09 05:09:56	<--	rethaw (~rethaw@unaffiliated/rethaw) has quit (Quit: Out)
2013-05-09 05:10:26	-->	rethaw (~rethaw@unaffiliated/rethaw) has joined #scala
2013-05-09 05:10:52	<--	skchrko (~sk@130.255.129.64) has quit (Ping timeout: 276 seconds)
2013-05-09 05:10:56	-->	bryanl (~bryanl@li362-49.members.linode.com) has joined #scala
2013-05-09 05:11:10	-->	dscleaver (~dscleaver@c-76-124-34-14.hsd1.nj.comcast.net) has joined #scala
2013-05-09 05:11:31	<--	ranie (~rramiso@124.6.182.55) has quit (Ping timeout: 276 seconds)
2013-05-09 05:11:31	<--	DigitalKiwi (~kiwi@ip174-74-81-77.om.om.cox.net) has quit (Ping timeout: 276 seconds)
2013-05-09 05:11:31	<--	zacharypch (~zak@216-15-53-58.c3-0.nmex-ubr1.lnh-nmex.md.cable.rcn.com) has quit (Ping timeout: 276 seconds)
2013-05-09 05:12:31	-->	zacharypch (~zak@216-15-53-58.c3-0.nmex-ubr1.lnh-nmex.md.cable.rcn.com) has joined #scala
2013-05-09 05:12:51	-->	ranie (~rramiso@124.6.182.55) has joined #scala
2013-05-09 05:12:56	-->	DigitalKiwi (~kiwi@ip174-74-81-77.om.om.cox.net) has joined #scala
2013-05-09 05:13:36	-->	skchrko (~sk@130.255.129.64) has joined #scala
2013-05-09 05:13:41	-->	djspiewak (~djspiewak@50-194-128-249-static.hfc.comcastbusiness.net) has joined #scala
2013-05-09 05:14:01	-->	jsuereth (~jsuereth@dynamic-acs-72-23-189-218.zoominternet.net) has joined #scala
2013-05-09 05:14:31	-->	QuaintRcky (~QuaintRck@71-93-229-98.dhcp.mdfd.or.charter.com) has joined #scala
2013-05-09 05:16:07	-->	chrislgibson (~textual@66-90-187-176.dyn.grandenetworks.net) has joined #scala
2013-05-09 05:16:54	<--	chrislgibson (~textual@66-90-187-176.dyn.grandenetworks.net) has left #scala
2013-05-09 05:17:16	-->	hdoshi (~hdoshi@c-67-180-211-122.hsd1.ca.comcast.net) has joined #scala
2013-05-09 05:19:09	<--	Agro (~Agro@108-79-20-223.lightspeed.hstntx.sbcglobal.net) has quit (Remote host closed the connection)
2013-05-09 05:19:56	-->	Agro (~Agro@108-79-20-223.lightspeed.hstntx.sbcglobal.net) has joined #scala
2013-05-09 05:21:38	-->	sritchie (~sritchie@c-67-180-210-142.hsd1.ca.comcast.net) has joined #scala
2013-05-09 05:22:47	qu1j0t3	okay, another Manning 40% off promotion
2013-05-09 05:23:08	qu1j0t3	all books. Promo Code m740 until 14 May
2013-05-09 05:23:19	dacc	aww just missed it
2013-05-09 05:23:25	qu1j0t3	er no, you didn't
2013-05-09 05:23:36	qu1j0t3	start your engines, support Apocalisp and jsuereth
2013-05-09 05:23:40	qu1j0t3	ignore the node shit they have
2013-05-09 05:23:53	-->	stefan-_ (~stefan@swhpet3183.uni-trier.de) has joined #scala
2013-05-09 05:24:41	-->	lazrahl (~lazrahl@108-210-182-134.lightspeed.tukrga.sbcglobal.net) has joined #scala
2013-05-09 05:25:21	dacc	no i mean i already bought apocalisp's book
2013-05-09 05:26:05	dacc	ooOo don't have scala in depth though
2013-05-09 05:26:13	copumpkin	jsuereth has a pirate hat on
2013-05-09 05:26:13	qu1j0t3	LOL
2013-05-09 05:26:20	qu1j0t3	yeah i got Apocalisp's cheap
2013-05-09 05:26:30	<--	Nitro (~nitro@unaffiliated/nitro) has quit (Quit: Hmm)
2013-05-09 05:26:47	qu1j0t3	and he gets my snarky comments for FREE
2013-05-09 05:26:50	-->	jackcviers (~user@24.149.8.212) has joined #scala
2013-05-09 05:27:23	-->	lcfrs (~lcfrs@50-1-125-250.dsl.dynamic.sonic.net) has joined #scala
2013-05-09 05:28:04	<--	gphat (~gphat@99-8-185-28.lightspeed.snfcca.sbcglobal.net) has quit (Remote host closed the connection)
2013-05-09 05:28:24	-->	danrabinowitz (~danrabino@184.106.149.15) has joined #scala
2013-05-09 05:28:38	dacc	much overlap with "in depth" and "programming in scala"?
2013-05-09 05:28:43	pfurla	what I missed?
2013-05-09 05:29:16	qu1j0t3	dacc: I would go with In Depth on a gut feeling
2013-05-09 05:29:22	<--	lazrahl (~lazrahl@108-210-182-134.lightspeed.tukrga.sbcglobal.net) has quit (Ping timeout: 256 seconds)
2013-05-09 05:29:28	qu1j0t3	dacc: i suspect you've already got most of the latter down
2013-05-09 05:29:35	qu1j0t3	pfurla: tudo
2013-05-09 05:29:45	pfurla	qu1j0t3: sério? :(
2013-05-09 05:30:17	qu1j0t3	pfurla: sim... acabou a festa
2013-05-09 05:30:18	-->	doctau_ (doctau@nat/redhat/x-pfypbtryugpnibwc) has joined #scala
2013-05-09 05:31:06	qu1j0t3	pfurla: ...sô brincando amigo; ainda eu tenho um metade da garrafa aqui
2013-05-09 05:31:19	dacc	qu1j0t3: i've read most of programming in scala already, just wondering if this would be redundant
2013-05-09 05:31:32	qu1j0t3	dacc: not sure... i haven't read all of Scala in Depth
2013-05-09 05:31:47	qu1j0t3	dacc: how far did you get in FPiS? I am doing the exercises, currently in Ch. 6
2013-05-09 05:32:04	<--	doctau (doctau@nat/redhat/x-bvskoizuyunhmiab) has quit (Ping timeout: 256 seconds)
2013-05-09 05:33:11	dacc	qu1j0t3: i dropped off due to some university courses i'm taking, got a start on the huffman coding one but that's the extent
2013-05-09 05:33:29	<--	hdoshi (~hdoshi@c-67-180-211-122.hsd1.ca.comcast.net) has quit (Ping timeout: 252 seconds)
2013-05-09 05:33:38	pfurla	qu1j0t3: eheheh I meant about Scalaswags
2013-05-09 05:34:01	qu1j0t3	dacc: that must be further into the book than I am
2013-05-09 05:34:07	<--	[mth] (~mth@123.208.38.34) has quit (Ping timeout: 260 seconds)
2013-05-09 05:34:15	qu1j0t3	dacc: i began at the beginning
2013-05-09 05:34:16	<--	danrabinowitz (~danrabino@184.106.149.15) has left #scala ("Linkinus - http://linkinus.com")
2013-05-09 05:34:24	dacc	qu1j0t3: oh wait, haha, i'm talking about odersky's progfun thing on coursera =)
2013-05-09 05:34:46	dacc	qu1j0t3: i've only gotten to read the first couple chapters of that book -- really like it
2013-05-09 05:34:50	dacc	qu1j0t3: hope to have more time soon
2013-05-09 05:35:30	dacc	qu1j0t3: i believe my quest for the elusive monad may be near an end via that book =)
2013-05-09 05:37:05	qu1j0t3	dacc: yes, the monad material is quite simple
2013-05-09 05:37:16	qu1j0t3	dacc: but, as i've said many times, this isn't unique to this book
2013-05-09 05:37:26	<--	epuckett1 (~Adium@adsl-108-200-236-245.dsl.pltn13.sbcglobal.net) has quit (Ping timeout: 256 seconds)
2013-05-09 05:38:01	qu1j0t3	dacc: there are many simple ways to approach monadic style
2013-05-09 05:38:30	qu1j0t3	FPiS does a pretty good job of presenting motivations
2013-05-09 05:38:38	qu1j0t3	as do Haskell texts of course
2013-05-09 05:38:45	-->	danrabinowitz (~danrabino@184.106.149.15) has joined #scala
2013-05-09 05:38:54	dacc	ok here's my poor-man's object database =) http://pastebin.com/HrshVy0q
2013-05-09 05:38:59	<--	danrabinowitz (~danrabino@184.106.149.15) has left #scala ("Linkinus - http://linkinus.com")
2013-05-09 05:39:44	--	flazz is now known as flazz_gone
2013-05-09 05:40:20	dacc	qu1j0t3: i did try getting into haskell, but it was hard to get productive with.  having everything taught in scala motivates me a lot
2013-05-09 05:41:05	qu1j0t3	yeah scala will help you if you ever go back and try again. something tells me you will
2013-05-09 05:42:25	<--	stefan-_ (~stefan@swhpet3183.uni-trier.de) has quit (Read error: Operation timed out)
2013-05-09 05:42:45	dacc	did you see this? https://twitter.com/id_aa_carmack/status/331918309916295168
2013-05-09 05:43:21	qu1j0t3	yeah i've seen some of his haskell tweets.
2013-05-09 05:43:26	qu1j0t3	hopefully it's a sign the tide is turning.
2013-05-09 05:43:43	qu1j0t3	if the world's most macho bit-twiddler understands what haskell means... there is hope.
2013-05-09 05:44:25	qu1j0t3	next: Convert Linus.
2013-05-09 05:44:42	qu1j0t3	even he must be starting to wonder if they're not wasting too much time on C's crap.
2013-05-09 05:45:52	-->	[mth] (~mth@110.151.64.18) has joined #scala
2013-05-09 05:46:26	dacc	noticed this comment on the tweet "That's neat. You may find yourself writing C-like code for the inner loops. GHC seems to lack low-level opt. - no PhDs in it!"
2013-05-09 05:47:08	<--	nuttycom (~nuttycom@65-128-118-51.hlrn.qwest.net) has quit (Ping timeout: 255 seconds)
2013-05-09 05:47:33	qu1j0t3	i saw it too
2013-05-09 05:47:40	qu1j0t3	"yes and no"
2013-05-09 05:48:14	qu1j0t3	it's nice to see that there are research opportunities still open, if true
2013-05-09 05:48:24	qu1j0t3	cuz haskell isn't exactly going away. it's the unix of PLT
2013-05-09 05:48:53	-->	nuttycom (~nuttycom@71-212-141-103.hlrn.qwest.net) has joined #scala
2013-05-09 05:49:37	qu1j0t3	hackable, yet you can give it a real job to do
2013-05-09 05:50:11	dacc	cool, yeah i think i'll try it again sometime
2013-05-09 05:50:27	qu1j0t3	i'm studying it , i'm timeslicing FPiS with a Haskell text and SICP.
2013-05-09 05:50:29	dacc	i used xmonad for a while =)
2013-05-09 05:50:34	qu1j0t3	the timeslicing isn't going too well. :|
2013-05-09 05:51:07	qu1j0t3	there's going to be a big party when i finish all three books.
2013-05-09 05:51:20	qu1j0t3	my wife may not understand the fuss, admittedly
2013-05-09 05:51:24	-->	ryanlecompte (~ryanlecom@172-7-149-76.lightspeed.sntcca.sbcglobal.net) has joined #scala
2013-05-09 05:52:17	dacc	hehe, sounds like a nice mix
2013-05-09 05:52:35	dacc	i'll probably stick with FPiS and scala until i'm using maximum functional style in my side projects
2013-05-09 05:52:42	qu1j0t3	yeah, FP texts are very mutually compatible
2013-05-09 05:52:45	dacc	then maybe try haskell next
2013-05-09 05:52:55	qu1j0t3	dacc: sounds like  a good plan.
2013-05-09 05:52:56	dacc	SICP looks pretty heady
2013-05-09 05:53:03	qu1j0t3	valuable though
2013-05-09 05:53:11	qu1j0t3	does take some investment
2013-05-09 05:53:21	dacc	reminds me of the TAOCP volumes on my shelf =)
2013-05-09 05:53:25	qu1j0t3	:-)
2013-05-09 05:53:41	qu1j0t3	well TAOCP is the gold standard...
2013-05-09 05:53:51	qu1j0t3	that's the amazon jungle right there
2013-05-09 05:53:59	dacc	at least this is in LISP and not some weird assembly language...
2013-05-09 05:54:03	qu1j0t3	first CS book I bought, out of high school
2013-05-09 05:54:45	qu1j0t3	but anything Knuth has his hand in is beautiful. Check out Concrete Mathematics if you get a chance. 
2013-05-09 05:54:53	qu1j0t3	i've only scratched its surface
2013-05-09 05:55:53	<--	headius (~headius@65-128-131-102.mpls.qwest.net) has quit (Quit: headius)
2013-05-09 05:56:20	-->	Ashoat (~Ashoat@c-67-171-17-59.hsd1.wa.comcast.net) has joined #scala
2013-05-09 05:56:56	dacc	ok thanks
2013-05-09 05:57:23	qu1j0t3	:)
2013-05-09 05:57:38	qu1j0t3	dacc: you're aware of #fp-in-scala chan for the book right?
2013-05-09 05:57:42	 *	dacc stocks up his amazon wishlist.
2013-05-09 05:57:45	qu1j0t3	dacc: i'm trying to liven it up
2013-05-09 05:57:56	qu1j0t3	dacc: more bodies would be great in there 
2013-05-09 05:58:15	dacc	sure, i'll idle there too
2013-05-09 05:58:19	qu1j0t3	:)
2013-05-09 05:58:23	-->	epuckett (~Adium@adsl-108-200-236-245.dsl.pltn13.sbcglobal.net) has joined #scala
2013-05-09 05:58:35	qu1j0t3	from time to time i have a brainfart and i nag tpolecat until he helps me.
2013-05-09 05:59:14	-->	tpolecat (~tpolecat@c-24-22-11-146.hsd1.or.comcast.net) has joined #scala
2013-05-09 05:59:15	dacc	breaks to learn about fp on irc is how i keep my brain going at work =)
2013-05-09 05:59:47	qu1j0t3	oh man. 
2013-05-09 05:59:51	qu1j0t3	x100 here
2013-05-09 06:00:37	<--	nirvdrum (~nirvdrum@pool-173-48-98-124.bstnma.fios.verizon.net) has quit (Ping timeout: 248 seconds)
2013-05-09 06:02:02	-->	nirvdrum (~nirvdrum@pool-173-48-98-124.bstnma.fios.verizon.net) has joined #scala
2013-05-09 06:02:22	<--	kobain (~kobian@unaffiliated/kobain) has quit (Quit: l'unica verità.. è la morte stessa!)
2013-05-09 06:03:46	<--	Ashoat (~Ashoat@c-67-171-17-59.hsd1.wa.comcast.net) has quit (Ping timeout: 268 seconds)
2013-05-09 06:04:03	<--	Agro (~Agro@108-79-20-223.lightspeed.hstntx.sbcglobal.net) has quit (Quit: Leaving)
2013-05-09 06:06:32	-->	gphat (~gphat@99-8-185-28.lightspeed.snfcca.sbcglobal.net) has joined #scala
2013-05-09 06:07:16	adelbertc	just started picking up haskell today
2013-05-09 06:07:57	-->	mizu_no_oto (~textual@c-76-24-19-222.hsd1.ma.comcast.net) has joined #scala
2013-05-09 06:08:54	qu1j0t3	:)
2013-05-09 06:09:38	<--	timemage (~user@64.223.238.240) has quit (Ping timeout: 255 seconds)
2013-05-09 06:09:59	--	casualjim_zzz is now known as casualjim
2013-05-09 06:11:06	adelbertc	qu1j0t3: which haskell book are you working out of?
2013-05-09 06:11:16	-->	OOPMan (~adamj@105-236-113-162.access.mtnbusiness.co.za) has joined #scala
2013-05-09 06:12:03	-->	Heero (~Heero@unaffiliated/heero) has joined #scala
2013-05-09 06:13:19	<--	gphat (~gphat@99-8-185-28.lightspeed.snfcca.sbcglobal.net) has quit (Remote host closed the connection)
2013-05-09 06:16:25	-->	hdoshi (~hdoshi@c-67-180-211-122.hsd1.ca.comcast.net) has joined #scala
2013-05-09 06:16:30	-->	danrabinowitz (~danrabino@184.106.149.15) has joined #scala
2013-05-09 06:16:47	qu1j0t3	adelbertc: Simon Thompson, Haskell: The Craft of Functional Programming, and _it is excellent_. Particularly if someone has been burned by a text before, this one will fix you up.
2013-05-09 06:17:17	qu1j0t3	i'd almost recommend it to ppl new to _programming_, not just haskell.
2013-05-09 06:17:46	adelbertc	ahh ive read simon's book on Erlang
2013-05-09 06:17:51	adelbertc	didnt know he wrote one for haskell
2013-05-09 06:17:53	adelbertc	thanks, will check it out
2013-05-09 06:20:54	-->	timemage (~user@pool-71-241-132-44.burl.east.myfairpoint.net) has joined #scala
2013-05-09 06:22:16	-->	epuckett1 (~Adium@adsl-108-200-234-115.dsl.pltn13.sbcglobal.net) has joined #scala
2013-05-09 06:22:26	<--	epuckett (~Adium@adsl-108-200-236-245.dsl.pltn13.sbcglobal.net) has quit (Ping timeout: 252 seconds)
2013-05-09 06:23:07	-->	leroux (~leroux@unaffiliated/leroux) has joined #scala
2013-05-09 06:23:10	<--	mizu_no_oto (~textual@c-76-24-19-222.hsd1.ma.comcast.net) has quit (Quit: Computer has gone to sleep.)
2013-05-09 06:23:43	<--	leroux (~leroux@unaffiliated/leroux) has left #scala
2013-05-09 06:24:12	<--	epuckett1 (~Adium@adsl-108-200-234-115.dsl.pltn13.sbcglobal.net) has quit (Client Quit)
2013-05-09 06:24:39	-->	epuckett (~Adium@adsl-108-200-234-115.dsl.pltn13.sbcglobal.net) has joined #scala
2013-05-09 06:24:47	<--	epuckett (~Adium@adsl-108-200-234-115.dsl.pltn13.sbcglobal.net) has quit (Client Quit)
2013-05-09 06:29:19	<--	asrail (~quassel@177.193.199.186) has quit (Ping timeout: 264 seconds)
2013-05-09 06:30:53	-->	bmahe (~bmahe@fsf/member/bmahe) has joined #scala
2013-05-09 06:33:47	qu1j0t3	:-)
2013-05-09 06:34:02	qu1j0t3	adelbertc: i have put my exercise solutions in a repo, would be happy to discuss it any time.
2013-05-09 06:34:17	adelbertc	sounds good
2013-05-09 06:34:24	-->	lcfrs_ (~lcfrs@50-1-125-250.dsl.dynamic.sonic.net) has joined #scala
2013-05-09 06:34:47	<--	lcfrs (~lcfrs@50-1-125-250.dsl.dynamic.sonic.net) has quit (Ping timeout: 260 seconds)
2013-05-09 06:35:39	<--	sleepynate (~sleepynat@108-228-209-115.lightspeed.livnmi.sbcglobal.net) has quit (Remote host closed the connection)
2013-05-09 06:36:54	<--	infynyxx (~infynyxx@cpe-24-90-84-91.nyc.res.rr.com) has quit (Remote host closed the connection)
2013-05-09 06:38:18	<--	tsan (~Adium@ip184-184-189-4.br.br.cox.net) has quit (Quit: Leaving.)
2013-05-09 06:39:43	<--	nirvdrum (~nirvdrum@pool-173-48-98-124.bstnma.fios.verizon.net) has quit (Ping timeout: 245 seconds)
2013-05-09 06:42:42	-->	m-jack (~chatzilla@cmr-208-97-104-82.cr.net.cable.rogers.com) has joined #scala
2013-05-09 06:47:59	<--	lcfrs_ (~lcfrs@50-1-125-250.dsl.dynamic.sonic.net) has quit (Ping timeout: 256 seconds)
2013-05-09 06:48:17	-->	lcfrs (~lcfrs@50-1-125-250.dsl.dynamic.sonic.net) has joined #scala
2013-05-09 06:55:00	<--	jackcviers (~user@24.149.8.212) has quit (Ping timeout: 256 seconds)
2013-05-09 06:58:02	<--	Heero (~Heero@unaffiliated/heero) has quit (Ping timeout: 268 seconds)
2013-05-09 06:58:28	-->	epuckett (~Adium@adsl-108-200-234-115.dsl.pltn13.sbcglobal.net) has joined #scala
2013-05-09 07:01:34	<--	tsinnema (~tsinnema@dsl-espbrasgw1-50dfb9-125.dhcp.inet.fi) has quit (Read error: Connection reset by peer)
2013-05-09 07:03:37	-->	tsinnema (~tsinnema@dsl-espbrasgw1-50dfb9-125.dhcp.inet.fi) has joined #scala
2013-05-09 07:04:12	<--	timemage (~user@pool-71-241-132-44.burl.east.myfairpoint.net) has quit (Ping timeout: 268 seconds)
2013-05-09 07:04:18	pfurla	dobblego: seen https://github.com/mauricio/postgresql-async?
2013-05-09 07:06:15	<--	djspiewak (~djspiewak@50-194-128-249-static.hfc.comcastbusiness.net) has quit (Quit: djspiewak)
2013-05-09 07:06:26	<--	m-jack (~chatzilla@cmr-208-97-104-82.cr.net.cable.rogers.com) has quit (Ping timeout: 252 seconds)
2013-05-09 07:06:58	<--	doctau_ (doctau@nat/redhat/x-pfypbtryugpnibwc) has quit (Ping timeout: 256 seconds)
2013-05-09 07:07:58	tpolecat	"Once you are done, call disconnect" .. hm
2013-05-09 07:10:07	<--	QuaintRcky (~QuaintRck@71-93-229-98.dhcp.mdfd.or.charter.com) has quit (Remote host closed the connection)
2013-05-09 07:12:12	-->	timemage (~user@pool-64-223-237-181.port.east.myfairpoint.net) has joined #scala
2013-05-09 07:12:13	<--	hiratara (~hiratara@j080110.dynamic.ppp.asahi-net.or.jp) has quit (Ping timeout: 268 seconds)
2013-05-09 07:13:37	-->	headius (~headius@65-128-131-102.mpls.qwest.net) has joined #scala
2013-05-09 07:14:25	-->	m-jack (~chatzilla@cmr-208-97-104-82.cr.net.cable.rogers.com) has joined #scala
2013-05-09 07:16:49	-->	lanemeyer (lanemeyer@ip72-209-192-183.dc.dc.cox.net) has joined #scala
2013-05-09 07:17:45	-->	hiratara (~hiratara@i218040.dynamic.ppp.asahi-net.or.jp) has joined #scala
2013-05-09 07:18:23	<--	oantsy (lanemeyer@ip72-209-192-183.dc.dc.cox.net) has quit (Ping timeout: 268 seconds)
2013-05-09 07:20:08	-->	doctau_ (doctau@nat/redhat/x-wlhkodlhixndtlfh) has joined #scala
2013-05-09 07:25:18	<--	maxiaoyu (~maxiaoyu@122.4.21.234) has quit (Quit: Leaving)
2013-05-09 07:26:27	dacc	looks cool
2013-05-09 07:26:30	<--	sritchie (~sritchie@c-67-180-210-142.hsd1.ca.comcast.net) has quit (Ping timeout: 264 seconds)
2013-05-09 07:27:19	--	gpampara_off is now known as gpampara
2013-05-09 07:33:28	<--	timemage (~user@pool-64-223-237-181.port.east.myfairpoint.net) has quit (Ping timeout: 256 seconds)
2013-05-09 07:37:36	<--	SingingBoyo (~brandon@d154-5-190-48.bchsia.telus.net) has quit (Remote host closed the connection)
2013-05-09 07:38:39	-->	s3b` (~shendows@c-24-6-25-225.hsd1.ca.comcast.net) has joined #scala
2013-05-09 07:38:53	<--	ranie (~rramiso@124.6.182.55) has quit (Ping timeout: 245 seconds)
2013-05-09 07:38:55	s3b`	lol I'm passing one argument to a function that takes one argument, and getting a "too many arguments" error
2013-05-09 07:39:16	s3b`	and it was a part that always worked until now, and same thing works in another part
2013-05-09 07:39:43	imeredith	s3b`: are you sure it takes one argment
2013-05-09 07:39:44	imeredith	?
2013-05-09 07:40:07	-->	atamagawarui (~user@unaffiliated/dijkstragroupie) has joined #scala
2013-05-09 07:40:12	s3b`	100%, I'm using the same exact code elsewhere too
2013-05-09 07:40:14	s3b`	takes a JsObject
2013-05-09 07:40:23	s3b`	pretty sure it's a syntax error somewhere
2013-05-09 07:40:38	--	pdxleif_away is now known as pdxleif
2013-05-09 07:40:57	s3b`	http://hastebin.com/wipitemoci.scala
2013-05-09 07:41:17	<--	miclorb (~miclorb@ppp121-44-136-248.lns20.syd7.internode.on.net) has quit (Remote host closed the connection)
2013-05-09 07:41:31	imeredith	s3b`: is that a play JsObject?
2013-05-09 07:41:39	s3b`	imeredith: Yes
2013-05-09 07:41:43	-->	miclorb (~miclorb@ppp121-44-136-248.lns20.syd7.internode.on.net) has joined #scala
2013-05-09 07:42:01	imeredith	s3b`: btw which line is erroring?
2013-05-09 07:42:09	s3b`	line 3
2013-05-09 07:42:20	s3b`	oh wait
2013-05-09 07:42:33	tpolecat	notifyAll is defined on java.lang.Object and takes no arguments
2013-05-09 07:43:22	tpolecat	! { val a = "foo"; a.synchronized { a.notifyAll() } }
2013-05-09 07:43:27	imeredith	s3b`: Js.obj("type"->"log", "data" -> mesg) works too btw 
2013-05-09 07:43:57	s3b`	imeredith: figured it out, my def notifyAll was inside curly brackets it shouldn't of been
2013-05-09 07:44:04	s3b`	is that for 2.0.4 as well?
2013-05-09 07:44:20	s3b`	I'm following the example in their websocket chat >.>
2013-05-09 07:44:27	imeredith	ah its 2.1
2013-05-09 07:44:31	s3b`	yeah
2013-05-09 07:44:33	imeredith	2.1 is better
2013-05-09 07:44:41	s3b`	never could get it to run, always ran into an error
2013-05-09 07:45:01	s3b`	I've always liked jerkson's generate(), but i don't feel like rewriting everything :P
2013-05-09 07:45:05	tpolecat	you should probably rename notifyAll … inadvertent overloading can lead to confusion 
2013-05-09 07:45:23	s3b`	tpolecat: I will, didn't know it belonged to something else
2013-05-09 07:46:05	-->	timemage (~user@64.223.234.224) has joined #scala
2013-05-09 07:46:58	-->	pantsman (~pantsman@pdpc/supporter/active/pantsman) has joined #scala
2013-05-09 07:47:24	tpolecat	notify() is also defined on Object, which is irritating since it's a nice method name
2013-05-09 07:47:40	s3b`	yeah thats why I always use n0tify
2013-05-09 07:47:43	s3b`	jk
2013-05-09 07:48:01	s3b`	it sucks tho, because I love currying functions
2013-05-09 07:48:17	s3b`	i have, notifyAll(jsObject), notifyExcept(user)(jsObject)
2013-05-09 07:48:28	s3b`	so all you do is" notifyExcept(user) { } " :3
2013-05-09 07:48:31	<--	daniel_hinojosa (~danno@67-0-179-87.albq.qwest.net) has quit (Ping timeout: 260 seconds)
2013-05-09 07:48:41	 *	s3b` its the small things
2013-05-09 07:49:27	<--	lcfrs (~lcfrs@50-1-125-250.dsl.dynamic.sonic.net) has quit (Remote host closed the connection)
2013-05-09 07:50:26	<--	m-jack (~chatzilla@cmr-208-97-104-82.cr.net.cable.rogers.com) has quit (Ping timeout: 252 seconds)
2013-05-09 07:53:04	<--	dankest (~dankest@ip24-254-84-12.sb.sd.cox.net) has quit (Quit: Leaving...)
2013-05-09 07:53:33	-->	_garbage_1 (~Adium@14.140.43.50) has joined #scala
2013-05-09 07:53:56	<--	tyoc213 (~tyoc213@189.135.138.242) has quit (Remote host closed the connection)
2013-05-09 07:54:01	--	_garbage_1 is now known as _Garbage_
2013-05-09 07:54:19	-->	dankest (~dankest@ip24-254-84-12.sb.sd.cox.net) has joined #scala
2013-05-09 07:55:08	<--	timemage (~user@64.223.234.224) has quit (Ping timeout: 256 seconds)
2013-05-09 07:55:20	-->	ranie (~rramiso@124.6.182.55) has joined #scala
2013-05-09 07:56:22	-->	kushal (kdas@fedora/kushal) has joined #scala
2013-05-09 07:56:47	--	Watcher7 is now known as Watcher7|off
2013-05-09 07:57:03	<--	headius (~headius@65-128-131-102.mpls.qwest.net) has quit (Quit: headius)
2013-05-09 08:00:54	ryanlecompte	cool
2013-05-09 08:01:04	ryanlecompte	an infinite / cyclic stream that GC's properly: https://gist.github.com/ryanlecompte/5545830
2013-05-09 08:02:12	-->	kho`kho` (~phan@144.214.222.125) has joined #scala
2013-05-09 08:05:52	<--	bartt (~Adium@8.25.197.25) has quit (Quit: Leaving.)
2013-05-09 08:08:28	<--	elek_ (elek_@c-76-111-252-247.hsd1.fl.comcast.net) has quit (Ping timeout: 256 seconds)
2013-05-09 08:11:34	<--	pantsman (~pantsman@pdpc/supporter/active/pantsman) has quit (Ping timeout: 276 seconds)
2013-05-09 08:12:20	imeredith	grr function2 doesnt have compose
2013-05-09 08:13:30	--	pdxleif is now known as pdxleif_away
2013-05-09 08:18:24	-->	Leon (~Leon@s83-180-231-178.cust.tele2.se) has joined #scala
2013-05-09 08:18:26	tpolecat	ryanlecompte: the naive version works ok for me, gc-wise … def cycle[A](as:Stream[A]):Stream[A] = as #::: cycle(as)
2013-05-09 08:19:16	ryanlecompte	tpolecat: yes that works well if you already have a Stream[A] though, right?
2013-05-09 08:19:28	-->	neutrino_ (~neutrino@p4FD0EB79.dip0.t-ipconnect.de) has joined #scala
2013-05-09 08:19:39	ryanlecompte	tpolecat: you could always call .toStream on as
2013-05-09 08:19:49	<--	dankest (~dankest@ip24-254-84-12.sb.sd.cox.net) has quit (Quit: Leaving...)
2013-05-09 08:19:52	tpolecat	right
2013-05-09 08:23:50	adelbertc	 funnily enough i was just reading about "cycle" in haskell
2013-05-09 08:23:56	adelbertc	before i tabbed back to this window
2013-05-09 08:24:23	imeredith	@type cycle
2013-05-09 08:24:25	lambdabot	[a] -> [a]
2013-05-09 08:24:32	tpolecat	it's much less of a minefield in haskell
2013-05-09 08:24:51	imeredith	oh
2013-05-09 08:24:57	tpolecat	everything having to do with laziness in scala is nervewracking 
2013-05-09 08:26:28	tpolecat	like my cycle thing above. if you use ++ instead of #::: it typechecks but blows up at runtime
2013-05-09 08:28:07	ryanlecompte	yup
2013-05-09 08:29:35	<--	hdoshi (~hdoshi@c-67-180-211-122.hsd1.ca.comcast.net) has quit (Ping timeout: 255 seconds)
2013-05-09 08:35:26	<--	nocturne7 (~havoc@c-76-103-150-97.hsd1.ca.comcast.net) has quit (Quit: Leaving)
2013-05-09 08:37:41	<--	_Garbage_ (~Adium@14.140.43.50) has quit (Quit: Leaving.)
2013-05-09 08:38:37	-->	k7k (~k7k@77-254-210-48.adsl.inetia.pl) has joined #scala
2013-05-09 08:39:53	-->	fayimora (~fayimora@5.151.0.1) has joined #scala
2013-05-09 08:39:53	<--	k7k (~k7k@77-254-210-48.adsl.inetia.pl) has quit (Read error: Connection reset by peer)
2013-05-09 08:40:02	-->	k7k (~k7k@77-254-210-48.adsl.inetia.pl) has joined #scala
2013-05-09 08:40:19	-->	headius (~headius@65-128-131-102.mpls.qwest.net) has joined #scala
2013-05-09 08:46:25	--	casualjim is now known as casualjim_zzz
2013-05-09 08:47:57	-->	bartt (~Adium@108.60.118.130) has joined #scala
2013-05-09 08:48:04	<--	headius (~headius@65-128-131-102.mpls.qwest.net) has quit (Quit: headius)
2013-05-09 08:50:02	<--	Leon (~Leon@s83-180-231-178.cust.tele2.se) has quit (Ping timeout: 245 seconds)
2013-05-09 08:51:49	-->	Leon (~Leon@s83-180-231-178.cust.tele2.se) has joined #scala
2013-05-09 08:52:01	<--	doctau_ (doctau@nat/redhat/x-wlhkodlhixndtlfh) has quit (Quit: Leaving)
2013-05-09 08:52:13	-->	neutrino1 (~neutrino@p57AE9704.dip0.t-ipconnect.de) has joined #scala
2013-05-09 08:53:45	--	wajiii-afk is now known as wajiii
2013-05-09 08:53:48	-->	mariaDa2 (~dark@213.238.10.41) has joined #scala
2013-05-09 08:54:56	<--	neutrino_ (~neutrino@p4FD0EB79.dip0.t-ipconnect.de) has quit (Ping timeout: 256 seconds)
2013-05-09 08:58:11	-->	Ashoat (~Ashoat@c-67-171-17-59.hsd1.wa.comcast.net) has joined #scala
2013-05-09 08:59:35	-->	headius (~headius@65-128-131-102.mpls.qwest.net) has joined #scala
2013-05-09 09:02:34	<--	headius (~headius@65-128-131-102.mpls.qwest.net) has quit (Client Quit)
2013-05-09 09:03:26	-->	fsvehla (~fsvehla@h081217181184.dyn.cm.kabsi.at) has joined #scala
2013-05-09 09:03:51	<--	tpolecat (~tpolecat@c-24-22-11-146.hsd1.or.comcast.net) has quit (Quit: is having a little nap now.)
2013-05-09 09:06:19	-->	joneshf-laptop (~joneshf@c-98-208-36-36.hsd1.ca.comcast.net) has joined #scala
2013-05-09 09:10:47	<--	OOPMan (~adamj@105-236-113-162.access.mtnbusiness.co.za) has quit (Quit: Leaving.)
2013-05-09 09:12:58	-->	headius (~headius@65-128-131-102.mpls.qwest.net) has joined #scala
2013-05-09 09:13:27	<--	headius (~headius@65-128-131-102.mpls.qwest.net) has quit (Client Quit)
2013-05-09 09:13:34	-->	LennyLinux (~LennyLinu@151.64.1.88) has joined #scala
2013-05-09 09:13:45	<--	shrewdu (~arn@192.210.214.195) has quit (Quit: Lost terminal)
2013-05-09 09:13:48	<--	P1RATEZ (piratez@CPE602ad086e9b5-CM602ad086e9b2.cpe.net.cable.rogers.com) has quit (Quit: Read error: Text overflow)
2013-05-09 09:14:25	<--	fsvehla (~fsvehla@h081217181184.dyn.cm.kabsi.at) has quit (Quit: fsvehla)
2013-05-09 09:14:35	--	wajiii is now known as wajiii-afk
2013-05-09 09:14:45	-->	fsvehla (~fsvehla@h081217181184.dyn.cm.kabsi.at) has joined #scala
2013-05-09 09:15:01	-->	bblfish (~bblfish@AAubervilliers-652-1-240-141.w86-198.abo.wanadoo.fr) has joined #scala
2013-05-09 09:15:23	<--	cppexpert (~cppexpert@c-24-5-149-123.hsd1.ca.comcast.net) has quit
2013-05-09 09:15:25	-->	OOPMan (~Adam_Jorg@105-236-113-162.access.mtnbusiness.co.za) has joined #scala
2013-05-09 09:16:14	--	casualjim_zzz is now known as casualjim
2013-05-09 09:16:42	-->	pantsman (~pantsman@188-222-133-52.zone13.bethere.co.uk) has joined #scala
2013-05-09 09:16:42	<--	pantsman (~pantsman@188-222-133-52.zone13.bethere.co.uk) has quit (Changing host)
2013-05-09 09:16:42	-->	pantsman (~pantsman@pdpc/supporter/active/pantsman) has joined #scala
2013-05-09 09:18:40	<--	jamesiry (~Adium@c-24-7-67-118.hsd1.ca.comcast.net) has quit (Quit: Leaving.)
2013-05-09 09:18:41	-->	rdg (~rdg@31.91.79.193) has joined #scala
2013-05-09 09:19:14	-->	zuzkins (~zuzkins@doit.inkubator.cvut.cz) has joined #scala
2013-05-09 09:20:50	-->	ramses_ (~ramses@cl-1301.bru-01.be.sixxs.net) has joined #scala
2013-05-09 09:22:15	-->	scott_w (~quassel@93-97-174-114.zone5.bethere.co.uk) has joined #scala
2013-05-09 09:23:23	-->	ilpuccio (~ra@212.31.227.18) has joined #scala
2013-05-09 09:25:42	--	casualjim is now known as casualjim_zzz
2013-05-09 09:28:23	<--	rdg (~rdg@31.91.79.193) has quit (Quit: ttfn)
2013-05-09 09:28:52	-->	seanparsons_ (~sean@host86-144-68-163.range86-144.btcentralplus.com) has joined #scala
2013-05-09 09:28:53	<--	Ashoat (~Ashoat@c-67-171-17-59.hsd1.wa.comcast.net) has quit (Ping timeout: 252 seconds)
2013-05-09 09:29:50	-->	Wertax (~wertax@2001:980:2682:1:cdb3:e38b:2733:b76d) has joined #scala
2013-05-09 09:31:16	-->	atoll (~atoll@84-74-102-216.dclient.hispeed.ch) has joined #scala
2013-05-09 09:32:03	-->	Ashoat (~Ashoat@69.63.185.56) has joined #scala
2013-05-09 09:32:31	<--	kelvl (~kelvl@c-24-5-148-128.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2013-05-09 09:33:18	-->	bitonic (~user@176.27.229.121) has joined #scala
2013-05-09 09:34:56	<--	pantsman (~pantsman@pdpc/supporter/active/pantsman) has quit (Ping timeout: 252 seconds)
2013-05-09 09:35:17	<--	ktosiek (~quassel@46.22.173.54) has quit (Ping timeout: 255 seconds)
2013-05-09 09:37:22	-->	ktosiek (~quassel@46.22.173.54) has joined #scala
2013-05-09 09:37:45	-->	MisterD (MisterD@port-92-205-31-16.dynamic.qsc.de) has joined #scala
2013-05-09 09:38:56	-->	SeriousWorm (~sworm@bnet2731.x3d.carnet.hr) has joined #scala
2013-05-09 09:41:11	<--	Wertax (~wertax@2001:980:2682:1:cdb3:e38b:2733:b76d) has quit (Remote host closed the connection)
2013-05-09 09:41:34	<--	flowsnake (~flowsnake@cpc26-aztw25-2-0-cust894.aztw.cable.virginmedia.com) has quit (Read error: Connection reset by peer)
2013-05-09 09:42:20	-->	nielsbusch (~textual@4606ds3-van.0.fullrate.dk) has joined #scala
2013-05-09 09:43:05	-->	milessabin (~miles@private.milessabin.com) has joined #scala
2013-05-09 09:43:28	-->	k7k1 (~k7k@178-37-102-228.adsl.inetia.pl) has joined #scala
2013-05-09 09:44:17	<--	k7k (~k7k@77-254-210-48.adsl.inetia.pl) has quit (Ping timeout: 252 seconds)
2013-05-09 09:46:09	-->	bblfish_ (~bblfish@AAubervilliers-651-1-306-218.w83-114.abo.wanadoo.fr) has joined #scala
2013-05-09 09:46:21	--	casualjim_zzz is now known as casualjim
2013-05-09 09:46:27	-->	flowsnake (~flowsnake@cpc26-aztw25-2-0-cust894.aztw.cable.virginmedia.com) has joined #scala
2013-05-09 09:46:29	<--	fayimora (~fayimora@5.151.0.1) has quit (Ping timeout: 252 seconds)
2013-05-09 09:47:18	<--	LennyLinux (~LennyLinu@151.64.1.88) has quit (Remote host closed the connection)
2013-05-09 09:48:15	-->	Wertax (~wertax@wolfkamp.xs4all.nl) has joined #scala
2013-05-09 09:48:17	-->	rexim (~rexim@unaffiliated/rexim) has joined #scala
2013-05-09 09:48:46	<--	bblfish (~bblfish@AAubervilliers-652-1-240-141.w86-198.abo.wanadoo.fr) has quit (Ping timeout: 256 seconds)
2013-05-09 09:48:51	-->	k7k (~k7k@77-254-211-145.adsl.inetia.pl) has joined #scala
2013-05-09 09:49:54	<--	k7k1 (~k7k@178-37-102-228.adsl.inetia.pl) has quit (Ping timeout: 256 seconds)
2013-05-09 09:53:34	-->	headius (~headius@65-128-131-102.mpls.qwest.net) has joined #scala
2013-05-09 09:54:27	<--	headius (~headius@65-128-131-102.mpls.qwest.net) has quit (Client Quit)
2013-05-09 09:55:12	<--	Wertax (~wertax@wolfkamp.xs4all.nl) has quit (Remote host closed the connection)
2013-05-09 09:55:41	-->	headius (~headius@65-128-131-102.mpls.qwest.net) has joined #scala
2013-05-09 09:59:48	--	casualjim is now known as casualjim_zzz
2013-05-09 10:00:50	<--	headius (~headius@65-128-131-102.mpls.qwest.net) has quit (Quit: headius)
2013-05-09 10:00:52	-->	biomunky (~biomunky@83-244-231-184.cust-83.exponential-e.net) has joined #scala
2013-05-09 10:02:52	-->	kelvl (~kelvl@c-24-5-148-128.hsd1.ca.comcast.net) has joined #scala
2013-05-09 10:04:04	<--	ryanlecompte (~ryanlecom@172-7-149-76.lightspeed.sntcca.sbcglobal.net) has quit (Remote host closed the connection)
2013-05-09 10:10:19	<--	buhawi (~buhawi@124.6.182.55) has quit (Quit: Computer has gone to sleep.)
2013-05-09 10:11:40	<--	kelvl (~kelvl@c-24-5-148-128.hsd1.ca.comcast.net) has quit (Ping timeout: 268 seconds)
2013-05-09 10:14:13	-->	fayimora (~fayimora@5.151.0.1) has joined #scala
2013-05-09 10:14:28	<--	deuteros_ (~deuteros@unaffiliated/deuteros) has quit (Quit: deuteros_)
2013-05-09 10:15:33	-->	przl (~przlrkt@p5B298C83.dip0.t-ipconnect.de) has joined #scala
2013-05-09 10:16:19	<--	xastey (~xastey@75-1-33-63.lightspeed.nbrntx.sbcglobal.net) has quit (Ping timeout: 246 seconds)
2013-05-09 10:16:40	-->	sonnguyen (~nguyenngo@cs181177123.pp.htv.fi) has joined #scala
2013-05-09 10:17:13	sonnguyen	Guys, a newbie question, please bear with me:
2013-05-09 10:17:35	sonnguyen	val response:Response = aDao.create(aModel)
2013-05-09 10:17:38	<--	bitonic (~user@176.27.229.121) has quit (Ping timeout: 245 seconds)
2013-05-09 10:17:53	sonnguyen	response isInstanceOf[Success]
2013-05-09 10:18:02	sonnguyen	Success extends Response
2013-05-09 10:18:16	sonnguyen	I got compilation error for the isInstanceOf line
2013-05-09 10:18:23	sonnguyen	what's wrong with the syntax?
2013-05-09 10:19:54	<--	Ashoat (~Ashoat@69.63.185.56) has quit (Ping timeout: 264 seconds)
2013-05-09 10:22:24	-->	Naktibalda (~chatzilla@host-81-20-37-12.eckoh.com) has joined #scala
2013-05-09 10:22:32	MisterD	sonnguyen, try putting a dot between the object and the inInstanceOf
2013-05-09 10:23:24	sonnguyen	Thanks MisterD, got it to compile
2013-05-09 10:23:49	sonnguyen	(the line is because I was in a specs scenario)
2013-05-09 10:23:52	sonnguyen	specs2
2013-05-09 10:23:56	-->	hiptobecubic (~john@unaffiliated/hiptobecubic) has joined #scala
2013-05-09 10:24:19	MisterD	i put dots almost everywhere, except for "symbol" method calls, such as + or << or -> or whatever
2013-05-09 10:24:47	MisterD	somehow makes the code feel more "stable" to me, if that makes any sense
2013-05-09 10:24:58	sonnguyen	Thanks. I agreed
2013-05-09 10:25:33	sonnguyen	I just started with play and have seen the spaces lying around must, should, etc
2013-05-09 10:25:41	sonnguyen	between the objects and method calls
2013-05-09 10:25:58	-->	rdg (~rdg@fluency-gw2.summerhall.co.uk) has joined #scala
2013-05-09 10:26:07	sonnguyen	apparently that looks nice :-P
2013-05-09 10:26:28	sonnguyen	but fails to compile in my above case
2013-05-09 10:27:37	<--	fsvehla (~fsvehla@h081217181184.dyn.cm.kabsi.at) has quit (Quit: fsvehla)
2013-05-09 10:27:48	<--	jcazevedo (~jcazevedo@bl18-118-29.dsl.telepac.pt) has quit (Remote host closed the connection)
2013-05-09 10:27:53	-->	trepidaciousMBR (~trepidaci@176.62.208.227) has joined #scala
2013-05-09 10:28:54	<--	bartt (~Adium@108.60.118.130) has quit (Quit: Leaving.)
2013-05-09 10:31:22	-->	tumm (~tobias.en@213.86.103.7) has joined #scala
2013-05-09 10:35:17	<--	piggybox (~piggybox@c-71-202-16-136.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2013-05-09 10:35:33	-->	folone (~folone@brln-4dba9826.pool.mediaWays.net) has joined #scala
2013-05-09 10:37:07	<--	lkba (~AndChat@bqm185.neoplus.adsl.tpnet.pl) has quit (Ping timeout: 264 seconds)
2013-05-09 10:37:19	<--	rdg (~rdg@fluency-gw2.summerhall.co.uk) has quit (Quit: ttfn)
2013-05-09 10:37:25	-->	piggybox (~piggybox@c-71-202-16-136.hsd1.ca.comcast.net) has joined #scala
2013-05-09 10:39:27	<--	przl (~przlrkt@p5B298C83.dip0.t-ipconnect.de) has quit (Ping timeout: 268 seconds)
2013-05-09 10:39:28	-->	lcfrs (~lcfrs@50-1-125-250.dsl.dynamic.sonic.net) has joined #scala
2013-05-09 10:43:00	-->	asQuirreL (~asQuirreL@oriel-student-nat.oriel.ox.ac.uk) has joined #scala
2013-05-09 10:43:09	<--	folone (~folone@brln-4dba9826.pool.mediaWays.net) has quit (Ping timeout: 268 seconds)
2013-05-09 10:43:26	<--	asQuirreL (~asQuirreL@oriel-student-nat.oriel.ox.ac.uk) has quit (Client Quit)
2013-05-09 10:43:31	<--	rexim (~rexim@unaffiliated/rexim) has quit (Remote host closed the connection)
2013-05-09 10:44:04	<--	sonnguyen (~nguyenngo@cs181177123.pp.htv.fi) has quit (Quit: sonnguyen)
2013-05-09 10:48:54	-->	zakora (~NC@tok69-4-82-236-111-173.fbx.proxad.net) has joined #scala
2013-05-09 10:51:22	--	casualjim_zzz is now known as casualjim
2013-05-09 10:52:16	-->	sonnguyen (~nguyenngo@cs181177123.pp.htv.fi) has joined #scala
2013-05-09 10:54:05	-->	Narigo (~Narigo@g229240078.adsl.alicedsl.de) has joined #scala
2013-05-09 10:55:41	-->	Wertax (~wertax@2001:980:2682:1:85bf:1f0f:2289:914e) has joined #scala
2013-05-09 10:57:03	aloiscochard	MisterD: same here, I prefer keeping dot and parenthesis
2013-05-09 10:57:10	-->	rsuniev123 (~textual@94.197.127.126.threembb.co.uk) has joined #scala
2013-05-09 10:57:26	-->	jamesiry (~Adium@c-24-7-67-118.hsd1.ca.comcast.net) has joined #scala
2013-05-09 11:00:31	<--	Wertax (~wertax@2001:980:2682:1:85bf:1f0f:2289:914e) has quit (Ping timeout: 264 seconds)
2013-05-09 11:00:55	--	casualjim is now known as casualjim_zzz
2013-05-09 11:01:55	-->	bitonic (~user@dyn1221-93.wlan.ic.ac.uk) has joined #scala
2013-05-09 11:02:14	<--	jamesiry (~Adium@c-24-7-67-118.hsd1.ca.comcast.net) has quit (Ping timeout: 268 seconds)
2013-05-09 11:07:45	<--	OOPMan (~Adam_Jorg@105-236-113-162.access.mtnbusiness.co.za) has quit (Read error: Connection reset by peer)
2013-05-09 11:07:49	-->	kelvl (~kelvl@c-24-5-148-128.hsd1.ca.comcast.net) has joined #scala
2013-05-09 11:12:17	<--	kelvl (~kelvl@c-24-5-148-128.hsd1.ca.comcast.net) has quit (Ping timeout: 252 seconds)
2013-05-09 11:13:43	<--	bmahe (~bmahe@fsf/member/bmahe) has quit (Quit: Leaving)
2013-05-09 11:14:13	<--	s3b` (~shendows@c-24-6-25-225.hsd1.ca.comcast.net) has quit (Ping timeout: 276 seconds)
2013-05-09 11:14:37	-->	ryanlecompte (~ryanlecom@172-7-149-76.lightspeed.sntcca.sbcglobal.net) has joined #scala
2013-05-09 11:15:26	-->	arussel (~user@2a02:2788:64:24c:6aa8:6dff:fe24:60a) has joined #scala
2013-05-09 11:15:57	arussel	I've got a very simple webapp (play) that needs to listen and react to a udp port. What woudl be the easiest way to do this ?
2013-05-09 11:16:07	-->	coindiff (~coindiff@host81-136-167-178.in-addr.btopenworld.com) has joined #scala
2013-05-09 11:16:07	<--	coindiff (~coindiff@host81-136-167-178.in-addr.btopenworld.com) has quit (Changing host)
2013-05-09 11:16:07	-->	coindiff (~coindiff@unaffiliated/coindiff) has joined #scala
2013-05-09 11:17:04	-->	Nekuromento (~Nekuromen@91.187.26.197) has joined #scala
2013-05-09 11:17:17	-->	agumonkey (~agu@101.217.72.86.rev.sfr.net) has joined #scala
2013-05-09 11:20:30	<--	ryanlecompte (~ryanlecom@172-7-149-76.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 264 seconds)
2013-05-09 11:20:47	-->	OOPMan (~adamj@105-236-113-162.access.mtnbusiness.co.za) has joined #scala
2013-05-09 11:23:57	-->	Nosceteipsum (~Nosceteip@d122243.adsl.hansenet.de) has joined #scala
2013-05-09 11:28:35	<--	fayimora (~fayimora@5.151.0.1) has quit (Quit: zzzzz...)
2013-05-09 11:31:33	-->	jcazevedo (~jcazevedo@193.137.28.184) has joined #scala
2013-05-09 11:33:03	<--	dacc (~dacc@c-24-17-231-116.hsd1.wa.comcast.net) has quit (Ping timeout: 245 seconds)
2013-05-09 11:33:21	-->	matheus23 (~quassel@p4FDF26B6.dip0.t-ipconnect.de) has joined #scala
2013-05-09 11:38:16	<--	rsuniev123 (~textual@94.197.127.126.threembb.co.uk) has quit (Ping timeout: 276 seconds)
2013-05-09 11:38:41	<--	Nekuromento (~Nekuromen@91.187.26.197) has quit (Quit: Nekuromento)
2013-05-09 11:39:28	-->	ryanlecompte (~ryanlecom@172-7-149-76.lightspeed.sntcca.sbcglobal.net) has joined #scala
2013-05-09 11:44:44	-->	oriig (~ilia@78-83-56-21.spectrumnet.bg) has joined #scala
2013-05-09 11:45:39	<--	lcfrs (~lcfrs@50-1-125-250.dsl.dynamic.sonic.net) has quit (Remote host closed the connection)
2013-05-09 11:48:40	<--	miclorb (~miclorb@ppp121-44-136-248.lns20.syd7.internode.on.net) has quit (Ping timeout: 276 seconds)
2013-05-09 11:48:43	<--	tsinnema (~tsinnema@dsl-espbrasgw1-50dfb9-125.dhcp.inet.fi) has quit (Quit: Ex-Chat)
2013-05-09 11:49:54	-->	shellac (~shellac@cpc6-aztw25-2-0-cust83.aztw.cable.virginmedia.com) has joined #scala
2013-05-09 11:51:54	--	casualjim_zzz is now known as casualjim
2013-05-09 11:54:23	-->	MCamou (~Adium@wan.taric.es) has joined #scala
2013-05-09 11:55:32	<--	OOPMan (~adamj@105-236-113-162.access.mtnbusiness.co.za) has quit (Quit: Leaving.)
2013-05-09 11:56:20	-->	Nekuromento (~Nekuromen@91.187.26.197) has joined #scala
2013-05-09 11:56:27	-->	shock_one (~shock_one@46.118.141.174) has joined #scala
2013-05-09 11:57:10	<--	ryanlecompte (~ryanlecom@172-7-149-76.lightspeed.sntcca.sbcglobal.net) has quit (Remote host closed the connection)
2013-05-09 11:57:30	Rogach	arussel: You'll probably need java.net.DatagramSocket for that.
2013-05-09 11:58:05	-->	jamesiry (~Adium@c-24-7-67-118.hsd1.ca.comcast.net) has joined #scala
2013-05-09 12:00:08	<--	MisterD (MisterD@port-92-205-31-16.dynamic.qsc.de) has quit (Ping timeout: 245 seconds)
2013-05-09 12:01:22	--	casualjim is now known as casualjim_zzz
2013-05-09 12:02:40	<--	jamesiry (~Adium@c-24-7-67-118.hsd1.ca.comcast.net) has quit (Ping timeout: 268 seconds)
2013-05-09 12:06:56	-->	rsuniev123 (~textual@212.140.174.166) has joined #scala
2013-05-09 12:07:20	-->	hikot (~hiltontok@87-194-60-217.bethere.co.uk) has joined #scala
2013-05-09 12:08:08	-->	kelvl (~kelvl@c-24-5-148-128.hsd1.ca.comcast.net) has joined #scala
2013-05-09 12:12:04	<--	rsuniev123 (~textual@212.140.174.166) has quit (Ping timeout: 276 seconds)
2013-05-09 12:12:19	<--	MCamou (~Adium@wan.taric.es) has quit (Remote host closed the connection)
2013-05-09 12:12:20	<--	kelvl (~kelvl@c-24-5-148-128.hsd1.ca.comcast.net) has quit (Ping timeout: 255 seconds)
2013-05-09 12:15:41	<--	dcorbin (~dcorbin@unaffiliated/dcorbin) has quit (Quit: This computer has gone to sleep)
2013-05-09 12:17:05	-->	colock (~colock@unaffiliated/colock) has joined #scala
2013-05-09 12:17:50	<--	bblfish_ (~bblfish@AAubervilliers-651-1-306-218.w83-114.abo.wanadoo.fr) has quit (Remote host closed the connection)
2013-05-09 12:17:54	<--	Nekuromento (~Nekuromen@91.187.26.197) has quit (Quit: Nekuromento)
2013-05-09 12:18:00	-->	LennyLinux (~LennyLinu@151.64.1.88) has joined #scala
2013-05-09 12:18:52	-->	rsuniev123 (~textual@212.140.174.166) has joined #scala
2013-05-09 12:19:20	-->	bblfish (~bblfish@AAubervilliers-652-1-240-141.w86-198.abo.wanadoo.fr) has joined #scala
2013-05-09 12:20:34	<--	bblfish (~bblfish@AAubervilliers-652-1-240-141.w86-198.abo.wanadoo.fr) has quit (Remote host closed the connection)
2013-05-09 12:23:40	-->	sleepynate (~sleepynat@108-228-209-115.lightspeed.livnmi.sbcglobal.net) has joined #scala
2013-05-09 12:26:39	<--	hiptobecubic (~john@unaffiliated/hiptobecubic) has quit (Ping timeout: 260 seconds)
2013-05-09 12:27:03	-->	Pranz (~Zorro_24@c80-217-216-30.bredband.comhem.se) has joined #scala
2013-05-09 12:27:08	<--	sonnguyen (~nguyenngo@cs181177123.pp.htv.fi) has quit (Quit: sonnguyen)
2013-05-09 12:28:59	-->	jrbalderrama (~Thunderbi@181.114.95.162) has joined #scala
2013-05-09 12:28:59	<--	jrbalderrama (~Thunderbi@181.114.95.162) has quit (Remote host closed the connection)
2013-05-09 12:29:14	-->	jrbalderrama (~Thunderbi@181.114.95.162) has joined #scala
2013-05-09 12:30:10	-->	MCamou (~Adium@wan.taric.es) has joined #scala
2013-05-09 12:32:12	Narigo	i'm struggling with futures again... i was told i'm doing a fork/join here and call deployVerticle on the result of that, meaning vert.x doesn't know what verticle i'm in. https://gist.github.com/Narigo/5546664 --- but why? i thought if i do this promise-to-future inside an async handler (e.g. deployModule/deployVerticle), the next function (argument of map/flatMap) is called when p.success(x) 
2013-05-09 12:32:13	Narigo	is called.. could someone explain to me what's going on?
2013-05-09 12:33:27	<--	piggybox (~piggybox@c-71-202-16-136.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2013-05-09 12:34:12	<--	ranie (~rramiso@124.6.182.55) has quit (Remote host closed the connection)
2013-05-09 12:34:32	-->	bblfish (~bblfish@AAubervilliers-652-1-240-141.w86-198.abo.wanadoo.fr) has joined #scala
2013-05-09 12:34:50	-->	francis_wolke (c7bcc19@gateway/web/cgi-irc/kiwiirc.com/x-tpnthmcjlneqqbux) has joined #scala
2013-05-09 12:35:52	-->	przl (~przlrkt@p5B298C83.dip0.t-ipconnect.de) has joined #scala
2013-05-09 12:36:26	<--	chatsiri_ (~chatsiri_@kuwin-133-10.kuwin.ku.ac.th) has quit (Ping timeout: 252 seconds)
2013-05-09 12:42:56	-->	gourlaysama (~gourlaysa@81-64-179-188.rev.numericable.fr) has joined #scala
2013-05-09 12:45:14	<--	rsuniev123 (~textual@212.140.174.166) has quit (Ping timeout: 252 seconds)
2013-05-09 12:46:02	<--	francis_wolke (c7bcc19@gateway/web/cgi-irc/kiwiirc.com/x-tpnthmcjlneqqbux) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2013-05-09 12:46:25	-->	adaro (~jkuperus@53518F8B.cm-6-2c.dynamic.ziggo.nl) has joined #scala
2013-05-09 12:47:39	-->	rsuniev123 (~textual@212.140.174.166) has joined #scala
2013-05-09 12:47:39	<--	OlegYch (~OlegYch@87.252.227.56) has quit (Ping timeout: 260 seconds)
2013-05-09 12:48:06	<--	atoll (~atoll@84-74-102-216.dclient.hispeed.ch) has quit (Quit: WeeChat 0.4.0)
2013-05-09 12:49:23	-->	francis_wolke (c7bcc19@gateway/web/cgi-irc/kiwiirc.com/x-mgjuduzonzkoyuha) has joined #scala
2013-05-09 12:50:09	<--	rackesis (~rackesis@ac249182.ppp.asahi-net.or.jp) has quit (Quit: Leaving...)
2013-05-09 12:52:23	--	casualjim_zzz is now known as casualjim
2013-05-09 12:52:45	<--	LennyLinux (~LennyLinu@151.64.1.88) has quit (Remote host closed the connection)
2013-05-09 12:53:18	-->	Spin1987 (~Adium@port-92-196-94-18.dynamic.qsc.de) has joined #scala
2013-05-09 12:53:41	<--	sleepynate (~sleepynat@108-228-209-115.lightspeed.livnmi.sbcglobal.net) has quit (Remote host closed the connection)
2013-05-09 12:54:44	-->	OOPMan (~adamj@41-134-255-154.dsl.mweb.co.za) has joined #scala
2013-05-09 12:54:50	-->	atoll (~atoll@84-74-102-216.dclient.hispeed.ch) has joined #scala
2013-05-09 12:55:41	-->	oehman (~martinohm@c-1bf5e253.06-10-686c6d10.cust.bredbandsbolaget.se) has joined #scala
2013-05-09 12:57:53	<--	francis_wolke (c7bcc19@gateway/web/cgi-irc/kiwiirc.com/x-mgjuduzonzkoyuha) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2013-05-09 12:58:30	-->	jamesiry (~Adium@c-24-7-67-118.hsd1.ca.comcast.net) has joined #scala
2013-05-09 13:01:55	--	casualjim is now known as casualjim_zzz
2013-05-09 13:03:06	<--	jamesiry (~Adium@c-24-7-67-118.hsd1.ca.comcast.net) has quit (Ping timeout: 268 seconds)
2013-05-09 13:04:19	-->	igstan (~igstan@109.99.235.103) has joined #scala
2013-05-09 13:04:29	<--	k7k (~k7k@77-254-211-145.adsl.inetia.pl) has quit (Quit: Leaving.)
2013-05-09 13:04:32	<--	gourlaysama (~gourlaysa@81-64-179-188.rev.numericable.fr) has quit (Quit: ChatZilla 0.9.90 [Firefox 20.0/20130401111945])
2013-05-09 13:05:48	<--	igstan (~igstan@109.99.235.103) has quit (Client Quit)
2013-05-09 13:07:43	-->	ryanlecompte (~ryanlecom@172-7-149-76.lightspeed.sntcca.sbcglobal.net) has joined #scala
2013-05-09 13:08:31	-->	kelvl (~kelvl@c-24-5-148-128.hsd1.ca.comcast.net) has joined #scala
2013-05-09 13:11:55	<--	bblfish (~bblfish@AAubervilliers-652-1-240-141.w86-198.abo.wanadoo.fr) has quit (Ping timeout: 260 seconds)
2013-05-09 13:12:30	-->	bblfish (~bblfish@AAubervilliers-651-1-306-218.w83-114.abo.wanadoo.fr) has joined #scala
2013-05-09 13:12:45	<--	kelvl (~kelvl@c-24-5-148-128.hsd1.ca.comcast.net) has quit (Ping timeout: 252 seconds)
2013-05-09 13:13:31	<--	pdrFurst (~PedroFurs@187.115.52.150) has quit
2013-05-09 13:15:18	<--	ryanlecompte (~ryanlecom@172-7-149-76.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 256 seconds)
2013-05-09 13:17:04	<--	dek5 (~eugene@mail.quickpay.ru) has quit (Quit: Leaving.)
2013-05-09 13:17:09	-->	RaceCondition (~erik@194.204.51.44) has joined #scala
2013-05-09 13:19:54	-->	sleepynate (~sleepynat@108-228-209-115.lightspeed.livnmi.sbcglobal.net) has joined #scala
2013-05-09 13:23:10	<--	Pranz (~Zorro_24@c80-217-216-30.bredband.comhem.se) has quit (Quit: Lämnar)
2013-05-09 13:23:35	-->	Pranz (~Zorro_24@c80-217-216-30.bredband.comhem.se) has joined #scala
2013-05-09 13:29:32	-->	dacc (~dacc@c-24-17-231-116.hsd1.wa.comcast.net) has joined #scala
2013-05-09 13:29:58	-->	RaceCondishun (~erik@194.126.108.2) has joined #scala
2013-05-09 13:30:13	<--	mknoszlig (nachtalp@jcowboy.org) has quit (Excess Flood)
2013-05-09 13:30:36	-->	mknoszlig (nachtalp@jcowboy.org) has joined #scala
2013-05-09 13:32:32	<--	RaceCondition (~erik@194.204.51.44) has quit (Ping timeout: 252 seconds)
2013-05-09 13:32:32	--	RaceCondishun is now known as RaceCondition
2013-05-09 13:33:08	<--	kushal (kdas@fedora/kushal) has quit (Quit: Leaving)
2013-05-09 13:33:17	-->	asQuirreL (~asQuirreL@oriel-student-nat.oriel.ox.ac.uk) has joined #scala
2013-05-09 13:34:03	<--	dacc (~dacc@c-24-17-231-116.hsd1.wa.comcast.net) has quit (Ping timeout: 256 seconds)
2013-05-09 13:35:15	-->	t_p (~textual@122.234.235.127) has joined #scala
2013-05-09 13:38:55	-->	stdDoubt (~ptiago@a79-169-41-79.cpe.netcabo.pt) has joined #scala
2013-05-09 13:41:22	<--	soulofpeace (~soulofpea@119.75.11.250) has quit (Ping timeout: 256 seconds)
2013-05-09 13:42:35	stdDoubt	what is the most correct way of iterating a multiples ranges in scala (in java something like for(int i = 0; i< val;i++)for(int j = 0;j <valb;j++))? will for( i <- 0 until val;j <- 0 until valb) be slower than the java counterpart?
2013-05-09 13:42:55	<--	sleepynate (~sleepynat@108-228-209-115.lightspeed.livnmi.sbcglobal.net) has quit (Remote host closed the connection)
2013-05-09 13:43:31	asQuirreL	stdDoubt, try and see? my guess is that if it *is* slower, it is only marginally slower
2013-05-09 13:43:55	kippesoep	it's quite slower
2013-05-09 13:44:02	asQuirreL	orly? why is that?
2013-05-09 13:44:04	kippesoep	nested while loops are on par
2013-05-09 13:44:19	kippesoep	it creates the entire range, would be my guess
2013-05-09 13:44:32	asQuirreL	are ranges not lazy streams?
2013-05-09 13:44:43	kippesoep	hm, that's a good point
2013-05-09 13:44:47	kippesoep	still, it's slower
2013-05-09 13:44:50	kippesoep	not sure why then
2013-05-09 13:45:06	asQuirreL	there is some overhead from resolving all the abstractions
2013-05-09 13:45:08	Ezku	it's slower because what it does is flatmap
2013-05-09 13:45:22	asQuirreL	plus for in scala is an expression
2013-05-09 13:46:42	Ezku	there's quite a bit more to it than just assigning two ints in a loop, if you're using a for expression
2013-05-09 13:47:01	-->	ryanlecompte (~ryanlecom@172-7-149-76.lightspeed.sntcca.sbcglobal.net) has joined #scala
2013-05-09 13:47:14	Ezku	for comprehension, I mean
2013-05-09 13:47:29	<--	ryanlecompte (~ryanlecom@172-7-149-76.lightspeed.sntcca.sbcglobal.net) has quit (Remote host closed the connection)
2013-05-09 13:47:44	-->	stefan-_ (~stefan@swhpet3183.uni-trier.de) has joined #scala
2013-05-09 13:48:15	-->	ryanlecompte (~ryanlecom@172-7-149-76.lightspeed.sntcca.sbcglobal.net) has joined #scala
2013-05-09 13:49:05	<--	bitonic (~user@dyn1221-93.wlan.ic.ac.uk) has quit (Ping timeout: 255 seconds)
2013-05-09 13:49:39	<--	nn0101 (~nn0101@unaffiliated/nn0101) has quit (Read error: Connection reset by peer)
2013-05-09 13:51:23	<--	fogus|gone (~fogus@freedom.d-a-s.com) has quit (Remote host closed the connection)
2013-05-09 13:51:30	-->	nn0101 (~nn0101@unaffiliated/nn0101) has joined #scala
2013-05-09 13:52:50	--	casualjim_zzz is now known as casualjim
2013-05-09 13:55:55	-->	MisterD (MisterD@port-92-205-31-16.dynamic.qsc.de) has joined #scala
2013-05-09 13:55:59	-->	antoineB (~antoine@32.54.14.109.rev.sfr.net) has joined #scala
2013-05-09 13:59:03	-->	jamesiry (~Adium@c-24-7-67-118.hsd1.ca.comcast.net) has joined #scala
2013-05-09 13:59:07	-->	MCamou1 (~Adium@wan.taric.es) has joined #scala
2013-05-09 13:59:25	<--	MCamou (~Adium@wan.taric.es) has quit (Read error: Operation timed out)
2013-05-09 14:00:49	<--	RaceCondition (~erik@194.126.108.2) has quit (Quit: RaceCondition)
2013-05-09 14:02:18	--	casualjim is now known as casualjim_zzz
2013-05-09 14:03:32	<--	jamesiry (~Adium@c-24-7-67-118.hsd1.ca.comcast.net) has quit (Ping timeout: 268 seconds)
2013-05-09 14:04:27	<--	atoll (~atoll@84-74-102-216.dclient.hispeed.ch) has quit (Ping timeout: 252 seconds)
2013-05-09 14:05:42	-->	refefer (~astanton@c-76-111-70-251.hsd1.va.comcast.net) has joined #scala
2013-05-09 14:06:38	SethTisue	re: slowness of "for" in Scala, see https://issues.scala-lang.org/browse/SI-1338
2013-05-09 14:07:15	SethTisue	Spire provides a fast loop called "cfor"; see https://github.com/non/spire
2013-05-09 14:08:26	<--	asQuirreL (~asQuirreL@oriel-student-nat.oriel.ox.ac.uk) has quit (Quit: Computer has gone to sleep.)
2013-05-09 14:08:48	-->	moops (~username@unaffiliated/moops) has joined #scala
2013-05-09 14:08:50	-->	kelvl (~kelvl@c-24-5-148-128.hsd1.ca.comcast.net) has joined #scala
2013-05-09 14:09:23	stdDoubt	What is the best way of adding all the List[Double] by position if we have List[List[Double]]. How to zip the List[List[Double]] by position and do map(_ + _) in one pass?Is it possible?
2013-05-09 14:09:44	kho`kho`	SethTisue: thanks, very useful
2013-05-09 14:10:32	moops	stdDoubt: what sort of position do you want? two indices or just one?
2013-05-09 14:11:16	stdDoubt	example: List(List(1,2,3),List(4,5,6)) would produce List(5,7,9)
2013-05-09 14:11:20	SethTisue	! List(List(1,2,3), List(10, 20, 30), List(100, 200, 300)).transpose.map(_.sum)
2013-05-09 14:11:21	multibot_	 List[Int] = List(111, 222, 333)
2013-05-09 14:12:06	kho`kho`	! List(List(1,2,3),List(4,5,6)).transpose.map(_.sum)
2013-05-09 14:12:06	multibot_	 List[Int] = List(5, 7, 9)
2013-05-09 14:12:11	kho`kho`	correct
2013-05-09 14:12:16	SethTisue	that's two passes though
2013-05-09 14:12:29	stdDoubt	with view? like
2013-05-09 14:13:09	stdDoubt	no two passes
2013-05-09 14:13:14	<--	kelvl (~kelvl@c-24-5-148-128.hsd1.ca.comcast.net) has quit (Ping timeout: 252 seconds)
2013-05-09 14:13:39	SethTisue	you can insert "'.view" and it works, but I wouldn't assume it's single pass without actually testing for that. views are pretty janky; see https://issues.scala-lang.org/browse/SI-4332
2013-05-09 14:14:44	moops	haha
2013-05-09 14:15:22	stdDoubt	thanks
2013-05-09 14:15:27	SethTisue	so that's two major longstanding, years-unfixed flaws in Scala in ten minutes...
2013-05-09 14:16:08	-->	RaceCondition (~erik@194.126.108.2) has joined #scala
2013-05-09 14:18:14	SethTisue	if you have a sequence that permits fast random access, such as Vector instead of List, you could do:
2013-05-09 14:18:26	SethTisue	! val seqs = Vector(Vector(1,2,3), Vector(10, 20, 30), Vector(100, 200, 300)); for(i <- seqs.head.indices) yield seqs.map(_(i)).sum
2013-05-09 14:18:26	multibot_	 seqs: scala.collection.immutable.Vector[scala.collection.immutable.Vector[Int]] = Vector(Vector(1, 2, 3), Vector(10, 20, 30), Vector(100, 200, 300))
2013-05-09 14:18:27	multibot_	 scala.collection.immutable.IndexedSeq[Int] = Vector(111, 222, 333)
2013-05-09 14:19:22	stdDoubt	nice
2013-05-09 14:19:41	-->	tsinnema (~tsinnema@a91-156-149-49.elisa-laajakaista.fi) has joined #scala
2013-05-09 14:20:24	-->	asQuirreL (~asQuirreL@oriel-student-nat.oriel.ox.ac.uk) has joined #scala
2013-05-09 14:21:41	<--	adaro (~jkuperus@53518F8B.cm-6-2c.dynamic.ziggo.nl) has quit (Quit: adaro)
2013-05-09 14:23:39	-->	jkarlsson (~jonas@70-100-130-14.dsl1-field.roch.ny.frontiernet.net) has joined #scala
2013-05-09 14:24:26	<--	biomunky (~biomunky@83-244-231-184.cust-83.exponential-e.net) has quit (Quit: biomunky)
2013-05-09 14:25:06	-->	LennyLinux (~LennyLinu@151.64.1.88) has joined #scala
2013-05-09 14:25:50	-->	HairyFotr1 (~hairy@89-212-217-158.dynamic.t-2.net) has joined #scala
2013-05-09 14:31:50	stdDoubt	is there a way of getting the iteration index in a  for besides for(value <- alist.view.zipWithIndex)?
2013-05-09 14:33:09	SethTisue	no
2013-05-09 14:33:18	-->	irrummi (~igorrumih@20-115.dsl.iskon.hr) has joined #scala
2013-05-09 14:33:31	Lymia	for((value, i) <- alist.view.zipWithIndex)
2013-05-09 14:33:46	Lymia	Will get you cleaner code, but, I dunno what else you can do
2013-05-09 14:34:37	-->	biomunky (~biomunky@83-244-231-184.cust-83.exponential-e.net) has joined #scala
2013-05-09 14:34:51	stdDoubt	ok
2013-05-09 14:34:56	stdDoubt	thanks again
2013-05-09 14:37:06	stdDoubt	my problem is that at the end I will end up with a lazy seq if I do for((value, i) <- alist.view.zipWithIndex) yield {...}. How can I convert it to "normal" Seq (with force?) and what is the cost?
2013-05-09 14:37:30	-->	xastey (~xastey@75-1-33-63.lightspeed.nbrntx.sbcglobal.net) has joined #scala
2013-05-09 14:37:54	SethTisue	I never use ".view" at all. I don't trust it to work, and even if it works, I don't trust it to actually improve performance. just forget it exists
2013-05-09 14:38:18	SethTisue	but yes, .force
2013-05-09 14:38:30	refefer	SethTisue: I use it when I chain a lot of maps or filters
2013-05-09 14:38:40	SethTisue	have you measured it to improve performance in practice?
2013-05-09 14:38:48	refefer	yep, that's how I stumbled upon it
2013-05-09 14:39:23	refefer	created intermediary lists/seq when you have chains of operations can become expensive
2013-05-09 14:39:46	refefer	I shy away from them though since they are horribly broken for Arrays
2013-05-09 14:40:03	stdDoubt	force will go trough all the elements of the  lazy seq?
2013-05-09 14:40:17	refefer	stdDoubt: it will force it to evaluate
2013-05-09 14:40:36	stdDoubt	ok
2013-05-09 14:40:45	<--	RRSchulz (~RRSchulz@173-228-5-23.dsl.static.sonic.net) has quit (Quit: Leaving.)
2013-05-09 14:41:21	-->	vy (58fff5fc@gateway/web/freenode/ip.88.255.245.252) has joined #scala
2013-05-09 14:42:02	vy	! 0x8942.asInstanceOf[Short]
2013-05-09 14:42:02	multibot_	 Short = -30398
2013-05-09 14:42:20	vy	What's the easiest way to go back, that is, get 0x8942 from -30398?
2013-05-09 14:42:38	<--	vramana (~chatzilla@117.207.250.232) has quit (Quit: ChatZilla 0.9.90 [Firefox 20.0/20130417085609])
2013-05-09 14:43:12	-->	kobain (~kobian@unaffiliated/kobain) has joined #scala
2013-05-09 14:44:07	SethTisue	refefer: do you have any feel for how many maps and filters you have to chain before "view" starts winning?
2013-05-09 14:44:54	-->	io2 (~io2@unaffiliated/irrequietus) has joined #scala
2013-05-09 14:45:00	refefer	SethTisue: always hard to tell, since it also depends on the number of elements in the initial Seq/List
2013-05-09 14:45:14	SethTisue	I'm testing it right now with a 100,000 element list
2013-05-09 14:45:24	SethTisue	with a chain of five maps and filters, view wins
2013-05-09 14:45:46	-->	k7k (~k7k@77-254-211-145.adsl.inetia.pl) has joined #scala
2013-05-09 14:46:29	refefer	makes sense you'd see it at that magnitude
2013-05-09 14:46:42	refefer	SethTisue: also fun: try it with an iterator
2013-05-09 14:47:30	<--	asQuirreL (~asQuirreL@oriel-student-nat.oriel.ox.ac.uk) has quit (Quit: Computer has gone to sleep.)
2013-05-09 14:48:06	-->	Nitro (~nitro@unaffiliated/nitro) has joined #scala
2013-05-09 14:48:33	-->	asQuirreL (~asQuirreL@oriel-student-nat.oriel.ox.ac.uk) has joined #scala
2013-05-09 14:48:47	-->	dwins (~dwins@195-239-234-66.static.cosmoweb.net) has joined #scala
2013-05-09 14:50:58	SethTisue	I stand corrected. even with 1 map and 1 filter, view gives much better performance on a 1,000,000 item List
2013-05-09 14:51:28	SethTisue	well, all the more reason to be sad about SI-4332
2013-05-09 14:51:42	SethTisue	view and iterator seem about equivalent
2013-05-09 14:53:15	--	casualjim_zzz is now known as casualjim
2013-05-09 14:54:40	-->	mljsimone (~mljsimone@186.137.248.10) has joined #scala
2013-05-09 14:58:03	<--	SeriousWorm (~sworm@bnet2731.x3d.carnet.hr) has quit (Ping timeout: 245 seconds)
2013-05-09 14:59:11	-->	navlelo_ (~df@249.157.189.109.customer.cdi.no) has joined #scala
2013-05-09 14:59:30	-->	jamesiry (~Adium@c-24-7-67-118.hsd1.ca.comcast.net) has joined #scala
2013-05-09 14:59:50	-->	Heero (~Heero@unaffiliated/heero) has joined #scala
2013-05-09 15:01:14	-->	betehess_laptop (~betehess@31-33-130.wireless.csail.mit.edu) has joined #scala
2013-05-09 15:02:43	--	casualjim is now known as casualjim_zzz
2013-05-09 15:04:35	<--	jamesiry (~Adium@c-24-7-67-118.hsd1.ca.comcast.net) has quit (Ping timeout: 268 seconds)
2013-05-09 15:06:15	-->	jardineworks (~jardinewo@76-10-170-66.dsl.teksavvy.com) has joined #scala
2013-05-09 15:06:18	refefer	SethTisue: and iterator isn't horribly broken :)
2013-05-09 15:06:53	refefer	SethTisue: that said, 1 map and 1 filter is a pretty common usecase, thus `withFilter`
2013-05-09 15:08:21	-->	refried_ (~refried_@z69-94-207-36.ips.direcpath.com) has joined #scala
2013-05-09 15:09:12	-->	kelvl (~kelvl@c-24-5-148-128.hsd1.ca.comcast.net) has joined #scala
2013-05-09 15:09:31	<--	shock_one (~shock_one@46.118.141.174) has quit (Ping timeout: 264 seconds)
2013-05-09 15:10:17	aloiscochard	anyone know if there is a proper reverse routing in blueeyese?
2013-05-09 15:10:22	aloiscochard	blueeyes*
2013-05-09 15:10:26	<--	RaceCondition (~erik@194.126.108.2) has quit (Quit: RaceCondition)
2013-05-09 15:10:45	<--	refried_ (~refried_@z69-94-207-36.ips.direcpath.com) has quit (Client Quit)
2013-05-09 15:10:49	-->	pmenon (~pmenon@75.98.196.98) has joined #scala
2013-05-09 15:12:08	<--	jrbalderrama (~Thunderbi@181.114.95.162) has quit (Quit: jrbalderrama)
2013-05-09 15:13:02	-->	PeteDaGuru (~PeteDaGur@user-0c99bnk.cable.mindspring.com) has joined #scala
2013-05-09 15:13:32	-->	soulofpeace (~soulofpea@cm234.gamma162.maxonline.com.sg) has joined #scala
2013-05-09 15:13:44	<--	kelvl (~kelvl@c-24-5-148-128.hsd1.ca.comcast.net) has quit (Ping timeout: 256 seconds)
2013-05-09 15:14:30	-->	jrbalderrama (~Thunderbi@181.114.95.162) has joined #scala
2013-05-09 15:14:30	-->	RSchulzB (~Adium@67.218.117.3) has joined #scala
2013-05-09 15:15:21	-->	nirvdrum (~nirvdrum@pool-173-48-98-124.bstnma.fios.verizon.net) has joined #scala
2013-05-09 15:15:31	-->	mizu_no_oto (~textual@c-76-24-19-222.hsd1.ma.comcast.net) has joined #scala
2013-05-09 15:16:18	-->	RRSchulz (~RRSchulz@2600:1010:b003:ffb8:e174:c16c:5e82:c50b) has joined #scala
2013-05-09 15:17:13	<--	pfurla (~Adium@186.221.83.47) has quit (Quit: Leaving.)
2013-05-09 15:17:32	<--	Nitro (~nitro@unaffiliated/nitro) has quit (Ping timeout: 268 seconds)
2013-05-09 15:20:21	-->	pfurla (~Adium@186.221.83.47) has joined #scala
2013-05-09 15:20:30	colock	hoi aloiscochard 
2013-05-09 15:22:06	<--	pcarrier (~textual@unaffiliated/pcarrier) has quit (Ping timeout: 256 seconds)
2013-05-09 15:22:15	<--	danrabinowitz (~danrabino@184.106.149.15) has left #scala ("Linkinus - http://linkinus.com")
2013-05-09 15:24:55	-->	benkard (~benkard@mnch-5d8696be.pool.mediaWays.net) has joined #scala
2013-05-09 15:25:09	-->	pcarrier (~textual@unaffiliated/pcarrier) has joined #scala
2013-05-09 15:26:25	<--	pcarrier (~textual@unaffiliated/pcarrier) has quit (Max SendQ exceeded)
2013-05-09 15:27:24	-->	pcarrier (~textual@unaffiliated/pcarrier) has joined #scala
2013-05-09 15:30:26	-->	Nitro (~nitro@unaffiliated/nitro) has joined #scala
2013-05-09 15:30:29	<--	przl (~przlrkt@p5B298C83.dip0.t-ipconnect.de) has quit (Ping timeout: 268 seconds)
2013-05-09 15:32:35	<--	biomunky (~biomunky@83-244-231-184.cust-83.exponential-e.net) has left #scala
2013-05-09 15:33:18	-->	taylr (~taylr@static-96-239-100-47.nycmny.fios.verizon.net) has joined #scala
2013-05-09 15:33:52	-->	sleepynate (~sleepynat@199.16.190.194) has joined #scala
2013-05-09 15:34:26	<--	vy (58fff5fc@gateway/web/freenode/ip.88.255.245.252) has quit
2013-05-09 15:39:08	moops	how would i convert this to use fold/map/whatever instead of pattern matching? http://pastie.org/7822503 im on scala 2.10
2013-05-09 15:39:45	--	gpampara is now known as gpampara_off
2013-05-09 15:40:44	kho`kho`	moops: flatMap I guess
2013-05-09 15:41:38	aloiscochard	colock: hi mate :-)
2013-05-09 15:41:38	-->	paddymahoney (~patrick@24.137.221.230) has joined #scala
2013-05-09 15:42:03	aloiscochard	nuttycom: hi, I'm just wondering if blueeyes have a good reverse routing support?
2013-05-09 15:42:12	-->	m-jack (~chatzilla@cmr-208-97-104-82.cr.net.cable.rogers.com) has joined #scala
2013-05-09 15:43:11	moops	 value.flatMap(i => Some(Solid)).getOrElse(Air) 
2013-05-09 15:43:17	moops	doesnt actually seem nicer to look at hmm
2013-05-09 15:44:54	-->	vramana (~chatzilla@117.200.26.251) has joined #scala
2013-05-09 15:45:55	<--	irrummi (~igorrumih@20-115.dsl.iskon.hr) has quit (Ping timeout: 276 seconds)
2013-05-09 15:48:08	SethTisue	a little shorter: value.map(_ => Solid).getOrElse(Air)
2013-05-09 15:48:37	SethTisue	in real life I think I would probably just write: if (value.isDefined) Solid else Air
2013-05-09 15:48:50	-->	saml (~sam@adfb12c6.cst.lightpath.net) has joined #scala
2013-05-09 15:48:56	moops	yea thats nicer
2013-05-09 15:48:58	SethTisue	in the pattern matching version, better "Some(_)" than "Some(i)"
2013-05-09 15:49:11	moops	_ => Solid will be replaced with a proper mapping from tilecodes to tile types
2013-05-09 15:49:14	moops	but right now its just solids
2013-05-09 15:49:31	SethTisue	ah.  well, map + getOrElse then
2013-05-09 15:49:41	moops	thanks
2013-05-09 15:49:55	SethTisue	one more: value.fold(Air)(_ => Solid)
2013-05-09 15:50:25	moops	that one it doesnt like
2013-05-09 15:50:28	SethTisue	I can imagine some disagreement over whether this elegant and readable, or the opposite
2013-05-09 15:50:32	SethTisue	oops
2013-05-09 15:50:33	<--	mljsimone (~mljsimone@186.137.248.10) has quit (Remote host closed the connection)
2013-05-09 15:50:35	SethTisue	Scala 2.10?
2013-05-09 15:50:39	moops	says "missing type parameter" for the _, and if i put t:Int it cant find Solid
2013-05-09 15:50:39	moops	yes
2013-05-09 15:50:46	SethTisue	1 sec
2013-05-09 15:51:13	SethTisue	works for me
2013-05-09 15:51:19	SethTisue	! (Some(5): Option[Int]).fold(3)(_ => 10)
2013-05-09 15:51:19	multibot_	 Int = 10
2013-05-09 15:51:24	SethTisue	! (None: Option[Int]).fold(3)(_ => 10)
2013-05-09 15:51:24	multibot_	 Int = 3
2013-05-09 15:52:54	moops	hmm
2013-05-09 15:53:13	<--	Nitro (~nitro@unaffiliated/nitro) has quit (Quit: Hmm)
2013-05-09 15:53:23	-->	mljsimone (~mljsimone@186.137.248.10) has joined #scala
2013-05-09 15:53:28	moops	i have Language level set to Scala 2.10
2013-05-09 15:53:35	moops	but my compiler is version 2.9.2
2013-05-09 15:53:40	SethTisue	doh!
2013-05-09 15:53:42	<--	hyperboreean (~none@unaffiliated/hyperboreean) has quit (Ping timeout: 256 seconds)
2013-05-09 15:53:47	--	casualjim_zzz is now known as casualjim
2013-05-09 15:53:48	--	reactormonk_ is now known as reactormonk
2013-05-09 15:53:52	-->	hyperboreean (~none@unaffiliated/hyperboreean) has joined #scala
2013-05-09 15:53:57	moops	im not sure what "language level" would mean if its up to the compiler version
2013-05-09 15:54:01	moops	seems like it should give me a warning or something
2013-05-09 15:54:18	<--	paddymahoney (~patrick@24.137.221.230) has quit (Ping timeout: 245 seconds)
2013-05-09 15:57:36	-->	timemage (~user@pool-72-87-61-71.ptldme.east.myfairpoint.net) has joined #scala
2013-05-09 15:58:17	<--	m-jack (~chatzilla@cmr-208-97-104-82.cr.net.cable.rogers.com) has quit (Ping timeout: 252 seconds)
2013-05-09 15:58:33	-->	mawueli (~mawueli@199.115.115.212) has joined #scala
2013-05-09 15:59:47	-->	jamesiry (~Adium@c-24-7-67-118.hsd1.ca.comcast.net) has joined #scala
2013-05-09 16:00:25	-->	taylr_ (~taylr@static-96-239-100-47.nycmny.fios.verizon.net) has joined #scala
2013-05-09 16:00:29	<--	taylr_ (~taylr@static-96-239-100-47.nycmny.fios.verizon.net) has quit (Remote host closed the connection)
2013-05-09 16:00:30	-->	tysonjh (~thamilton@74.213.184.33) has joined #scala
2013-05-09 16:02:11	-->	taylr_ (~taylr@static-96-239-100-47.nycmny.fios.verizon.net) has joined #scala
2013-05-09 16:02:31	-->	RedPunch (~RedPunch@159.140.254.103) has joined #scala
2013-05-09 16:03:01	-->	paddymahoney (~patrick@24.137.221.230) has joined #scala
2013-05-09 16:03:15	--	casualjim is now known as casualjim_zzz
2013-05-09 16:03:48	<--	taylr (~taylr@static-96-239-100-47.nycmny.fios.verizon.net) has quit (Ping timeout: 252 seconds)
2013-05-09 16:03:59	-->	m-jack (~chatzilla@cmr-208-97-104-82.cr.net.cable.rogers.com) has joined #scala
2013-05-09 16:05:27	-->	OwenOu (~Adium@d207-6-244-57.bchsia.telus.net) has joined #scala
2013-05-09 16:06:12	<--	OwenOu (~Adium@d207-6-244-57.bchsia.telus.net) has quit (Client Quit)
2013-05-09 16:08:15	-->	mary5030 (~mary5030@72-48-77-85.dyn.grandenetworks.net) has joined #scala
2013-05-09 16:08:21	<--	mary5030 (~mary5030@72-48-77-85.dyn.grandenetworks.net) has quit (Remote host closed the connection)
2013-05-09 16:08:25	-->	lazrahl (~lazrahl@atlanta.tstllc.net) has joined #scala
2013-05-09 16:08:56	-->	mary5030 (~mary5030@72.32.115.231) has joined #scala
2013-05-09 16:09:04	-->	Apocalisp (~textual@c-174-62-237-65.hsd1.ma.comcast.net) has joined #scala
2013-05-09 16:09:13	<--	stdDoubt (~ptiago@a79-169-41-79.cpe.netcabo.pt) has quit (Read error: Connection reset by peer)
2013-05-09 16:09:33	-->	kelvl (~kelvl@c-24-5-148-128.hsd1.ca.comcast.net) has joined #scala
2013-05-09 16:09:33	<--	hikot (~hiltontok@87-194-60-217.bethere.co.uk) has quit (Read error: Connection reset by peer)
2013-05-09 16:11:08	-->	guampa (~guampa@unaffiliated/guampa) has joined #scala
2013-05-09 16:11:27	-->	hiltontokot (~hiltontok@87-194-60-217.bethere.co.uk) has joined #scala
2013-05-09 16:12:00	--	hiltontokot is now known as hikot
2013-05-09 16:12:11	-->	hiltontokot (~hiltontok@87-194-60-217.bethere.co.uk) has joined #scala
2013-05-09 16:12:36	<--	hiltontokot (~hiltontok@87-194-60-217.bethere.co.uk) has left #scala
2013-05-09 16:13:28	<--	joneshf-laptop (~joneshf@c-98-208-36-36.hsd1.ca.comcast.net) has quit (Ping timeout: 245 seconds)
2013-05-09 16:14:06	<--	kelvl (~kelvl@c-24-5-148-128.hsd1.ca.comcast.net) has quit (Ping timeout: 256 seconds)
2013-05-09 16:15:45	-->	chatsiri_ (~chatsiri_@14.207.220.23) has joined #scala
2013-05-09 16:16:46	<--	ryanlecompte (~ryanlecom@172-7-149-76.lightspeed.sntcca.sbcglobal.net) has quit (Remote host closed the connection)
2013-05-09 16:17:06	<--	yacks (~py@180.151.36.168) has quit (Ping timeout: 245 seconds)
2013-05-09 16:17:08	<--	dolio (~dolio@c-174-63-84-118.hsd1.ma.comcast.net) has quit (Ping timeout: 255 seconds)
2013-05-09 16:18:26	-->	ryanlecompte (~ryanlecom@172-7-149-76.lightspeed.sntcca.sbcglobal.net) has joined #scala
2013-05-09 16:19:09	-->	yacks (~py@180.151.36.168) has joined #scala
2013-05-09 16:20:55	<--	bblfish (~bblfish@AAubervilliers-651-1-306-218.w83-114.abo.wanadoo.fr) has quit (Ping timeout: 264 seconds)
2013-05-09 16:21:32	-->	danrabinowitz (~danrabino@184.106.149.15) has joined #scala
2013-05-09 16:21:42	-->	infynyxx (~infynyxx@cpe-24-90-84-91.nyc.res.rr.com) has joined #scala
2013-05-09 16:21:48	-->	rhysyngsun (~rhysyngsu@173-162-158-30-NewEngland.hfc.comcastbusiness.net) has joined #scala
2013-05-09 16:23:22	-->	elek_ (elek_@c-76-111-252-247.hsd1.fl.comcast.net) has joined #scala
2013-05-09 16:24:05	-->	kushal (~kdas@fedora/kushal) has joined #scala
2013-05-09 16:25:26	-->	sdeinum (~Spencer@dn-142-89-188-47.sjhc.london.on.ca) has joined #scala
2013-05-09 16:26:34	<--	paddymahoney (~patrick@24.137.221.230) has quit (Ping timeout: 256 seconds)
2013-05-09 16:27:59	<--	m-jack (~chatzilla@cmr-208-97-104-82.cr.net.cable.rogers.com) has quit (Ping timeout: 252 seconds)
2013-05-09 16:28:17	--	Watcher7|off is now known as Watcher7
2013-05-09 16:29:21	-->	RaceCondition (~erik@194.126.108.2) has joined #scala
2013-05-09 16:30:51	-->	bblfish (~bblfish@AAubervilliers-652-1-240-141.w86-198.abo.wanadoo.fr) has joined #scala
2013-05-09 16:31:28	-->	diiver (~diiver@178-16-148-1.obit.ru) has joined #scala
2013-05-09 16:31:47	<--	Apocalisp (~textual@c-174-62-237-65.hsd1.ma.comcast.net) has quit (Quit: Computer has gone to sleep.)
2013-05-09 16:32:06	-->	asrail (~quassel@177.193.199.186) has joined #scala
2013-05-09 16:32:12	--	casualjim_zzz is now known as casualjim
2013-05-09 16:32:48	<--	chatsiri_ (~chatsiri_@14.207.220.23) has quit (Ping timeout: 256 seconds)
2013-05-09 16:33:22	<--	hahuang65 (~hahuang65@c-76-21-60-158.hsd1.ca.comcast.net) has quit (Quit: Computer has gone to sleep.)
2013-05-09 16:34:42	-->	chatsiri_ (~chatsiri_@171.7.114.105) has joined #scala
2013-05-09 16:35:21	<--	yacks (~py@180.151.36.168) has quit (Read error: Connection reset by peer)
2013-05-09 16:35:53	-->	oncenull (~oncenull@200.69.203.221) has joined #scala
2013-05-09 16:36:42	-->	yacks (~py@180.151.36.168) has joined #scala
2013-05-09 16:39:00	<--	elek_ (elek_@c-76-111-252-247.hsd1.fl.comcast.net) has quit
2013-05-09 16:40:19	<--	zuzkins (~zuzkins@doit.inkubator.cvut.cz) has quit (Remote host closed the connection)
2013-05-09 16:41:46	-->	paddymahoney (~patrick@24.137.221.230) has joined #scala
2013-05-09 16:42:46	<--	yacks (~py@180.151.36.168) has quit (Read error: Connection reset by peer)
2013-05-09 16:45:00	<--	RaceCondition (~erik@194.126.108.2) has quit (Quit: RaceCondition)
2013-05-09 16:45:54	-->	RaceCondition (~erik@194.126.108.2) has joined #scala
2013-05-09 16:47:25	<--	asQuirreL (~asQuirreL@oriel-student-nat.oriel.ox.ac.uk) has quit (Quit: Computer has gone to sleep.)
2013-05-09 16:48:48	-->	enebo (~enebo@c-75-73-8-169.hsd1.mn.comcast.net) has joined #scala
2013-05-09 16:49:06	<--	MCamou1 (~Adium@wan.taric.es) has quit (Quit: Leaving.)
2013-05-09 16:50:04	-->	Apocalisp (~textual@173-14-185-169-NewEngland.hfc.comcastbusiness.net) has joined #scala
2013-05-09 16:51:02	-->	headius (~headius@65-128-131-102.mpls.qwest.net) has joined #scala
2013-05-09 16:52:22	<--	Leon (~Leon@s83-180-231-178.cust.tele2.se) has quit (Quit: Leon)
2013-05-09 16:52:56	-->	yacks (~py@180.151.36.168) has joined #scala
2013-05-09 16:53:07	<--	Heero (~Heero@unaffiliated/heero) has quit (Ping timeout: 268 seconds)
2013-05-09 16:54:22	<--	mary5030 (~mary5030@72.32.115.231) has quit (Remote host closed the connection)
2013-05-09 16:55:02	-->	nuttycom1 (~Adium@70-91-169-68-BusName-Colorado.hfc.comcastbusiness.net) has joined #scala
2013-05-09 16:55:50	-->	Leon (~Leon@s83-180-231-178.cust.tele2.se) has joined #scala
2013-05-09 16:55:59	--	flazz_gone is now known as flazz
2013-05-09 16:56:22	<--	tsinnema (~tsinnema@a91-156-149-49.elisa-laajakaista.fi) has quit (Quit: Ex-Chat)
2013-05-09 16:57:34	-->	schone (~schone@38.125.127.130) has joined #scala
2013-05-09 16:58:37	<--	ryanlecompte (~ryanlecom@172-7-149-76.lightspeed.sntcca.sbcglobal.net) has quit (Remote host closed the connection)
2013-05-09 16:58:48	-->	beolnix (~beolnix@188.134.48.72) has joined #scala
2013-05-09 16:58:54	-->	RRSchulz1 (~RRSchulz@67.218.117.4) has joined #scala
2013-05-09 16:59:05	<--	cdidd (~cdidd@93-80-82-211.broadband.corbina.ru) has quit (Remote host closed the connection)
2013-05-09 16:59:06	<--	LennyLinux (~LennyLinu@151.64.1.88) has quit (Remote host closed the connection)
2013-05-09 16:59:13	-->	artemk (~artem@95.81.3.50) has joined #scala
2013-05-09 16:59:20	<--	pcarrier (~textual@unaffiliated/pcarrier) has quit (Ping timeout: 252 seconds)
2013-05-09 17:00:38	<--	taylr_ (~taylr@static-96-239-100-47.nycmny.fios.verizon.net) has quit (Remote host closed the connection)
2013-05-09 17:00:41	-->	vn971 (~pidgin@0896414046.static.corbina.ru) has joined #scala
2013-05-09 17:01:20	<--	betehess_laptop (~betehess@31-33-130.wireless.csail.mit.edu) has quit (Remote host closed the connection)
2013-05-09 17:02:28	-->	LennyLinux (~LennyLinu@151.64.1.88) has joined #scala
2013-05-09 17:02:55	<--	RRSchulz (~RRSchulz@2600:1010:b003:ffb8:e174:c16c:5e82:c50b) has quit (Ping timeout: 264 seconds)
2013-05-09 17:03:51	-->	poggio (~poggio@163.192.12.3) has joined #scala
2013-05-09 17:04:20	-->	taylr (~taylr@static-96-239-100-47.nycmny.fios.verizon.net) has joined #scala
2013-05-09 17:04:42	<--	OOPMan (~adamj@41-134-255-154.dsl.mweb.co.za) has quit (Quit: Leaving.)
2013-05-09 17:05:19	<--	derpfacade (~erik@2001:420:340:ffff:60a0:12eb:b885:1f64) has quit (Ping timeout: 264 seconds)
2013-05-09 17:05:49	-->	dolio (~dolio@gw1.mcgraw-hill.com) has joined #scala
2013-05-09 17:06:08	-->	pcarrier (~textual@unaffiliated/pcarrier) has joined #scala
2013-05-09 17:06:35	-->	mary5030 (~mary5030@of1-nat2.aus1.rackspace.com) has joined #scala
2013-05-09 17:06:39	<--	mary5030 (~mary5030@of1-nat2.aus1.rackspace.com) has quit (Remote host closed the connection)
2013-05-09 17:07:11	-->	mary5030 (~mary5030@72.32.115.231) has joined #scala
2013-05-09 17:08:13	<--	enebo (~enebo@c-75-73-8-169.hsd1.mn.comcast.net) has quit (Quit: enebo)
2013-05-09 17:08:26	-->	derpfacade (~erik@2001:420:340:ffff:bc2f:644b:bc54:8e59) has joined #scala
2013-05-09 17:08:53	<--	navlelo_ (~df@249.157.189.109.customer.cdi.no) has quit (Ping timeout: 245 seconds)
2013-05-09 17:09:53	-->	kelvl (~kelvl@c-24-5-148-128.hsd1.ca.comcast.net) has joined #scala
2013-05-09 17:10:06	hyperboreean	it seems withDefault and withDefaultValue cannot be chained on a immutable.Map ... any idea why ?
2013-05-09 17:10:32	-->	Nitro (~nitro@unaffiliated/nitro) has joined #scala
2013-05-09 17:11:02	<--	agumonkey (~agu@101.217.72.86.rev.sfr.net) has quit (Ping timeout: 256 seconds)
2013-05-09 17:11:11	<--	Nitro (~nitro@unaffiliated/nitro) has quit (Client Quit)
2013-05-09 17:11:26	-->	like-a-boss (~like-a-bo@ip194-213.ghnet.pl) has joined #scala
2013-05-09 17:11:47	hyperboreean	well, never mind ... my use case was wrong
2013-05-09 17:12:07	hyperboreean	you can chain them, but it will never use the withDefault key if withDefaultValue is provided
2013-05-09 17:12:12	hyperboreean	which makes total sense
2013-05-09 17:12:20	<--	jrodicus (~jrodicus@50.56.221.34) has quit (Quit: WeeChat 0.3.9.2)
2013-05-09 17:12:34	-->	BeardedCoder (~user@of1-nat2.aus1.rackspace.com) has joined #scala
2013-05-09 17:14:26	<--	kelvl (~kelvl@c-24-5-148-128.hsd1.ca.comcast.net) has quit (Ping timeout: 256 seconds)
2013-05-09 17:14:54	-->	datura_ (~datura@unaffiliated/datura) has joined #scala
2013-05-09 17:15:01	vn971	With scala-2.10 we have a scala.concurrent.duration.FiniteDuration now.  But what's the class for _time_?
2013-05-09 17:15:25	<--	mizu_no_oto (~textual@c-76-24-19-222.hsd1.ma.comcast.net) has quit (Quit: ["Textual IRC Client: www.textualapp.com"])
2013-05-09 17:15:44	vn971	for example, I might expect "duration" to be addable to "time", but "time" not addable to "time". Or something like that..
2013-05-09 17:16:07	-->	Heero (~Heero@207.182.200.130) has joined #scala
2013-05-09 17:16:07	<--	Heero (~Heero@207.182.200.130) has quit (Changing host)
2013-05-09 17:16:07	-->	Heero (~Heero@unaffiliated/heero) has joined #scala
2013-05-09 17:16:17	vn971	is it the "Deadline" ?
2013-05-09 17:17:00	<--	malaverdiere (~marc-andr@bas10-montreal28-2925247893.dsl.bell.ca) has quit (Quit: Leaving)
2013-05-09 17:17:38	-->	MCamou (~Adium@wan.taric.es) has joined #scala
2013-05-09 17:18:20	<--	datura (~datura@unaffiliated/datura) has quit (Ping timeout: 255 seconds)
2013-05-09 17:20:30	<--	infynyxx (~infynyxx@cpe-24-90-84-91.nyc.res.rr.com) has quit (Remote host closed the connection)
2013-05-09 17:20:41	-->	gowlin (~rgolbeck@debian/developer/rmgolbeck) has joined #scala
2013-05-09 17:21:31	<--	Naktibalda (~chatzilla@host-81-20-37-12.eckoh.com) has quit (Quit: ChatZilla 0.9.90 [Firefox 20.0.1/20130409194949])
2013-05-09 17:23:32	<--	chatsiri_ (~chatsiri_@171.7.114.105) has quit (Ping timeout: 252 seconds)
2013-05-09 17:27:34	-->	mizu_no_oto (~textual@gw1.mcgraw-hill.com) has joined #scala
2013-05-09 17:27:40	-->	adaro (~jkuperus@53518F8B.cm-6-2c.dynamic.ziggo.nl) has joined #scala
2013-05-09 17:28:09	hvesalai_	there is only time units I think
2013-05-09 17:28:26	-->	tpolecat (~tpolecat@c-24-22-11-146.hsd1.or.comcast.net) has joined #scala
2013-05-09 17:29:38	-->	chatsiri_ (~chatsiri_@171.7.114.105) has joined #scala
2013-05-09 17:29:53	hvesalai_	no, Duration is the thing
2013-05-09 17:30:33	hvesalai_	and why not
2013-05-09 17:30:40	hvesalai_	time is not an absolute measure since it has no 0
2013-05-09 17:32:48	hvesalai_	remember the 4 levels of measurement: nominal, ordinal, interval, ratio
2013-05-09 17:33:37	-->	eklavya (~eklavya@180.151.212.214) has joined #scala
2013-05-09 17:34:30	-->	tsinnema (~tsinnema@dsl-espbrasgw1-50dfb9-125.dhcp.inet.fi) has joined #scala
2013-05-09 17:34:55	colock	levels of measurement. thanks hvesalai_. i should definitely work with this notion :)
2013-05-09 17:37:02	<--	Spin1987 (~Adium@port-92-196-94-18.dynamic.qsc.de) has quit (Quit: Leaving.)
2013-05-09 17:38:00	-->	rexim (~rexim@unaffiliated/rexim) has joined #scala
2013-05-09 17:38:33	-->	zuzkins (~zuzkins@cst-prg-41-2.cust.vodafone.cz) has joined #scala
2013-05-09 17:38:47	<--	oncenull (~oncenull@200.69.203.221) has quit (Remote host closed the connection)
2013-05-09 17:38:56	<--	sproates (~sproates@188-220-36-155.zone11.bethere.co.uk) has quit (Read error: Operation timed out)
2013-05-09 17:39:07	<--	nielsbusch (~textual@4606ds3-van.0.fullrate.dk) has quit (Quit: ["Textual IRC Client: www.textualapp.com"])
2013-05-09 17:40:07	hvesalai_	;-)(
2013-05-09 17:40:23	<--	adaro (~jkuperus@53518F8B.cm-6-2c.dynamic.ziggo.nl) has quit (Quit: adaro)
2013-05-09 17:41:18	-->	shock_one (~shock_one@46.118.141.174) has joined #scala
2013-05-09 17:41:48	--	casualjim is now known as casualjim_zzz
2013-05-09 17:42:53	<--	RedPunch (~RedPunch@159.140.254.103) has quit (Remote host closed the connection)
2013-05-09 17:43:13	-->	oncenull (~oncenull@200.69.203.221) has joined #scala
2013-05-09 17:43:14	<--	oncenull (~oncenull@200.69.203.221) has quit (Remote host closed the connection)
2013-05-09 17:43:48	<--	Leon (~Leon@s83-180-231-178.cust.tele2.se) has quit (Quit: Leon)
2013-05-09 17:44:38	-->	RedPunch_ (~RedPunch@159.140.254.103) has joined #scala
2013-05-09 17:45:25	-->	bblfish_ (~bblfish@AAubervilliers-651-1-306-218.w83-114.abo.wanadoo.fr) has joined #scala
2013-05-09 17:46:08	-->	oncenull (~oncenull@200.69.203.221) has joined #scala
2013-05-09 17:46:27	shergill	is there a size/length delimited priority map in scala?
2013-05-09 17:47:03	<--	zuzkins (~zuzkins@cst-prg-41-2.cust.vodafone.cz) has quit (Remote host closed the connection)
2013-05-09 17:47:11	shergill	i want to cache the result of a certain function call, except i don't want to do it for all calls only the top n which took the longest to compute
2013-05-09 17:47:16	--	rue_XIV is now known as rue
2013-05-09 17:47:23	colock	nice idea shergill 
2013-05-09 17:47:30	<--	bblfish (~bblfish@AAubervilliers-652-1-240-141.w86-198.abo.wanadoo.fr) has quit (Ping timeout: 264 seconds)
2013-05-09 17:47:32	<--	oncenull (~oncenull@200.69.203.221) has quit (Read error: Connection reset by peer)
2013-05-09 17:47:40	colock	you could just wrap PriorityQueue
2013-05-09 17:48:06	shergill	colock: what about the lookup though
2013-05-09 17:48:15	colock	lookup?
2013-05-09 17:48:30	-->	oncenull_ (~oncenull@200.69.203.221) has joined #scala
2013-05-09 17:48:35	colock	implicit class overriding += 
2013-05-09 17:48:38	colock	or something like that
2013-05-09 17:49:07	shergill	yes foo(bar) = baz. then i want to store (bar,baz). i thought queues had O(n) lookup (on say, bar). not constant time
2013-05-09 17:49:25	-->	lcfrs (~lcfrs@50-1-125-250.dsl.dynamic.sonic.net) has joined #scala
2013-05-09 17:49:28	colock	oh, are we talking performance
2013-05-09 17:49:31	-->	djspiewak (~djspiewak@50-194-128-249-static.hfc.comcastbusiness.net) has joined #scala
2013-05-09 17:49:40	pfurla	depends on the priority queue you are using
2013-05-09 17:49:46	shergill	this *is* for performance =/
2013-05-09 17:50:05	<--	nuttycom1 (~Adium@70-91-169-68-BusName-Colorado.hfc.comcastbusiness.net) has quit (Read error: Connection reset by peer)
2013-05-09 17:50:06	shergill	pfurla: care to elaborate?
2013-05-09 17:50:33	colock	shergill: indeed, you're caching things for performance. eh
2013-05-09 17:50:43	pfurla	shergill: one popular way to implement priority queues is using a tree, making it log(n) for lookup
2013-05-09 17:51:03	qu1j0t3	heap
2013-05-09 17:51:12	pfurla	yep
2013-05-09 17:51:22	qu1j0t3	also binomial heap, fibonacci heap
2013-05-09 17:51:31	-->	infynyxx (~infynyxx@cpe-24-90-84-91.nyc.res.rr.com) has joined #scala
2013-05-09 17:52:03	pfurla	http://en.wikipedia.org/wiki/Priority_queue
2013-05-09 17:52:10	tpolecat	i love heaps
2013-05-09 17:52:49	tpolecat	i used to always ask candidates what a heap is
2013-05-09 17:53:06	tpolecat	after a decade of not a single person ever knowing, i stopped
2013-05-09 17:53:11	-->	Nitro (~nitro@unaffiliated/nitro) has joined #scala
2013-05-09 17:53:15	shergill	right which are the ones implemented in scala collections?
2013-05-09 17:53:37	shergill	oh a heap
2013-05-09 17:53:42	shergill	yay docs, which actually list stuff
2013-05-09 17:53:59	shergill	that's good enough
2013-05-09 17:54:35	pfurla	wikipedia is full of them
2013-05-09 17:55:24	-->	sproates (~sproates@188-220-36-155.zone11.bethere.co.uk) has joined #scala
2013-05-09 17:55:33	<--	refefer (~astanton@c-76-111-70-251.hsd1.va.comcast.net) has quit (Ping timeout: 245 seconds)
2013-05-09 17:56:26	-->	pala21 (~pala@HSI-KBW-134-3-229-202.hsi14.kabel-badenwuerttemberg.de) has joined #scala
2013-05-09 17:57:26	qu1j0t3	s/them/it/
2013-05-09 17:57:28	 *	qu1j0t3 giggles
2013-05-09 17:57:45	colock	pretentious :P
2013-05-09 17:58:38	pfurla	hehehe
2013-05-09 17:59:18	<--	rexim (~rexim@unaffiliated/rexim) has quit (Quit: Leaving)
2013-05-09 18:00:11	-->	dankest (~dankest@wsip-70-182-130-90.sb.sd.cox.net) has joined #scala
2013-05-09 18:00:17	moops	a heap?
2013-05-09 18:00:24	moops	thats somewhere between a pile and a haul
2013-05-09 18:01:05	<--	infynyxx (~infynyxx@cpe-24-90-84-91.nyc.res.rr.com) has quit (Ping timeout: 255 seconds)
2013-05-09 18:01:55	<--	scott_w (~quassel@93-97-174-114.zone5.bethere.co.uk) has quit (Read error: Connection reset by peer)
2013-05-09 18:02:38	--	datura_ is now known as datura
2013-05-09 18:03:23	-->	asQuirreL (~asQuirreL@oriel-student-nat.oriel.ox.ac.uk) has joined #scala
2013-05-09 18:04:00	-->	piggybox (~piggybox@c-71-202-16-136.hsd1.ca.comcast.net) has joined #scala
2013-05-09 18:04:18	<--	yacks (~py@180.151.36.168) has quit (Ping timeout: 256 seconds)
2013-05-09 18:04:31	<--	jmvanel (~jmvanel@219.142.139.88.rev.sfr.net) has quit (Ping timeout: 260 seconds)
2013-05-09 18:06:53	-->	yacks (~py@180.151.36.168) has joined #scala
2013-05-09 18:07:09	-->	infynyxx (~infynyxx@cpe-24-90-84-91.nyc.res.rr.com) has joined #scala
2013-05-09 18:08:05	-->	hahuang65 (~hahuang65@208.65.181.227.static.etheric.net) has joined #scala
2013-05-09 18:08:50	-->	nuttycom1 (~Adium@70-91-169-68-BusName-Colorado.hfc.comcastbusiness.net) has joined #scala
2013-05-09 18:08:59	<--	zakora (~NC@tok69-4-82-236-111-173.fbx.proxad.net) has quit (Quit: Quit: Textual IRC Client: www.textualapp.com)
2013-05-09 18:09:02	qu1j0t3	treap!
2013-05-09 18:10:14	-->	kelvl (~kelvl@c-24-5-148-128.hsd1.ca.comcast.net) has joined #scala
2013-05-09 18:10:22	<--	hahuang65 (~hahuang65@208.65.181.227.static.etheric.net) has quit (Client Quit)
2013-05-09 18:13:14	--	flazz is now known as flazz_gone
2013-05-09 18:14:30	<--	djspiewak (~djspiewak@50-194-128-249-static.hfc.comcastbusiness.net) has quit (Quit: djspiewak)
2013-05-09 18:14:55	<--	kelvl (~kelvl@c-24-5-148-128.hsd1.ca.comcast.net) has quit (Ping timeout: 264 seconds)
2013-05-09 18:15:22	--	Watcher7 is now known as Watcher7|off
2013-05-09 18:19:16	--	casualjim_zzz is now known as casualjim
2013-05-09 18:22:00	kho`kho`	http://www.youtube.com/watch?v=yLbdw06tKPQ&list=SPndbWGuLoHeaOpTHoNhelI4NdnSqpeXA7&index=1
2013-05-09 18:22:26	-->	OOPMan (~Adam_Jorg@105-236-113-162.access.mtnbusiness.co.za) has joined #scala
2013-05-09 18:23:45	-->	mrrobbot (~siksia@unaffiliated/siksia) has joined #scala
2013-05-09 18:23:51	-->	ryanlecompte (~ryanlecom@c-67-180-20-82.hsd1.ca.comcast.net) has joined #scala
2013-05-09 18:24:31	-->	Anniepoo (~Anniepoo@ip-64-134-224-235.public.wayport.net) has joined #scala
2013-05-09 18:24:33	-->	bitonic (~user@176.27.229.121) has joined #scala
2013-05-09 18:24:44	-->	notk0 (~notk0@unaffiliated/notk0) has joined #scala
2013-05-09 18:26:13	-->	folone (~folone@brln-4dba9826.pool.mediaWays.net) has joined #scala
2013-05-09 18:29:18	-->	alshain (~alshain@124-171.1-85.cust.bluewin.ch) has joined #scala
2013-05-09 18:30:24	alshain	Hi, in the REPL, I added a jar to the classpath via :cp file.jar --- I then wanted to import something from the package, but Scala says that it doesn't exist
2013-05-09 18:31:10	<--	ilpuccio (~ra@212.31.227.18) has quit (Quit: This computer has gone to sleep)
2013-05-09 18:31:11	<--	asrail (~quassel@177.193.199.186) has quit (Ping timeout: 252 seconds)
2013-05-09 18:31:23	-->	Eldariof-ru (~CLD@pppoe-223-236-dyn-sr.volgaline.ru) has joined #scala
2013-05-09 18:31:26	-->	oncenull (~oncenull@200.69.203.221) has joined #scala
2013-05-09 18:32:27	alshain	I've tried with the junit jar and other "official" ones, so it's not my own JAR that I might have screwed up
2013-05-09 18:32:43	tpolecat	it doesn't work in 2.10
2013-05-09 18:33:01	tpolecat	it's a known bug
2013-05-09 18:33:14	<--	infynyxx (~infynyxx@cpe-24-90-84-91.nyc.res.rr.com) has quit (Remote host closed the connection)
2013-05-09 18:33:27	--	wajiii-afk is now known as wajiii
2013-05-09 18:33:28	alshain	I see
2013-05-09 18:33:58	tpolecat	you can say scala -cp or use sbt console
2013-05-09 18:34:04	<--	yacks (~py@180.151.36.168) has quit (Ping timeout: 256 seconds)
2013-05-09 18:34:14	alshain	tpolecat: I tried using scala -cp at first, but that didn't help
2013-05-09 18:34:39	tpolecat	hmmmmmmmm
2013-05-09 18:35:02	<--	oncenull_ (~oncenull@200.69.203.221) has quit (Ping timeout: 252 seconds)
2013-05-09 18:35:11	-->	adaro (~jkuperus@53518F8B.cm-6-2c.dynamic.ziggo.nl) has joined #scala
2013-05-09 18:36:32	tpolecat	alshain: works for me. scala -cp path/to/my/jar
2013-05-09 18:39:24	alshain	tpolecat: Are you on windows or on Linux?
2013-05-09 18:39:31	tpolecat	nope
2013-05-09 18:39:51	tpolecat	;-) mac
2013-05-09 18:39:51	alshain	Mac then?
2013-05-09 18:40:14	squeeks	CTCP VERSION reply from tpolecat: Colloquy 2.4 (5436) - Mac OS X
2013-05-09 18:40:33	sdeinum	lol
2013-05-09 18:40:34	tpolecat	well that's alarming
2013-05-09 18:41:30	<--	Pranz (~Zorro_24@c80-217-216-30.bredband.comhem.se) has quit (Quit: Lämnar)
2013-05-09 18:41:55	-->	bartt (~Adium@8.25.197.25) has joined #scala
2013-05-09 18:42:06	alshain	tpolecat: Hmm.. seems like the arguments were not passed correctly, when I invoke it directly from the Command line, it works -.-
2013-05-09 18:42:34	-->	jrodicus (~jrodicus@50.56.221.34) has joined #scala
2013-05-09 18:42:55	<--	shellac (~shellac@cpc6-aztw25-2-0-cust83.aztw.cable.virginmedia.com) has quit (Quit: ["Textual IRC Client: www.textualapp.com"])
2013-05-09 18:42:56	alshain	Gotta run catch my train, thanks
2013-05-09 18:44:30	-->	zuzkins (~zuzkins@191.211.broadband3.iol.cz) has joined #scala
2013-05-09 18:46:02	-->	RaceCondishun (~erik@194.204.51.44) has joined #scala
2013-05-09 18:46:02	<--	vramana (~chatzilla@117.200.26.251) has quit (Read error: Connection reset by peer)
2013-05-09 18:46:27	-->	Leon (~Leon@s83-180-231-178.cust.tele2.se) has joined #scala
2013-05-09 18:48:15	-->	OwenOu (~Adium@ws165.acl.com) has joined #scala
2013-05-09 18:48:26	<--	RaceCondition (~erik@194.126.108.2) has quit (Ping timeout: 268 seconds)
2013-05-09 18:48:26	--	RaceCondishun is now known as RaceCondition
2013-05-09 18:48:33	<--	headius (~headius@65-128-131-102.mpls.qwest.net) has quit (Quit: headius)
2013-05-09 18:49:07	<--	dscleaver (~dscleaver@c-76-124-34-14.hsd1.nj.comcast.net) has quit (Ping timeout: 264 seconds)
2013-05-09 18:49:47	-->	Ashoat (~Ashoat@69.63.185.56) has joined #scala
2013-05-09 18:49:47	<--	eklavya (~eklavya@180.151.212.214) has quit (Ping timeout: 260 seconds)
2013-05-09 18:50:12	<--	ryanlecompte (~ryanlecom@c-67-180-20-82.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2013-05-09 18:50:40	-->	dscleaver (~dscleaver@c-76-124-34-14.hsd1.nj.comcast.net) has joined #scala
2013-05-09 18:51:11	<--	bartt (~Adium@8.25.197.25) has quit (Quit: Leaving.)
2013-05-09 18:51:35	darkfrog	I was just looking at Akka's Event Bus and was curious if it is the best pub/sub framework for Scala or if there's something better?
2013-05-09 18:52:26	bryanl	darkfrog: i don't know if there is anything better, but i've had great success with akka so far
2013-05-09 18:52:32	-->	hdoshi (~hdoshi@66.54.159.166) has joined #scala
2013-05-09 18:52:56	darkfrog	bryanl: have you used the event bus for publish / subscribe event handling?
2013-05-09 18:53:33	-->	jmvanel (~jmvanel@219.142.139.88.rev.sfr.net) has joined #scala
2013-05-09 18:53:38	bryanl	darkfrog: i did something similar to this
2013-05-09 18:53:38	bryanl	https://gist.github.com/minosiants/3163791
2013-05-09 18:54:03	bryanl	darkfrog: i want to play around with this: https://gist.github.com/stonegao/2565907
2013-05-09 18:54:37	-->	asrail (~quassel@177.193.199.186) has joined #scala
2013-05-09 18:54:51	-->	bartt (~Adium@8.25.197.25) has joined #scala
2013-05-09 18:55:18	<--	dscleaver (~dscleaver@c-76-124-34-14.hsd1.nj.comcast.net) has quit (Ping timeout: 264 seconds)
2013-05-09 18:55:30	-->	gdey (~gdey@72-34-68-226.skyriver.net) has joined #scala
2013-05-09 18:55:34	<--	diiver (~diiver@178-16-148-1.obit.ru) has quit (Quit: diiver)
2013-05-09 18:55:34	-->	enebo (~enebo@c-75-73-8-169.hsd1.mn.comcast.net) has joined #scala
2013-05-09 18:55:53	<--	lcfrs (~lcfrs@50-1-125-250.dsl.dynamic.sonic.net) has quit (Remote host closed the connection)
2013-05-09 18:56:53	tpolecat	i have what is probably a staggeringly ignorant question
2013-05-09 18:57:05	darkfrog	I'm thinking about replacing my current event system but my event system supports highly localized even dispatching and listening so performance isn't a concern locally.  However, it seems like unless I make thousands of event buses I'll be spamming potentially hundreds of thousands of global messages that need to be filtered.
2013-05-09 18:57:15	darkfrog	tpolecat: awesome...I LOVE those!
2013-05-09 18:57:19	<--	sleepynate (~sleepynat@199.16.190.194) has quit (Remote host closed the connection)
2013-05-09 18:57:23	tpolecat	how can you do *anything* reliably using akka, when any message can get discarded at any time?
2013-05-09 18:57:27	<--	Leon (~Leon@s83-180-231-178.cust.tele2.se) has quit (Quit: Leon)
2013-05-09 18:58:03	darkfrog	tpolecat: http://doc.akka.io/docs/akka/snapshot/general/message-delivery-guarantees.html
2013-05-09 18:58:11	-->	pdrFurst (~PedroFurs@187.115.52.150) has joined #scala
2013-05-09 18:58:14	tpolecat	yeah i read that
2013-05-09 18:58:29	tpolecat	it seems like the bookkeeping associated with cleaning up messes and figuring out what you were trying to do can massively complicate your code
2013-05-09 18:58:50	darkfrog	tpolecat: to that I would agree
2013-05-09 18:59:42	tpolecat	sending every single message to /dev/null is within the defined operating parameters 
2013-05-09 18:59:50	darkfrog	tpolecat: although building a basic "ordered delivery" or "guaranteed delivery" system on top of Akka should be fairly straight-forward I would think and then be generally reusable.
2013-05-09 18:59:54	<--	chatsiri_ (~chatsiri_@171.7.114.105) has quit (Quit: leaving)
2013-05-09 19:00:30	-->	twoism (~twoism@8.25.197.24) has joined #scala
2013-05-09 19:00:34	-->	ryanlecompte (~ryanlecom@c-67-180-16-120.hsd1.ca.comcast.net) has joined #scala
2013-05-09 19:01:22	-->	dscleaver (~dscleaver@c-76-124-34-14.hsd1.nj.comcast.net) has joined #scala
2013-05-09 19:01:24	-->	diiver (~diiver@178-16-148-1.obit.ru) has joined #scala
2013-05-09 19:01:36	tpolecat	i guess if you're doing a chat server and you drop a message, nobody dies
2013-05-09 19:01:52	darkfrog	looking at the code for ActorEventBus it would seem it's incredibly light-weight, so creating thousands of them shouldn't be a big deal, right?
2013-05-09 19:01:53	<--	adaro (~jkuperus@53518F8B.cm-6-2c.dynamic.ziggo.nl) has quit (Quit: adaro)
2013-05-09 19:01:56	<--	diiver (~diiver@178-16-148-1.obit.ru) has quit (Client Quit)
2013-05-09 19:02:05	tpolecat	but i have seen people referencing doing credit card processing and stuff and it gives me the heebiejeebies
2013-05-09 19:02:22	darkfrog	tpolecat: yes, but if you're notifying hospitals of a heart transplant availability someone could. :o
2013-05-09 19:02:24	tpolecat	so there's something i don't understand
2013-05-09 19:02:41	tpolecat	or there's something everybody else doesn't understand
2013-05-09 19:02:45	tpolecat	so i suspect the former
2013-05-09 19:03:48	-->	vramana (~chatzilla@117.200.26.251) has joined #scala
2013-05-09 19:05:35	pfurla	'"ordered delivery" or "guaranteed delivery"' or here bothers me
2013-05-09 19:05:42	pfurla	*'or'
2013-05-09 19:06:16	darkfrog	pfurla: why?
2013-05-09 19:06:26	<--	antoineB (~antoine@32.54.14.109.rev.sfr.net) has quit (Quit: Lost terminal)
2013-05-09 19:06:38	pfurla	sounds to be an exclusive or
2013-05-09 19:06:56	-->	cprice (~cprice@74.85.255.17) has joined #scala
2013-05-09 19:07:07	darkfrog	pfurla: ordered encapsulates guaranteed, but guaranteed does not necessarily include ordered.
2013-05-09 19:07:23	-->	djspiewak (~djspiewak@50-194-128-249-static.hfc.comcastbusiness.net) has joined #scala
2013-05-09 19:07:30	pfurla	darkfrog: ohh ok
2013-05-09 19:08:13	-->	joev (~joev@inet-hqmc01-o.oracle.com) has joined #scala
2013-05-09 19:08:13	<--	joev (~joev@inet-hqmc01-o.oracle.com) has quit (Changing host)
2013-05-09 19:08:13	-->	joev (~joev@pdpc/supporter/active/joev) has joined #scala
2013-05-09 19:08:30	darkfrog	pfurla: back when NIO was first released in Java I wrote a game networking library on UDP to facilitate such features. :)
2013-05-09 19:08:43	<--	Nitro (~nitro@unaffiliated/nitro) has quit (Ping timeout: 276 seconds)
2013-05-09 19:08:52	<--	coindiff (~coindiff@unaffiliated/coindiff) has quit (Remote host closed the connection)
2013-05-09 19:09:12	<--	benkard (~benkard@mnch-5d8696be.pool.mediaWays.net) has quit (Ping timeout: 256 seconds)
2013-05-09 19:10:35	-->	kelvl (~kelvl@c-24-5-148-128.hsd1.ca.comcast.net) has joined #scala
2013-05-09 19:11:21	cprice	I have a n00b question about singleton objects and scope if anyone would be kind enough to take a look: https://gist.github.com/cprice-puppet/5548920
2013-05-09 19:11:40	cprice	^^ in that snippet, "Bar.getClass" is a compile error because it says it can't find Bar.
2013-05-09 19:12:04	<--	jkarlsson (~jonas@70-100-130-14.dsl1-field.roch.ny.frontiernet.net) has quit (Quit: jkarlsson)
2013-05-09 19:12:10	cprice	which seems to imply that there are some weird scope rules for code inside of singleton objects, and I don't quite get it
2013-05-09 19:12:36	tpolecat	classOf[Bar]
2013-05-09 19:12:36	darkfrog	cprice: try classOf[Bar].getName
2013-05-09 19:13:02	darkfrog	tpolecat: I was faster...I typed more! :-p
2013-05-09 19:13:07	cprice	nice, that seems to compile :)
2013-05-09 19:13:38	cprice	thanks!  so I presume that classOf is just a way of explicitly differentiating between classes and singleton objects?
2013-05-09 19:13:46	darkfrog	cprice: when you call "Bar" you are referencing the companion object and in the case of your example there is no companion.
2013-05-09 19:13:58	tpolecat	! object Bar; Bar.getClass
2013-05-09 19:13:59	multibot_	 defined module Bar
2013-05-09 19:14:00	multibot_	 Class[_ <: Bar.type] = class Bar$
2013-05-09 19:14:28	<--	kelvl (~kelvl@c-24-5-148-128.hsd1.ca.comcast.net) has quit (Read error: Connection reset by peer)
2013-05-09 19:14:42	-->	kelvl (~kelvl@c-24-5-148-128.hsd1.ca.comcast.net) has joined #scala
2013-05-09 19:15:09	cprice	I assume "companion object" is just the correct terminology for what I'd been referring to as "singleton object"?
2013-05-09 19:15:38	--	pdxleif_away is now known as pdxleif
2013-05-09 19:15:44	cprice	and that the scope rule is that if you are inside of a companion object, it always assumes you're referring to other companion objects unless you use classOf[]?
2013-05-09 19:16:01	--	Watcher7|off is now known as Watcher7
2013-05-09 19:16:43	darkfrog	yes
2013-05-09 19:16:53	darkfrog	no
2013-05-09 19:16:55	tysonjh	I think "singleton object" is fine, I usually say companion object when it has a class companion
2013-05-09 19:16:56	-->	eklavya (~eklavya@180.151.44.201) has joined #scala
2013-05-09 19:16:56	<--	eklavya (~eklavya@180.151.44.201) has quit (Read error: Connection reset by peer)
2013-05-09 19:17:16	tysonjh	people will understand either way
2013-05-09 19:18:03	tpolecat	cprice: .getClass is for values. classOf[T] is for types
2013-05-09 19:18:21	-->	eklavya (~eklavya@180.151.44.201) has joined #scala
2013-05-09 19:18:35	<--	eklavya (~eklavya@180.151.44.201) has quit (Read error: Connection reset by peer)
2013-05-09 19:18:36	cprice	Double.getClass works though...
2013-05-09 19:19:02	<--	folone (~folone@brln-4dba9826.pool.mediaWays.net) has quit (Ping timeout: 252 seconds)
2013-05-09 19:19:03	tpolecat	right but it's getting the class of Double's companion object
2013-05-09 19:19:13	tpolecat	note the $ at the end
2013-05-09 19:19:21	tpolecat	! Int.getClass
2013-05-09 19:19:21	multibot_	 Class[_ <: Int.type] = class scala.Int$
2013-05-09 19:19:30	tpolecat	! classOf[Int]
2013-05-09 19:19:30	multibot_	 Class[Int] = int
2013-05-09 19:19:31	cprice	I see
2013-05-09 19:19:45	cprice	that makes sense
2013-05-09 19:19:47	cprice	thank you!
2013-05-09 19:19:48	datura	cprice: every companion object is a singleton object, but not every singleton object is a companion object
2013-05-09 19:20:20	-->	eklavya (~eklavya@180.151.44.201) has joined #scala
2013-05-09 19:20:27	datura	if you have a class/trait and an object with the same name, they are companions
2013-05-09 19:20:27	<--	eklavya (~eklavya@180.151.44.201) has quit (Read error: Connection reset by peer)
2013-05-09 19:20:40	tpolecat	* IF they're defined in the same compilation unit
2013-05-09 19:21:29	colock	buddy object
2013-05-09 19:22:13	-->	eklavya (~eklavya@180.151.44.201) has joined #scala
2013-05-09 19:22:23	<--	eklavya (~eklavya@180.151.44.201) has quit (Read error: Connection reset by peer)
2013-05-09 19:22:24	-->	refefer (~astanton@ip-64-134-43-62.public.wayport.net) has joined #scala
2013-05-09 19:22:27	<--	shock_one (~shock_one@46.118.141.174) has quit (Ping timeout: 260 seconds)
2013-05-09 19:22:41	colock	the buddy object (is|can be seen as) the "static" part of a class
2013-05-09 19:22:57	-->	jkarlsson (~jonas@70-100-130-14.dsl1-field.roch.ny.frontiernet.net) has joined #scala
2013-05-09 19:22:59	<--	rsuniev123 (~textual@212.140.174.166) has quit (Quit: Computer has gone to sleep.)
2013-05-09 19:23:03	-->	atoll (~atoll@tsf-444-wpa-0-165.epfl.ch) has joined #scala
2013-05-09 19:23:15	-->	folone (~folone@brln-4dba9826.pool.mediaWays.net) has joined #scala
2013-05-09 19:23:55	<--	trepidaciousMBR (~trepidaci@176.62.208.227) has quit (Quit: trepidaciousMBR)
2013-05-09 19:25:24	-->	eklavya (~eklavya@180.151.44.201) has joined #scala
2013-05-09 19:25:39	-->	befuddled (~brian@cpc2-aztw24-2-0-cust618.aztw.cable.virginmedia.com) has joined #scala
2013-05-09 19:25:39	<--	eklavya (~eklavya@180.151.44.201) has quit (Read error: Connection reset by peer)
2013-05-09 19:26:04	<--	OOPMan (~Adam_Jorg@105-236-113-162.access.mtnbusiness.co.za) has quit (Read error: Connection reset by peer)
2013-05-09 19:26:49	-->	eklavya (~eklavya@180.151.44.201) has joined #scala
2013-05-09 19:26:52	<--	eklavya (~eklavya@180.151.44.201) has quit (Read error: Connection reset by peer)
2013-05-09 19:26:59	<--	pdrFurst (~PedroFurs@187.115.52.150) has quit
2013-05-09 19:27:28	<--	mizu_no_oto (~textual@gw1.mcgraw-hill.com) has quit (Quit: ["Textual IRC Client: www.textualapp.com"])
2013-05-09 19:28:04	-->	eklavya (~eklavya@180.151.44.201) has joined #scala
2013-05-09 19:28:15	<--	tpolecat (~tpolecat@c-24-22-11-146.hsd1.or.comcast.net) has left #scala
2013-05-09 19:28:15	<--	eklavya (~eklavya@180.151.44.201) has quit (Read error: Connection reset by peer)
2013-05-09 19:28:21	-->	tpolecat (~tpolecat@c-24-22-11-146.hsd1.or.comcast.net) has joined #scala
2013-05-09 19:28:39	-->	pantsman (~pantsman@188-222-133-52.zone13.bethere.co.uk) has joined #scala
2013-05-09 19:28:39	<--	pantsman (~pantsman@188-222-133-52.zone13.bethere.co.uk) has quit (Changing host)
2013-05-09 19:28:39	-->	pantsman (~pantsman@pdpc/supporter/active/pantsman) has joined #scala
2013-05-09 19:28:44	<--	vramana (~chatzilla@117.200.26.251) has quit (Quit: ChatZilla 0.9.90 [Firefox 20.0/20130417085609])
2013-05-09 19:29:43	<--	alshain (~alshain@124-171.1-85.cust.bluewin.ch) has quit (Ping timeout: 245 seconds)
2013-05-09 19:29:53	pfurla	yeah, buddy object is a nicer name
2013-05-09 19:30:04	<--	kelvl (~kelvl@c-24-5-148-128.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2013-05-09 19:30:15	tpolecat	i think it's easiest to just think of objects as reified packages
2013-05-09 19:30:24	colock	tpolecat: but that's not true.
2013-05-09 19:30:44	-->	lcfrs (~lcfrs@8.25.197.24) has joined #scala
2013-05-09 19:30:45	colock	well, it is in some sense, but buddy object are not _just_ that.
2013-05-09 19:30:46	tpolecat	it's mostly true. they're just things you can hang stuff off of 
2013-05-09 19:30:54	-->	infynyxx (~infynyxx@208.82.12.18) has joined #scala
2013-05-09 19:31:01	colock	also that, but not only
2013-05-09 19:31:04	tpolecat	a companion object has the additional ability to see private crap in its companion class
2013-05-09 19:31:08	-->	OOPMan (~adamj@105-236-113-162.access.mtnbusiness.co.za) has joined #scala
2013-05-09 19:31:46	cprice	I feel like I mostly understand what they do and what they're for, but the scope that is available inside of them still seems a bit confusing to me
2013-05-09 19:31:47	-->	joneshf-laptop (~joneshf@public-nat2.arc.losrios.edu) has joined #scala
2013-05-09 19:31:49	<--	Anniepoo (~Anniepoo@ip-64-134-224-235.public.wayport.net) has quit (Read error: Connection reset by peer)
2013-05-09 19:32:40	<--	kushal (~kdas@fedora/kushal) has quit (Quit: Leaving)
2013-05-09 19:34:34	-->	sritchie (~sritchie@8.25.197.25) has joined #scala
2013-05-09 19:35:15	-->	dacc_ (~dacc@c-24-17-231-116.hsd1.wa.comcast.net) has joined #scala
2013-05-09 19:35:37	-->	alshain (~alshain@124-171.1-85.cust.bluewin.ch) has joined #scala
2013-05-09 19:37:12	<--	ryanlecompte (~ryanlecom@c-67-180-16-120.hsd1.ca.comcast.net) has quit (Ping timeout: 252 seconds)
2013-05-09 19:37:22	--	wajiii is now known as wajiii-afk
2013-05-09 19:37:41	-->	mizu_no_oto (~textual@gw1.mcgraw-hill.com) has joined #scala
2013-05-09 19:37:51	pfurla	tpolecat: true, usually use object trees as first class packages
2013-05-09 19:38:02	pfurla	"first class"
2013-05-09 19:38:48	-->	curtosis (~curtosis@c-69-143-218-129.hsd1.md.comcast.net) has joined #scala
2013-05-09 19:38:55	-->	hahuang65 (~hahuang65@208.65.181.227.static.etheric.net) has joined #scala
2013-05-09 19:39:29	pfurla	cprice: the scope inside objects is the same as with any other structure
2013-05-09 19:40:30	<--	pcarrier (~textual@unaffiliated/pcarrier) has quit (Ping timeout: 252 seconds)
2013-05-09 19:44:05	-->	m-jack (~chatzilla@user229-62.wireless.utoronto.ca) has joined #scala
2013-05-09 19:44:42	<--	hdoshi (~hdoshi@66.54.159.166) has quit (Read error: Operation timed out)
2013-05-09 19:45:18	<--	MCamou (~Adium@wan.taric.es) has quit (Quit: Leaving.)
2013-05-09 19:45:33	-->	jackcviers (~user@24.149.8.212) has joined #scala
2013-05-09 19:46:01	-->	pcarrier (~textual@unaffiliated/pcarrier) has joined #scala
2013-05-09 19:46:52	-->	sleepynate (~sleepynat@199.16.190.194) has joined #scala
2013-05-09 19:48:00	<--	Nosceteipsum (~Nosceteip@d122243.adsl.hansenet.de) has quit (Ping timeout: 256 seconds)
2013-05-09 19:48:33	-->	Nosceteipsum (~Nosceteip@d137231.adsl.hansenet.de) has joined #scala
2013-05-09 19:51:29	<--	m-jack (~chatzilla@user229-62.wireless.utoronto.ca) has quit (Ping timeout: 252 seconds)
2013-05-09 19:52:01	-->	hdoshi (~hdoshi@66.54.159.166) has joined #scala
2013-05-09 19:52:14	cprice	pfurla: hmm... ok.  so if I refer to "Bar" without "classOf[]" from inside of a *class* (as opposed to from inside of a singleton object, as in my gist), then I'm still referring to the *object* Bar and not the *class* bar?
2013-05-09 19:53:32	colock	it depends
2013-05-09 19:53:50	<--	blast_hardcheese (~blast_har@unaffiliated/blast-hardcheese/x-0199635) has quit (Quit: ZNC - http://znc.sourceforge.net)
2013-05-09 19:54:05	colock	if it's in a position that expects a type, it will refer to the class (type). if the place is that of a value, it will refer to the object
2013-05-09 19:54:25	-->	mich2 (~mich@dslb-094-219-215-210.pools.arcor-ip.net) has joined #scala
2013-05-09 19:54:28	colock	the object has not the same type as the class. an object Foo has the type: Foo.type
2013-05-09 19:55:17	-->	stevan_ (~stevan_@c-71-234-49-55.hsd1.ct.comcast.net) has joined #scala
2013-05-09 19:55:19	<--	schone (~schone@38.125.127.130) has quit (Quit: schone)
2013-05-09 19:55:22	<--	Ashoat (~Ashoat@69.63.185.56) has quit (Ping timeout: 256 seconds)
2013-05-09 19:55:29	<--	stevan_ (~stevan_@c-71-234-49-55.hsd1.ct.comcast.net) has quit (Remote host closed the connection)
2013-05-09 19:55:36	-->	stevan_ (~stevan_@c-71-234-49-55.hsd1.ct.comcast.net) has joined #scala
2013-05-09 19:57:44	cprice	ok, I think I see.  thanks
2013-05-09 19:58:06	<--	stevan__ (~stevan_@c-71-234-49-55.hsd1.ct.comcast.net) has quit (Ping timeout: 252 seconds)
2013-05-09 19:59:18	<--	RedPunch_ (~RedPunch@159.140.254.103) has quit (Remote host closed the connection)
2013-05-09 19:59:53	-->	adaro (~jkuperus@53518F8B.cm-6-2c.dynamic.ziggo.nl) has joined #scala
2013-05-09 20:00:29	--	Watcher7 is now known as Watcher7|off
2013-05-09 20:00:34	-->	runT1ME (~vmarquez@ip68-5-189-156.oc.oc.cox.net) has joined #scala
2013-05-09 20:00:54	-->	Osho (~jevan@169.237.131.44) has joined #scala
2013-05-09 20:01:22	-->	kelvl (~kelvl@c-24-5-148-128.hsd1.ca.comcast.net) has joined #scala
2013-05-09 20:02:15	-->	Score_Under (~Score_Und@90.209.79.78) has joined #scala
2013-05-09 20:02:31	<--	joev (~joev@pdpc/supporter/active/joev) has quit (Quit: Changing server)
2013-05-09 20:02:39	-->	MarkMenard (~mark@rrcs-69-193-10-226.nys.biz.rr.com) has joined #scala
2013-05-09 20:03:14	-->	joev (~joev@inet-hqmc01-o.oracle.com) has joined #scala
2013-05-09 20:03:14	<--	joev (~joev@inet-hqmc01-o.oracle.com) has quit (Changing host)
2013-05-09 20:03:14	-->	joev (~joev@pdpc/supporter/active/joev) has joined #scala
2013-05-09 20:03:42	<--	stevan_ (~stevan_@c-71-234-49-55.hsd1.ct.comcast.net) has quit (Ping timeout: 264 seconds)
2013-05-09 20:03:53	-->	stevan_ (~stevan_@c-71-234-49-55.hsd1.ct.comcast.net) has joined #scala
2013-05-09 20:03:53	-->	Arrgh (~alex@S01064ce676224df4.vc.shawcable.net) has joined #scala
2013-05-09 20:03:54	-->	h31 (~artem@2002:b035:e00d::2) has joined #scala
2013-05-09 20:04:01	<--	stevan_ (~stevan_@c-71-234-49-55.hsd1.ct.comcast.net) has quit (Remote host closed the connection)
2013-05-09 20:04:08	-->	stevan_ (~stevan_@c-71-234-49-55.hsd1.ct.comcast.net) has joined #scala
2013-05-09 20:04:59	<--	oehman (~martinohm@c-1bf5e253.06-10-686c6d10.cust.bredbandsbolaget.se) has quit (Quit: Linkinus - http://linkinus.com)
2013-05-09 20:05:52	<--	xeno (~ixeno@80.203.229.106) has quit (Read error: Connection reset by peer)
2013-05-09 20:06:00	<--	RaceCondition (~erik@194.204.51.44) has quit (Quit: RaceCondition)
2013-05-09 20:06:08	<--	kelvl (~kelvl@c-24-5-148-128.hsd1.ca.comcast.net) has quit (Ping timeout: 256 seconds)
2013-05-09 20:06:19	-->	xeno (~ixeno@80.203.229.106) has joined #scala
2013-05-09 20:06:54	<--	dacc_ (~dacc@c-24-17-231-116.hsd1.wa.comcast.net) has quit (Ping timeout: 252 seconds)
2013-05-09 20:07:01	-->	ryanlecompte (~ryanlecom@c-67-180-16-120.hsd1.ca.comcast.net) has joined #scala
2013-05-09 20:07:44	--	Watcher7|off is now known as Watcher7
2013-05-09 20:10:43	-->	Ashoat (~Ashoat@66-192-186-66.static.twtelecom.net) has joined #scala
2013-05-09 20:11:57	<--	like-a-boss (~like-a-bo@ip194-213.ghnet.pl) has quit (Quit: Leaving)
2013-05-09 20:12:29	<--	atoll (~atoll@tsf-444-wpa-0-165.epfl.ch) has quit (Read error: Operation timed out)
2013-05-09 20:13:33	-->	colock_ (~colock@unaffiliated/colock) has joined #scala
2013-05-09 20:13:48	<--	colock (~colock@unaffiliated/colock) has quit (Disconnected by services)
2013-05-09 20:13:49	--	colock_ is now known as colock
2013-05-09 20:14:15	<--	dscleaver (~dscleaver@c-76-124-34-14.hsd1.nj.comcast.net) has quit (Ping timeout: 260 seconds)
2013-05-09 20:14:19	<--	adaro (~jkuperus@53518F8B.cm-6-2c.dynamic.ziggo.nl) has quit (Quit: adaro)
2013-05-09 20:14:51	-->	przl (~przlrkt@p5B298C83.dip0.t-ipconnect.de) has joined #scala
2013-05-09 20:15:22	-->	dscleaver (~dscleaver@c-76-124-34-14.hsd1.nj.comcast.net) has joined #scala
2013-05-09 20:17:03	<--	joev (~joev@pdpc/supporter/active/joev) has quit (Quit: Changing server)
2013-05-09 20:17:30	-->	joev (~joev@pdpc/supporter/active/joev) has joined #scala
2013-05-09 20:18:03	-->	fayimora (~fayimora@5.151.0.1) has joined #scala
2013-05-09 20:18:33	<--	fayimora (~fayimora@5.151.0.1) has quit (Remote host closed the connection)
2013-05-09 20:19:31	<--	mich2 (~mich@dslb-094-219-215-210.pools.arcor-ip.net) has quit (Quit: Quit)
2013-05-09 20:20:05	<--	pcarrier (~textual@unaffiliated/pcarrier) has quit (Quit: Textual IRC Client: www.textualapp.com)
2013-05-09 20:20:39	-->	Naktibalda (~chatzilla@cpc2-heme10-2-0-cust25.9-1.cable.virginmedia.com) has joined #scala
2013-05-09 20:21:00	--	wajiii-afk is now known as wajiii
2013-05-09 20:22:07	-->	kelvl (~kelvl@192-195-80-114-TWIL.static.monkeybrains.net) has joined #scala
2013-05-09 20:24:35	-->	yacks (~py@180.151.36.168) has joined #scala
2013-05-09 20:24:38	-->	lizzin (~b@c-24-14-148-164.hsd1.il.comcast.net) has joined #scala
2013-05-09 20:25:02	--	lizzin is now known as Guest7728
2013-05-09 20:29:08	<--	lcfrs (~lcfrs@8.25.197.24) has quit (Remote host closed the connection)
2013-05-09 20:29:43	-->	eklavya (~eklavya@180.151.44.201) has joined #scala
2013-05-09 20:29:52	-->	lcfrs (~lcfrs@8.25.197.24) has joined #scala
2013-05-09 20:36:38	-->	dacc_ (~dacc@c-24-17-231-116.hsd1.wa.comcast.net) has joined #scala
2013-05-09 20:39:19	<--	tpolecat (~tpolecat@c-24-22-11-146.hsd1.or.comcast.net) has quit (Quit: is having a little nap now.)
2013-05-09 20:40:40	-->	qwerty_nor (~Thunderbi@46.118.71.85) has joined #scala
2013-05-09 20:42:23	--	Arrgh is now known as Arr`Gone
2013-05-09 20:42:44	-->	headius (~headius@65-128-131-102.mpls.qwest.net) has joined #scala
2013-05-09 20:43:24	<--	mariaDa2 (~dark@213.238.10.41) has quit (Ping timeout: 256 seconds)
2013-05-09 20:44:28	<--	hdoshi (~hdoshi@66.54.159.166) has quit (Read error: Operation timed out)
2013-05-09 20:44:51	<--	folone (~folone@brln-4dba9826.pool.mediaWays.net) has quit (Ping timeout: 256 seconds)
2013-05-09 20:45:36	<--	dscleaver (~dscleaver@c-76-124-34-14.hsd1.nj.comcast.net) has quit (Ping timeout: 268 seconds)
2013-05-09 20:46:06	--	Arr`Gone is now known as Arrgh
2013-05-09 20:48:18	-->	mariaDa2 (~dark@213.238.10.41) has joined #scala
2013-05-09 20:49:18	-->	benkard (~benkard@mnch-5d8696be.pool.mediaWays.net) has joined #scala
2013-05-09 20:50:04	<--	notk0 (~notk0@unaffiliated/notk0) has quit (Remote host closed the connection)
2013-05-09 20:50:27	-->	RedPunch (~RedPunch@159.140.254.103) has joined #scala
2013-05-09 20:51:10	-->	OlegYch (~OlegYch@178.127.94.4) has joined #scala
2013-05-09 20:52:42	-->	aztek (~aztek@128-69-70-152.broadband.corbina.ru) has joined #scala
2013-05-09 20:53:29	-->	schone (~schone@38.125.127.130) has joined #scala
2013-05-09 20:56:50	<--	lcfrs (~lcfrs@8.25.197.24) has quit (Remote host closed the connection)
2013-05-09 20:57:17	-->	SeriousWorm (~sworm@bnet2731.x3d.carnet.hr) has joined #scala
2013-05-09 20:58:22	-->	dscleaver (~dscleaver@c-76-124-34-14.hsd1.nj.comcast.net) has joined #scala
2013-05-09 20:58:50	<--	Guest7728 (~b@c-24-14-148-164.hsd1.il.comcast.net) has quit (Ping timeout: 255 seconds)
2013-05-09 20:59:22	-->	lizzin_ (~b@c-24-14-148-164.hsd1.il.comcast.net) has joined #scala
2013-05-09 20:59:35	<--	pala21 (~pala@HSI-KBW-134-3-229-202.hsi14.kabel-badenwuerttemberg.de) has quit (Quit: Leaving.)
2013-05-09 20:59:37	-->	lcfrs (~lcfrs@8.25.197.24) has joined #scala
2013-05-09 20:59:43	<--	schone (~schone@38.125.127.130) has left #scala
2013-05-09 21:00:06	<--	djspiewak (~djspiewak@50-194-128-249-static.hfc.comcastbusiness.net) has quit (Quit: djspiewak)
2013-05-09 21:00:27	-->	kushal (~kdas@fedora/kushal) has joined #scala
2013-05-09 21:02:15	<--	joneshf-laptop (~joneshf@public-nat2.arc.losrios.edu) has quit (Ping timeout: 268 seconds)
2013-05-09 21:03:22	<--	benkard (~benkard@mnch-5d8696be.pool.mediaWays.net) has quit (Ping timeout: 256 seconds)
2013-05-09 21:04:22	-->	artemk1 (~artem@130.180.211.254) has joined #scala
2013-05-09 21:05:18	-->	jjenkins (~Adium@rrcs-67-78-69-4.sw.biz.rr.com) has joined #scala
2013-05-09 21:05:36	tnks	anyone know if there's a pratical reason to declare packages with two "package" statements instead of one using the dot-notation?
2013-05-09 21:06:02	<--	artemk (~artem@95.81.3.50) has quit (Ping timeout: 255 seconds)
2013-05-09 21:06:46	mapreduce	tnks: When you want one .scala file to declare items in more than one package.
2013-05-09 21:06:55	mapreduce	I.e., probably never outside of a compiler test case.
2013-05-09 21:07:28	pantsman	tnks, the members of the first package will all be in scope in the rest of the source file
2013-05-09 21:07:29	tnks	yeah, I guess that makes sense.
2013-05-09 21:07:41	jjenkins	so, for visibility reasons
2013-05-09 21:07:44	-->	artemk (~artem@95.81.3.50) has joined #scala
2013-05-09 21:07:46	tnks	I do that, but when I do, I often end up needing the explicit curly braces to start and end scope.
2013-05-09 21:07:58	tnks	(in toy programs I want to fit on one page)
2013-05-09 21:08:10	refefer	I think I'm going to write an editor someday which views all the source files of a project as a single flat file
2013-05-09 21:08:18	refefer	with barriers as 'compilation units'
2013-05-09 21:08:30	-->	OlegYch1 (~OlegYch@178.127.94.4) has joined #scala
2013-05-09 21:08:58	<--	OlegYch (~OlegYch@178.127.94.4) has quit (Ping timeout: 276 seconds)
2013-05-09 21:09:08	refefer	take a page from smalltalk's book
2013-05-09 21:09:32	pantsman	if you mean like this: package foo \n package bar \n <code>, this is the same as: package foo.bar \n import foo._ \n <code>
2013-05-09 21:09:37	<--	artemk1 (~artem@130.180.211.254) has quit (Ping timeout: 276 seconds)
2013-05-09 21:09:41	tnks	jjenkins: have you read the style guide posted at http://docs.scala-lang.org?
2013-05-09 21:09:56	--	Arrgh is now known as Arr`Gone
2013-05-09 21:10:11	jjenkins	tnks no, viewing now
2013-05-09 21:12:07	tnks	take it with a grain of salt.
2013-05-09 21:12:10	<--	jcazevedo (~jcazevedo@193.137.28.184) has quit (Remote host closed the connection)
2013-05-09 21:12:16	tnks	some of the stuff in there is too opinionated.
2013-05-09 21:12:17	<--	Scient (~Scient@ghost.noob.ee) has quit (Read error: Operation timed out)
2013-05-09 21:12:39	<--	Ezku (saukkee@kosh.org.aalto.fi) has quit (Read error: Operation timed out)
2013-05-09 21:12:53	tnks	between looking at the argonaut source code and reading that document, I think you'll get some idea of reasonable styles.
2013-05-09 21:12:58	<--	sritchie (~sritchie@8.25.197.25) has quit (Quit: sritchie)
2013-05-09 21:13:14	tnks	oh yeah, I think the Akka code base is pretty clean for a project that gigantic.
2013-05-09 21:13:26	<--	ktosiek (~quassel@46.22.173.54) has quit (Read error: Operation timed out)
2013-05-09 21:13:51	-->	Ezku (saukkee@kosh.org.aalto.fi) has joined #scala
2013-05-09 21:14:04	tnks	you'll run into the Twitter style guide on the internet. . . but I think that's disposable.  I disagree with too much of it.
2013-05-09 21:14:19	qu1j0t3	:)
2013-05-09 21:14:20	<--	eklavya (~eklavya@180.151.44.201) has quit (Read error: Connection reset by peer)
2013-05-09 21:14:32	-->	ktosiek (~quassel@46.22.173.54) has joined #scala
2013-05-09 21:14:36	-->	eklavya (~eklavya@180.151.44.201) has joined #scala
2013-05-09 21:15:37	-->	Scient (~Scient@ghost.noob.ee) has joined #scala
2013-05-09 21:16:19	<--	thereisnospoon (~thereisno@113-61-86-28.static.qld.dsl.net.au) has quit (Ping timeout: 260 seconds)
2013-05-09 21:16:41	-->	sritchie (~sritchie@8.25.197.25) has joined #scala
2013-05-09 21:16:45	darkfrog	immutable.List has gotten crazy fast! :)
2013-05-09 21:16:47	-->	thereisnospoon (~thereisno@113-61-86-28.static.qld.dsl.net.au) has joined #scala
2013-05-09 21:17:25	<--	OwenOu (~Adium@ws165.acl.com) has quit (Quit: Leaving.)
2013-05-09 21:17:33	darkfrog	java.util.ArrayList used to blow it away as far as performance, but I just ran some tests and it is meeting and even exceeding the speed for creation and iteration.
2013-05-09 21:18:30	tnks	darkfrog: are you using Caliper or something similar for your benchmarks?
2013-05-09 21:18:37	refefer	darkfrog: that's surprising; I'd imagine the cache misses would kill immutable.List
2013-05-09 21:18:40	tnks	it's really easy to mess up JIT warmup.
2013-05-09 21:19:11	darkfrog	tnks: no, old school System.currentTimeMillis() and tail recursion iterating
2013-05-09 21:20:20	darkfrog	http://pastebin.com/psKiw4wC
2013-05-09 21:20:47	darkfrog	this is the output: http://pastebin.com/8ESKYyt1
2013-05-09 21:22:04	<--	gowlin (~rgolbeck@debian/developer/rmgolbeck) has quit (Ping timeout: 256 seconds)
2013-05-09 21:22:06	darkfrog	I could have done a foldLeft and been more clever, but I was more specifically interested in testing tail-recursion on a method.
2013-05-09 21:22:56	tnks	darkfrog: I did a similar experiment, but used caliper.
2013-05-09 21:22:57	<--	kho`kho` (~phan@144.214.222.125) has quit (Quit: Leaving.)
2013-05-09 21:22:58	tnks	let me find the link.
2013-05-09 21:23:03	tnks	feel free to pick it to pieces.
2013-05-09 21:23:58	-->	sam3 (~sam3@host86-161-160-31.range86-161.btcentralplus.com) has joined #scala
2013-05-09 21:24:38	--	sam3 is now known as alwaysthecritic
2013-05-09 21:24:51	darkfrog	Last time I tested this was in 2.9.2...I can only imagine that there were some significant performance improvements added in 2.10
2013-05-09 21:24:58	<--	twoism (~twoism@8.25.197.24) has quit (Remote host closed the connection)
2013-05-09 21:25:48	-->	atoll (~atoll@84-74-102-216.dclient.hispeed.ch) has joined #scala
2013-05-09 21:26:05	<--	bitonic (~user@176.27.229.121) has quit (Ping timeout: 252 seconds)
2013-05-09 21:26:11	tnks	darkfrog: https://github.com/shajra/learning-scala/blob/master/src/main/scala/performance/MaxOfBytesBenchmark.scala
2013-05-09 21:26:20	-->	make_sense (~dmitryvor@178.121.236.115) has joined #scala
2013-05-09 21:26:37	<--	sritchie (~sritchie@8.25.197.25) has quit (Quit: sritchie)
2013-05-09 21:26:37	darkfrog	if I run it with 50,000,000 then List is a bit slower for iterating over and MUCH slower for building, but I'm more interested in fast iterating than generating so that's not too bad.
2013-05-09 21:26:55	tnks	I assume lots of people do this sooner or later, just enough to prove out that the performance of Scala isn't too scary for their needs.
2013-05-09 21:27:14	tnks	I certainly didn't test out more than one very artificial workflow.
2013-05-09 21:28:02	<--	lizzin_ (~b@c-24-14-148-164.hsd1.il.comcast.net) has quit (Read error: Connection reset by peer)
2013-05-09 21:28:16	-->	lizzin (~b@c-24-14-148-164.hsd1.il.comcast.net) has joined #scala
2013-05-09 21:28:36	-->	Heero` (~Heero@207.182.200.130) has joined #scala
2013-05-09 21:28:40	--	lizzin is now known as Guest12717
2013-05-09 21:28:49	<--	qwerty_nor (~Thunderbi@46.118.71.85) has quit (Quit: qwerty_nor)
2013-05-09 21:29:28	refefer	is there a better way to handle exceptions outside of the Either type?
2013-05-09 21:29:55	refefer	Either is rather clunky
2013-05-09 21:29:56	darkfrog	refefer: throw new Exception(...) :)
2013-05-09 21:30:10	refefer	blech
2013-05-09 21:30:24	darkfrog	refefer: well, scalaz has something similar
2013-05-09 21:30:45	refefer	a lot of my previous co-workers used exceptions for control flow; drove me absolutely nuts
2013-05-09 21:30:46	dwins	refefer: are you using for-comprehensions with Either?
2013-05-09 21:30:48	darkfrog	but scalaz has a tendency to make my head hurt and then I cry like a little girl.
2013-05-09 21:31:06	refefer	dwins: how would it work with for comprehension?
2013-05-09 21:31:39	dwins	refefer: it's pretty analogous to Option when you use it for error handling, just with None replaced by an error message
2013-05-09 21:31:41	<--	Heero (~Heero@unaffiliated/heero) has quit (Ping timeout: 255 seconds)
2013-05-09 21:32:00	<--	Ashoat (~Ashoat@66-192-186-66.static.twtelecom.net) has quit (Quit: Computer has gone to sleep.)
2013-05-09 21:32:01	-->	stephenjudkins (~textual@c-67-170-181-121.hsd1.or.comcast.net) has joined #scala
2013-05-09 21:32:02	-->	stephenj_ (~textual@c-67-170-181-121.hsd1.or.comcast.net) has joined #scala
2013-05-09 21:32:16	refefer	hmm, I've seen it used with fold 
2013-05-09 21:32:18	<--	stephenjudkins (~textual@c-67-170-181-121.hsd1.or.comcast.net) has quit (Client Quit)
2013-05-09 21:32:19	--	stephenj_ is now known as stephenjudkins
2013-05-09 21:32:22	<--	make_sense (~dmitryvor@178.121.236.115) has quit (Ping timeout: 276 seconds)
2013-05-09 21:33:15	<--	lcfrs (~lcfrs@8.25.197.24) has quit (Remote host closed the connection)
2013-05-09 21:34:33	tnks	refefer: what exactly do you find clunky about Either?
2013-05-09 21:34:44	tnks	that might be a good starting point for making a recommendation.
2013-05-09 21:34:49	-->	OwenOu (~Adium@ws165.acl.com) has joined #scala
2013-05-09 21:34:52	-->	OlegYch (~OlegYch@178.127.94.4) has joined #scala
2013-05-09 21:34:58	<--	Guest12717 (~b@c-24-14-148-164.hsd1.il.comcast.net) has quit (Ping timeout: 256 seconds)
2013-05-09 21:35:55	<--	OlegYch1 (~OlegYch@178.127.94.4) has quit (Ping timeout: 260 seconds)
2013-05-09 21:36:25	tixxit	refefer: You may prefer Validation in Scalaz (often hailed as the gateway drug to Scalaz)
2013-05-09 21:36:31	<--	Apocalisp (~textual@173-14-185-169-NewEngland.hfc.comcastbusiness.net) has quit (Quit: Computer has gone to sleep.)
2013-05-09 21:36:45	tixxit	It is right bias, so map/flatMap work as you'd expect --- on the right/success side of things
2013-05-09 21:37:07	tixxit	2.10 also has Try, which I don't have much experience but peopel seem to like
2013-05-09 21:37:35	<--	mizu_no_oto (~textual@gw1.mcgraw-hill.com) has quit (Quit: ["Textual IRC Client: www.textualapp.com"])
2013-05-09 21:37:57	refefer	Validation, eh
2013-05-09 21:38:01	refefer	I'll give it a look
2013-05-09 21:38:14	<--	mawueli (~mawueli@199.115.115.212) has quit (Remote host closed the connection)
2013-05-09 21:38:33	refefer	tixxit: Try actually looks really interesting as well
2013-05-09 21:38:39	<--	asQuirreL (~asQuirreL@oriel-student-nat.oriel.ox.ac.uk) has quit (Quit: Computer has gone to sleep.)
2013-05-09 21:39:04	tixxit	refefer: Yeah, if you are mainly looking for a cleaner way to deal with exceptions, Try should be good
2013-05-09 21:39:21	--	Arr`Gone is now known as Arrgh
2013-05-09 21:39:22	tixxit	not sure how it stacks up vs. Validation if you need to do more complicated validation
2013-05-09 21:41:37	refefer	tixxit: I really should start using scalaz
2013-05-09 21:42:13	refefer	I'm perhaps a bit too dependency adverse
2013-05-09 21:42:19	-->	Ashoat (~Ashoat@66-192-186-66.static.twtelecom.net) has joined #scala
2013-05-09 21:42:25	--	gpampara_off is now known as gpampara
2013-05-09 21:42:27	qu1j0t3	hehe
2013-05-09 21:43:20	-->	tpolecat (~tpolecat@c-76-105-239-160.hsd1.or.comcast.net) has joined #scala
2013-05-09 21:43:35	tnks	refefer: this is the main reason I think Try is suspect:  https://issues.scala-lang.org/browse/SI-6284?page=com.atlassian.jira.plugin.system.issuetabpanels:all-tabpanel
2013-05-09 21:45:14	stephenjudkins	tnks: uh, if you treat the category as "functions that do not catch exceptions" it doesn't violate any laws
2013-05-09 21:45:19	tnks	I think Martin's answer is something along the lines that map/flatMap pairs are not specified to adhere to the monad laws, so this isn't a bug.
2013-05-09 21:45:21	-->	DanBurton (~DanBurton@204-16-157-170-static.ipnetworksinc.net) has joined #scala
2013-05-09 21:45:57	tnks	stephenjudkins: are you just quoting something from the comments?
2013-05-09 21:46:03	stephenjudkins	tnks: no
2013-05-09 21:46:20	stephenjudkins	tnks: did someone else point this out?
2013-05-09 21:46:45	tnks	stephenjudkins: I think the main point is that it's not helping to reason about code really.
2013-05-09 21:46:55	tnks	the whole point is to "manage exceptions"
2013-05-09 21:46:59	-->	taylr_ (~taylr@static-96-239-100-47.nycmny.fios.verizon.net) has joined #scala
2013-05-09 21:47:00	tnks	but it does so in a non-RT way.
2013-05-09 21:47:05	<--	alwaysthecritic (~sam3@host86-161-160-31.range86-161.btcentralplus.com) has quit (Remote host closed the connection)
2013-05-09 21:47:27	stephenjudkins	i think it makes it a more useful tool. if you add exception catching/throwing into the equation, a *ton* of other rules break done. functions become no longer pure
2013-05-09 21:47:33	<--	dscleaver (~dscleaver@c-76-124-34-14.hsd1.nj.comcast.net) has quit (Ping timeout: 252 seconds)
2013-05-09 21:48:01	tnks	stephenjudkins: I'd just rather work with pure functions that return either and call it a day.
2013-05-09 21:48:08	tnks	Try doesn't really help me.
2013-05-09 21:48:13	-->	joneshf-laptop (~joneshf@mail.concordusapps.com) has joined #scala
2013-05-09 21:48:19	stephenjudkins	exceptions are sadly widely used in a lot of other people's code, and sadly sometimes the easiest way to solve a problem
2013-05-09 21:48:58	stephenjudkins	tnks: i'd rather work with pure functions too, but often I don't have that choice, and sometimes doing that requires invasive changes to a ton of other code.
2013-05-09 21:49:08	<--	mariaDa2 (~dark@213.238.10.41) has quit (Ping timeout: 256 seconds)
2013-05-09 21:49:09	-->	gazarsgo (~gazarsgo@cpe-66-68-132-174.austin.res.rr.com) has joined #scala
2013-05-09 21:49:12	tnks	I thought the programming community-at-large has decided that simple != easy.
2013-05-09 21:49:40	stephenjudkins	as long as exceptions exist, we should have tools to reason about them and handle them in a graceful manner. bring them back to the land of equational reasoning
2013-05-09 21:50:00	-->	djspiewak (~djspiewak@50-194-128-249-static.hfc.comcastbusiness.net) has joined #scala
2013-05-09 21:50:40	<--	runT1ME (~vmarquez@ip68-5-189-156.oc.oc.cox.net) has quit (Quit: runT1ME)
2013-05-09 21:50:48	stephenjudkins	tnks: of course! but if you're quoting hickey, you should listen to his entire talk. he didn't say that we should always go out of our way to write the simplest code. he granted that it's a tradeoff and sometimes ease is worth sacrificing some simplicity
2013-05-09 21:50:50	-->	OlegYch2 (~OlegYch@178.127.94.4) has joined #scala
2013-05-09 21:50:51	<--	taylr (~taylr@static-96-239-100-47.nycmny.fios.verizon.net) has quit (Ping timeout: 260 seconds)
2013-05-09 21:50:53	tpolecat	this is tough because values don't throw exceptions
2013-05-09 21:50:54	qu1j0t3	tnks: they just like to pretend there's no cost to bad ideas ;D
2013-05-09 21:51:30	tnks	stephenjudkins: I was there at that talk.  Feel free to make whatever compromises make sense to you.
2013-05-09 21:51:35	-->	trepidaciousMBR (~trepidaci@217.155.204.2) has joined #scala
2013-05-09 21:51:39	stephenjudkins	tpolecat: exactly. exceptions are outside the world of values.
2013-05-09 21:51:41	tnks	I don't think Try is going to help my code base at all.
2013-05-09 21:51:56	tnks	and I'm fastly going to convert the Try scala.concurrent.Future gives me to Eithers.
2013-05-09 21:52:15	-->	hdoshi (~hdoshi@66.54.159.166) has joined #scala
2013-05-09 21:52:57	stephenjudkins	tnks: so, the complaint was "Try map/flatMap violate the monad laws if you use functions that catch exceptions"
2013-05-09 21:53:07	stephenjudkins	but catching exceptions is a fundamentally unpure thing!
2013-05-09 21:53:09	<--	jrbalderrama (~Thunderbi@181.114.95.162) has quit (Quit: jrbalderrama)
2013-05-09 21:53:36	<--	OlegYch (~OlegYch@178.127.94.4) has quit (Ping timeout: 264 seconds)
2013-05-09 21:53:37	tnks	stephenjudkins: right, but Try makes the abstraction look like something that it's just not.
2013-05-09 21:53:41	stephenjudkins	it's like saying, "Option violates the monad laws if a function in map calls System.exit(1)" 
2013-05-09 21:53:57	tpolecat	no, that's ok because it's still RT
2013-05-09 21:54:02	tnks	when you let Options and Eithers float around your code, you're not really tricking your collaborators with broken APIs.
2013-05-09 21:54:13	tpolecat	System.exit has type Nothing and it never returns
2013-05-09 21:54:18	tnks	but when people let Trys leak all over their code base, they're playing with fire.
2013-05-09 21:54:26	-->	Apocalisp (~textual@173-14-185-169-NewEngland.hfc.comcastbusiness.net) has joined #scala
2013-05-09 21:54:36	tnks	it's the convenience of Try that makes it kind of dangerous.
2013-05-09 21:54:49	stephenjudkins	tnks: how are they playing with fire? they're playing with fire if they pass side-effectly "functions" into map/flatMap
2013-05-09 21:55:18	tnks	stephenjudkins: because there are functional algorithms that really on real referential transparency.
2013-05-09 21:55:20	stephenjudkins	but that's a complaint for *any* monad. catching exceptions is a side-effect, and Try is no different that Option if your functions don't have side effects
2013-05-09 21:56:17	stephenjudkins	tnks: and you can as easily algebraically reason about Try as you can Option as long as your functions don't try/catch exceptions
2013-05-09 21:56:19	tnks	stephenjudkins: this is a circular argument.
2013-05-09 21:56:37	stephenjudkins	how?
2013-05-09 21:56:40	tnks	the whole "as long as your functions don't..." is not "easy to reason about"
2013-05-09 21:56:57	stephenjudkins	tnks: do you think Option doesn't follow the monad laws?
2013-05-09 21:57:21	tnks	but the /point/ of Try is to deal with funny functions.
2013-05-09 21:57:25	-->	justinmullin (~jmullin@nat.sierrabravo.net) has joined #scala
2013-05-09 21:57:28	pdxleif	There's no :kind command in the scala REPL?
2013-05-09 21:57:46	tnks	seriously, feel free to use it.
2013-05-09 21:57:51	tnks	I'm not going to stop you.
2013-05-09 21:57:53	tnks	I'm uninterested.
2013-05-09 21:58:22	stephenjudkins	tnks: ok, and somehow you expect something that deals with impure "functions" not make concessions to the fact that they're impure?
2013-05-09 21:58:41	tnks	stephenjudkins: the point is to get out of the impure hell.
2013-05-09 21:58:47	tnks	not propagate it around the API.
2013-05-09 21:58:54	tnks	that's all.
2013-05-09 21:58:57	<--	justinmullin (~jmullin@nat.sierrabravo.net) has left #scala ("Leaving")
2013-05-09 21:59:04	tnks	converting a Try to Either is possible.
2013-05-09 21:59:13	tnks	it's a hack, but it's doable.
2013-05-09 21:59:34	tnks	just recover the Throwable to whatever algebra is sane for error handling.
2013-05-09 22:00:23	tixxit	pdxleif: Someone implemented it
2013-05-09 22:00:34	tixxit	It's available in scala bot... I think
2013-05-09 22:00:43	tixxit	! :kind 1
2013-05-09 22:00:44	multibot_	 error: illegal start of definition
2013-05-09 22:00:45	multibot_	        :kind 1
2013-05-09 22:00:46	multibot_	        ^
2013-05-09 22:00:48	tixxit	nope
2013-05-09 22:02:11	tixxit	It may have been Eugene Yakota who implemented it
2013-05-09 22:02:16	tixxit	you may need to do some googling
2013-05-09 22:02:30	tpolecat	there's special bot syntax for that stuff i thik
2013-05-09 22:02:38	tpolecat	:type 1 + 1
2013-05-09 22:02:42	tpolecat	hm nope
2013-05-09 22:02:48	tixxit	Yeah, :kind is slightly different than type too
2013-05-09 22:02:52	tixxit	! :t 1
2013-05-09 22:02:52	multibot_	 error: illegal start of definition
2013-05-09 22:02:53	multibot_	        :t 1
2013-05-09 22:02:54	multibot_	        ^
2013-05-09 22:02:54	tixxit	:t 1
2013-05-09 22:02:55	tpolecat	right
2013-05-09 22:02:59	<--	przl (~przlrkt@p5B298C83.dip0.t-ipconnect.de) has quit (Ping timeout: 260 seconds)
2013-05-09 22:03:04	lambdabot	Num a => a
2013-05-09 22:03:13	tpolecat	hm
2013-05-09 22:03:17	tixxit	huh
2013-05-09 22:03:34	tixxit	:t { (x: Int) => x.toString }
2013-05-09 22:03:42	lambdabot	parse error on input `{'
2013-05-09 22:03:46	-->	evanmeagher (~evm@8.25.197.24) has joined #scala
2013-05-09 22:03:54	tixxit	Guess its Haskell
2013-05-09 22:03:57	tpolecat	yeah
2013-05-09 22:04:03	<--	lambdabot (lambdabot@2600:3c00::f03c:91ff:fe70:53e1) has quit (Remote host closed the connection)
2013-05-09 22:04:05	tixxit	Doesn't help pdxleif 
2013-05-09 22:04:17	tpolecat	aww, you scared it off
2013-05-09 22:04:24	-->	gowlin (~rgolbeck@debian/developer/rmgolbeck) has joined #scala
2013-05-09 22:04:28	tixxit	lol
2013-05-09 22:04:37	tnks	man. . . trying to use method-dependant types. . . and got this:
2013-05-09 22:04:38	tixxit	Saw Scala and bailed
2013-05-09 22:04:40	tnks	[error]  found   : Option[meta.R]
2013-05-09 22:04:40	tnks	[error]  required: Option[meta.R]
2013-05-09 22:04:48	tnks	sucks.
2013-05-09 22:04:49	<--	OOPMan (~adamj@105-236-113-162.access.mtnbusiness.co.za) has quit (Read error: Connection reset by peer)
2013-05-09 22:04:51	tnks	any pointers?
2013-05-09 22:05:06	tixxit	tnks: Well, it could be a valid error
2013-05-09 22:05:14	tixxit	It gets subtle
2013-05-09 22:05:18	-->	mizu_no_oto (~textual@gw1.mcgraw-hill.com) has joined #scala
2013-05-09 22:05:18	tixxit	do you have the code somewhere?
2013-05-09 22:05:22	tnks	tixxit: because of path-dependant types?
2013-05-09 22:05:26	-->	OlegYch (~OlegYch@178.127.94.4) has joined #scala
2013-05-09 22:05:42	tnks	tixxit: it's still twisted in a workspace on my laptop.
2013-05-09 22:05:44	tixxit	tnks: I've gotten errors like that before and discovered it was my bad
2013-05-09 22:05:51	tnks	haven't gotten to minimize the problem.
2013-05-09 22:05:59	tnks	tixxit: what kind of things cause that?
2013-05-09 22:06:08	tnks	I thought I was abiding by the rules of the type system.
2013-05-09 22:06:16	tixxit	Not sure... this is going back a while
2013-05-09 22:06:42	<--	Heero` (~Heero@207.182.200.130) has quit (Ping timeout: 256 seconds)
2013-05-09 22:07:00	tnks	I don't know which is worse:  not having a feature I really want because it's sticky type-theoretically or a compiler bug.
2013-05-09 22:07:04	-->	OlegYch7 (~OlegYch@178.127.68.58) has joined #scala
2013-05-09 22:07:16	<--	OlegYch2 (~OlegYch@178.127.94.4) has quit (Ping timeout: 272 seconds)
2013-05-09 22:07:22	<--	eamelink (~quassel@2001:610:7de:0:8098:f8c6:5692:7c67) has quit (Quit: No Ping reply in 180 seconds.)
2013-05-09 22:07:28	-->	eamelinky (~quassel@2001:610:7de:0:2dc8:2255:9081:9372) has joined #scala
2013-05-09 22:07:29	-->	hiptobecubic (~john@unaffiliated/hiptobecubic) has joined #scala
2013-05-09 22:07:47	tnks	there's a type projection here.
2013-05-09 22:07:53	-->	lambdabot (lambdabot@2600:3c00::f03c:91ff:fe70:53e1) has joined #scala
2013-05-09 22:07:55	tnks	in general, that's kind of a smell for me.
2013-05-09 22:08:10	--	evanmeagher is now known as evanm
2013-05-09 22:08:20	--	evanm is now known as evanmeagher
2013-05-09 22:08:37	-->	divoxx (~divoxx@64.124.27.219) has joined #scala
2013-05-09 22:08:46	tnks	this has to do with trying to save heterogeneous typesafe data to a untyped data store and retrieve it back into typesafety.
2013-05-09 22:10:01	<--	OlegYch (~OlegYch@178.127.94.4) has quit (Ping timeout: 252 seconds)
2013-05-09 22:10:39	<--	jackcviers (~user@24.149.8.212) has quit (Ping timeout: 252 seconds)
2013-05-09 22:10:41	-->	pcarrier (~textual@unaffiliated/pcarrier) has joined #scala
2013-05-09 22:11:11	--	Arrgh is now known as Arr`Gone
2013-05-09 22:11:21	<--	ajhager (~ajhager@108-71-214-22.lightspeed.iplsin.sbcglobal.net) has quit (Read error: Connection reset by peer)
2013-05-09 22:13:22	<--	gowlin (~rgolbeck@debian/developer/rmgolbeck) has quit (Read error: Connection reset by peer)
2013-05-09 22:14:01	<--	danrabinowitz (~danrabino@184.106.149.15) has left #scala ("Linkinus - http://linkinus.com")
2013-05-09 22:14:32	tnks	tixxit: okay, I think I found a workaround.
2013-05-09 22:14:59	tnks	I think it's because the "type" keyword doesn't exactly make lexical type synonyms.
2013-05-09 22:15:02	<--	Eldariof-ru (~CLD@pppoe-223-236-dyn-sr.volgaline.ru) has quit (Ping timeout: 252 seconds)
2013-05-09 22:15:26	<--	kushal (~kdas@fedora/kushal) has quit (Quit: Leaving)
2013-05-09 22:15:32	tnks	I'm having a sense of deja vu with this probem.
2013-05-09 22:15:41	tnks	I feel I've heard people talking about it before.
2013-05-09 22:15:42	--	Arr`Gone is now known as Arrgh
2013-05-09 22:15:48	tpolecat	type exhibits spooky behavior
2013-05-09 22:15:54	-->	gowlin (~rgolbeck@debian/developer/rmgolbeck) has joined #scala
2013-05-09 22:16:33	tpolecat	i try not to think about it
2013-05-09 22:16:34	<--	tpolecat (~tpolecat@c-76-105-239-160.hsd1.or.comcast.net) has quit (Quit: is having a little nap now.)
2013-05-09 22:16:42	<--	pcarrier (~textual@unaffiliated/pcarrier) has quit (Ping timeout: 252 seconds)
2013-05-09 22:17:18	-->	ajhager (~ajhager@108-71-214-22.lightspeed.iplsin.sbcglobal.net) has joined #scala
2013-05-09 22:17:32	tnks	I don't know. . . "type" seems like a gateway to existential types. . . doing everything with universals alone seems too extreme.
2013-05-09 22:17:50	-->	pcarrier (~textual@unaffiliated/pcarrier) has joined #scala
2013-05-09 22:17:57	pdxleif	:t Maybe
2013-05-09 22:18:08	<--	mtk (~mtk@ool-44c35983.dyn.optonline.net) has quit (Read error: Connection reset by peer)
2013-05-09 22:18:10	lambdabot	Not in scope: data constructor `Maybe'
2013-05-09 22:18:17	pdxleif	:k Maybe
2013-05-09 22:18:26	lambdabot	* -> *
2013-05-09 22:19:11	pdxleif	What's spooky about type?
2013-05-09 22:19:46	-->	dancapo (dcsobral@201.22.135.227.dynamic.adsl.gvt.net.br) has joined #scala
2013-05-09 22:19:48	-->	whaley (~whaley@108-86-97-217.lightspeed.jcvlfl.sbcglobal.net) has joined #scala
2013-05-09 22:19:52	--	gpampara is now known as gpampara_off
2013-05-09 22:21:36	-->	mtk (~mtk@ool-44c35983.dyn.optonline.net) has joined #scala
2013-05-09 22:21:40	<--	dcsobral (dcsobral@177.96.235.83) has quit (Ping timeout: 260 seconds)
2013-05-09 22:22:13	<--	mtk (~mtk@ool-44c35983.dyn.optonline.net) has quit (Client Quit)
2013-05-09 22:22:48	-->	mtk (~mtk@ool-44c35983.dyn.optonline.net) has joined #scala
2013-05-09 22:23:31	<--	gowlin (~rgolbeck@debian/developer/rmgolbeck) has quit (Ping timeout: 260 seconds)
2013-05-09 22:27:37	<--	SeriousWorm (~sworm@bnet2731.x3d.carnet.hr) has quit (Ping timeout: 252 seconds)
2013-05-09 22:31:28	-->	sritchie (~sritchie@8.25.197.25) has joined #scala
2013-05-09 22:32:03	desaila_	https://gist.github.com/mylons/af7483194d9cefa8cfe5 -- my swapJobIdInMap doesn't seem to consistently remove/replace an oldId with a newId. any ideas as to why?
2013-05-09 22:32:09	-->	runT1ME (~vmarquez@wsip-98-189-26-19.oc.oc.cox.net) has joined #scala
2013-05-09 22:32:16	<--	runT1ME (~vmarquez@wsip-98-189-26-19.oc.oc.cox.net) has quit (Client Quit)
2013-05-09 22:32:53	-->	runT1ME (~vmarquez@wsip-98-189-26-19.oc.oc.cox.net) has joined #scala
2013-05-09 22:34:43	<--	asrail (~quassel@177.193.199.186) has quit (Ping timeout: 245 seconds)
2013-05-09 22:35:57	<--	stephenjudkins (~textual@c-67-170-181-121.hsd1.or.comcast.net) has quit (Quit: Computer has gone to sleep.)
2013-05-09 22:36:52	<--	OlegYch7 (~OlegYch@178.127.68.58) has quit (Read error: Connection reset by peer)
2013-05-09 22:37:09	-->	OlegYch7 (~OlegYch@178.127.68.58) has joined #scala
2013-05-09 22:37:54	<--	refefer (~astanton@ip-64-134-43-62.public.wayport.net) has quit (Ping timeout: 276 seconds)
2013-05-09 22:39:06	-->	OOPMan (~Adam_Jorg@105-236-113-162.access.mtnbusiness.co.za) has joined #scala
2013-05-09 22:40:13	-->	pala21 (~pala@HSI-KBW-134-3-229-202.hsi14.kabel-badenwuerttemberg.de) has joined #scala
2013-05-09 22:41:12	-->	Heero (~Heero@unaffiliated/heero) has joined #scala
2013-05-09 22:42:36	-->	twoism (~twoism@c-174-62-77-34.hsd1.ca.comcast.net) has joined #scala
2013-05-09 22:42:48	<--	twoism (~twoism@c-174-62-77-34.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2013-05-09 22:43:14	<--	mizu_no_oto (~textual@gw1.mcgraw-hill.com) has quit (Quit: Computer has gone to sleep.)
2013-05-09 22:43:21	-->	twoism (~twoism@8.25.194.28) has joined #scala
2013-05-09 22:43:42	<--	tsinnema (~tsinnema@dsl-espbrasgw1-50dfb9-125.dhcp.inet.fi) has quit (Read error: Connection reset by peer)
2013-05-09 22:44:43	-->	dcorbin (~dcorbin@c-76-97-197-9.hsd1.ga.comcast.net) has joined #scala
2013-05-09 22:44:43	<--	dcorbin (~dcorbin@c-76-97-197-9.hsd1.ga.comcast.net) has quit (Changing host)
2013-05-09 22:44:43	-->	dcorbin (~dcorbin@unaffiliated/dcorbin) has joined #scala
2013-05-09 22:45:41	<--	weie (~eie@softbank221078042071.bbtec.net) has quit (Read error: Connection reset by peer)
2013-05-09 22:46:17	-->	weie (~eie@softbank221078042071.bbtec.net) has joined #scala
2013-05-09 22:46:52	runT1ME	Scala's Either sucks cause I don't think it defaults to right comprehension
2013-05-09 22:47:02	runT1ME	use \/
2013-05-09 22:50:10	<--	Heero (~Heero@unaffiliated/heero) has quit (Ping timeout: 268 seconds)
2013-05-09 22:56:32	-->	lcfrs (~lcfrs@8.25.197.24) has joined #scala
2013-05-09 22:57:17	-->	bartt1 (~Adium@8.25.197.25) has joined #scala
2013-05-09 22:57:18	<--	pcarrier (~textual@unaffiliated/pcarrier) has quit (Ping timeout: 272 seconds)
2013-05-09 22:57:39	<--	taylr_ (~taylr@static-96-239-100-47.nycmny.fios.verizon.net) has quit (Remote host closed the connection)
2013-05-09 22:57:45	<--	Mapleh (uid10029@trivialand/genius/maple) has quit
2013-05-09 22:57:45	<--	bartt (~Adium@8.25.197.25) has quit (Read error: Connection reset by peer)
2013-05-09 22:58:33	-->	daniel_hinojosa (~danno@67-0-179-87.albq.qwest.net) has joined #scala
2013-05-09 22:58:42	tysonjh	@desaila_ I don't see a problem... are you running this in multiple threads?
2013-05-09 22:58:43	lambdabot	Unknown command, try @list
2013-05-09 22:59:09	<--	atoll (~atoll@84-74-102-216.dclient.hispeed.ch) has quit (Ping timeout: 252 seconds)
2013-05-09 22:59:22	-->	tpolecat (~tpolecat@c-24-22-11-146.hsd1.or.comcast.net) has joined #scala
2013-05-09 22:59:23	--	Arrgh is now known as Arr`Gone
2013-05-09 22:59:32	-->	taylr (~taylr@static-96-239-100-47.nycmny.fios.verizon.net) has joined #scala
2013-05-09 22:59:36	tysonjh	desaila_ I don't see a problem... are you running this in multiple threads? Also consider using loj.copy(id = newId)
2013-05-09 23:01:51	-->	pcarrier (~textual@unaffiliated/pcarrier) has joined #scala
2013-05-09 23:02:32	<--	pala21 (~pala@HSI-KBW-134-3-229-202.hsi14.kabel-badenwuerttemberg.de) has left #scala
2013-05-09 23:02:44	--	Arr`Gone is now known as Arrgh
2013-05-09 23:03:56	<--	pantsman (~pantsman@pdpc/supporter/active/pantsman) has quit (Ping timeout: 255 seconds)
2013-05-09 23:03:56	<--	soulofpeace (~soulofpea@cm234.gamma162.maxonline.com.sg) has quit (Ping timeout: 255 seconds)
2013-05-09 23:04:40	<--	Naktibalda (~chatzilla@cpc2-heme10-2-0-cust25.9-1.cable.virginmedia.com) has quit (Quit: ChatZilla 0.9.90 [Firefox 20.0/20130329030832])
2013-05-09 23:05:33	-->	hdoshi_ (~hdoshi@66.54.159.166) has joined #scala
2013-05-09 23:06:01	-->	atoll (~atoll@84-74-102-216.dclient.hispeed.ch) has joined #scala
2013-05-09 23:06:25	<--	matheus23 (~quassel@p4FDF26B6.dip0.t-ipconnect.de) has quit (Remote host closed the connection)
2013-05-09 23:07:14	<--	lazrahl (~lazrahl@atlanta.tstllc.net) has quit (Remote host closed the connection)
2013-05-09 23:08:40	<--	hdoshi (~hdoshi@66.54.159.166) has quit (Ping timeout: 268 seconds)
2013-05-09 23:11:44	<--	sdeinum (~Spencer@dn-142-89-188-47.sjhc.london.on.ca) has quit (Quit: leaving)
2013-05-09 23:12:27	-->	Nitro (~nitro@unaffiliated/nitro) has joined #scala
2013-05-09 23:12:38	<--	dwins (~dwins@195-239-234-66.static.cosmoweb.net) has quit (Ping timeout: 245 seconds)
2013-05-09 23:12:47	-->	jackcviers (~user@24.149.8.212) has joined #scala
2013-05-09 23:13:11	<--	jackcviers (~user@24.149.8.212) has quit (Remote host closed the connection)
2013-05-09 23:14:01	-->	diiver (~diiver@178-16-148-1.obit.ru) has joined #scala
2013-05-09 23:14:48	<--	Nitro (~nitro@unaffiliated/nitro) has quit (Client Quit)
2013-05-09 23:14:53	-->	jackcviers (~user@24.149.8.212) has joined #scala
2013-05-09 23:15:12	<--	jackcviers (~user@24.149.8.212) has quit (Read error: Connection reset by peer)
2013-05-09 23:15:58	<--	jkarlsson (~jonas@70-100-130-14.dsl1-field.roch.ny.frontiernet.net) has quit (Quit: jkarlsson)
2013-05-09 23:16:39	-->	OlegYch (~OlegYch@178.127.68.58) has joined #scala
2013-05-09 23:16:53	-->	Nitro (~nitro@unaffiliated/nitro) has joined #scala
2013-05-09 23:17:10	-->	Nekuromento (~Nekuromen@91.187.26.197) has joined #scala
2013-05-09 23:17:13	<--	Nitro (~nitro@unaffiliated/nitro) has quit (Client Quit)
2013-05-09 23:17:33	-->	nafg (~quassel@pool-98-109-167-242.nwrknj.fios.verizon.net) has joined #scala
2013-05-09 23:17:45	<--	RSchulzB (~Adium@67.218.117.3) has quit (Quit: Leaving.)
2013-05-09 23:18:27	<--	OlegYch7 (~OlegYch@178.127.68.58) has quit (Ping timeout: 256 seconds)
2013-05-09 23:19:49	<--	rhysyngsun (~rhysyngsu@173-162-158-30-NewEngland.hfc.comcastbusiness.net) has quit (Quit: rhysyngsun)
2013-05-09 23:20:38	-->	Nitro (~nitro@unaffiliated/nitro) has joined #scala
2013-05-09 23:21:46	<--	eklavya (~eklavya@180.151.44.201) has quit (Quit: Konversation terminated!)
2013-05-09 23:21:46	<--	Nitro (~nitro@unaffiliated/nitro) has quit (Client Quit)
2013-05-09 23:22:09	<--	diiver (~diiver@178-16-148-1.obit.ru) has quit (Quit: diiver)
2013-05-09 23:22:21	-->	tibbe (tibbe@nat/google/x-rpcfroyjcbaflhjv) has joined #scala
2013-05-09 23:22:21	<--	mljsimone (~mljsimone@186.137.248.10) has quit (Remote host closed the connection)
2013-05-09 23:22:30	<--	OwenOu (~Adium@ws165.acl.com) has quit (Quit: Leaving.)
2013-05-09 23:22:31	tibbe	How do I pattern match on a case class in a lambda expression?
2013-05-09 23:23:10	evanmeagher	tibbe: i.e. within a map?
2013-05-09 23:23:19	tibbe	evanmeagher: for example
2013-05-09 23:23:20	nuttycom1	tibbe: List((1, 2), (3, 4)) map { case (i, j) => i + j }
2013-05-09 23:23:54	tibbe	This doesn't seem to be a valied lambda expression: case (Pos(x, y)) => false
2013-05-09 23:24:05	-->	Nitro (~nitro@unaffiliated/nitro) has joined #scala
2013-05-09 23:24:07	tibbe	given this case class: case class Pos(x: Int, y: Int)
2013-05-09 23:24:12	evanmeagher	drop the outer parens
2013-05-09 23:24:15	<--	Nitro (~nitro@unaffiliated/nitro) has quit (Client Quit)
2013-05-09 23:24:21	evanmeagher	so, `case Pos(x, y) => false`
2013-05-09 23:24:46	nuttycom1	! case class Pos(x: Int, y: Int); List(Pos(1, 2), Pos(3, 4)) map { case Pos(x, y) => x + y }
2013-05-09 23:24:47	multibot_	 defined class Pos
2013-05-09 23:24:48	multibot_	 List[Int] = List(3, 7)
2013-05-09 23:25:00	tibbe	I get illegal start of simple expression
2013-05-09 23:25:15	tibbe	I have: def foo(…): … = case Pos(x, y) => false
2013-05-09 23:25:20	evanmeagher	well, just the case isn't an expression
2013-05-09 23:25:22	tibbe	i.e. I'm trying to return a function
2013-05-09 23:25:36	tibbe	that's was what I was afraid of
2013-05-09 23:25:37	tibbe	ok
2013-05-09 23:25:40	nuttycom1	tibbe: you need to enclose it in curly braces
2013-05-09 23:25:44	tibbe	I'll work around the limitation
2013-05-09 23:26:15	evanmeagher	def foo(pos: Pos) = pos match { case Pos(x, y) => false }
2013-05-09 23:26:22	nuttycom1	! case class Pos(x: Int, y: Int); def foo(): PartialFunction[Pos, Boolean] = { case Pos(x, y) => true }
2013-05-09 23:26:22	multibot_	 defined class Pos
2013-05-09 23:26:24	multibot_	 foo: ()PartialFunction[Pos,Boolean]
2013-05-09 23:26:49	nuttycom1	You will need to explicitly ascribe the PartialFunction type
2013-05-09 23:26:52	colock	well, total function, knowing the semantics of type Pos
2013-05-09 23:27:36	nuttycom1	Does that work?
2013-05-09 23:27:56	tibbe	thanks :)
2013-05-09 23:28:05	<--	artemk (~artem@95.81.3.50) has quit (Quit: Leaving.)
2013-05-09 23:28:09	nuttycom1	! case class Pos(x: Int, y: Int); def foo() : Pos => Boolean = { case Pos(x, y) => true }
2013-05-09 23:28:10	multibot_	 defined class Pos
2013-05-09 23:28:11	multibot_	 foo: ()Pos => Boolean
2013-05-09 23:28:15	nuttycom1	Guess so
2013-05-09 23:28:19	tpolecat	if you intended it to be a total function then … = foo match { case … } is probably the best choice because the compiler will warn you if your match isn't exhaustive 
2013-05-09 23:28:22	tibbe	{} was enough
2013-05-09 23:28:33	tibbe	it's not neccesarily total 
2013-05-09 23:28:47	tibbe	well, it's total in the sense Pos is the only constructor / case class
2013-05-09 23:28:49	-->	RSchulzB (~Adium@67.218.117.3) has joined #scala
2013-05-09 23:28:51	tibbe	so yes
2013-05-09 23:28:52	<--	OOPMan (~Adam_Jorg@105-236-113-162.access.mtnbusiness.co.za) has quit (Read error: Connection reset by peer)
2013-05-09 23:29:04	tibbe	what I'm using the cordinates for doesn't make my outer function total however
2013-05-09 23:29:10	tibbe	in either case, this enough for me to move on
2013-05-09 23:29:12	tibbe	thanks
2013-05-09 23:29:20	-->	Heero (~Heero@c-71-229-158-223.hsd1.co.comcast.net) has joined #scala
2013-05-09 23:29:20	<--	Heero (~Heero@c-71-229-158-223.hsd1.co.comcast.net) has quit (Changing host)
2013-05-09 23:29:20	-->	Heero (~Heero@unaffiliated/heero) has joined #scala
2013-05-09 23:29:50	-->	RaceCondition (~erik@82.131.19.23.cable.starman.ee) has joined #scala
2013-05-09 23:31:00	-->	gphat (~gphat@99-8-185-28.lightspeed.snfcca.sbcglobal.net) has joined #scala
2013-05-09 23:31:20	-->	gowlin (~rgolbeck@debian/developer/rmgolbeck) has joined #scala
2013-05-09 23:32:35	<--	dolio (~dolio@gw1.mcgraw-hill.com) has quit (Ping timeout: 252 seconds)
2013-05-09 23:34:01	-->	jkarlsson (~jonas@70-100-130-14.dsl1-field.roch.ny.frontiernet.net) has joined #scala
2013-05-09 23:34:24	-->	adaro (~jkuperus@53518F8B.cm-6-2c.dynamic.ziggo.nl) has joined #scala
2013-05-09 23:34:45	-->	doctau (~doctau@2001:44b8:21b1:8100:2677:3ff:fe37:2638) has joined #scala
2013-05-09 23:35:04	adaro	Why would one use the cake pattern over say passing dependencies in the constructor
2013-05-09 23:35:20	<--	RaceCondition (~erik@82.131.19.23.cable.starman.ee) has quit (Quit: RaceCondition)
2013-05-09 23:35:36	<--	kobain (~kobian@unaffiliated/kobain) has quit (Quit: l'unica verità.. è la morte stessa!)
2013-05-09 23:35:37	evanmeagher	adaro: proclivity to overcomplicate things
2013-05-09 23:35:50	-->	kobain (~kobian@unaffiliated/kobain) has joined #scala
2013-05-09 23:35:52	evanmeagher	i.e. don't if your alternative is a straight forward dependency injection
2013-05-09 23:36:17	<--	kobain (~kobian@unaffiliated/kobain) has quit (Client Quit)
2013-05-09 23:36:42	adaro	evanmeagher: which implies that it's a good choice for non straight forward things ?
2013-05-09 23:37:02	-->	OwenOu (~Adium@ws165.acl.com) has joined #scala
2013-05-09 23:37:11	-->	kobain (~kobian@unaffiliated/kobain) has joined #scala
2013-05-09 23:37:21	-->	jackcviers (~user@24.149.8.212) has joined #scala
2013-05-09 23:37:21	<--	kobain (~kobian@unaffiliated/kobain) has quit (Excess Flood)
2013-05-09 23:37:24	adaro	i am kind of curious as to when this approach holds benefits over a more straight forward solution
2013-05-09 23:37:40	-->	kobain (~kobian@unaffiliated/kobain) has joined #scala
2013-05-09 23:37:52	-->	miclorb (~miclorb@ppp121-44-136-248.lns20.syd7.internode.on.net) has joined #scala
2013-05-09 23:37:56	adaro	i am sure the people that came up with cake where also aware of this option
2013-05-09 23:37:57	evanmeagher	arguably. i'm of the opinion that it has a surface area of usefulness a lot smaller than what folks often use it for
2013-05-09 23:38:15	-->	oscarvarto (~oscarvart@187.173.241.21) has joined #scala
2013-05-09 23:38:21	evanmeagher	yeah, i'm the wrong person to give an opinion, in that case
2013-05-09 23:38:29	<--	trepidaciousMBR (~trepidaci@217.155.204.2) has quit (Quit: trepidaciousMBR)
2013-05-09 23:39:16	<--	lcfrs (~lcfrs@8.25.197.24) has quit (Remote host closed the connection)
2013-05-09 23:40:25	adaro	so in your opinion what is it's surface area of usefulness
2013-05-09 23:40:52	-->	lcfrs (~lcfrs@8.25.197.24) has joined #scala
2013-05-09 23:41:07	<--	dankest (~dankest@wsip-70-182-130-90.sb.sd.cox.net) has quit (Read error: Connection reset by peer)
2013-05-09 23:41:12	<--	RSchulzB (~Adium@67.218.117.3) has quit (Quit: Leaving.)
2013-05-09 23:42:34	<--	Excureo (~c@68-116-31-34.static.yakm.wa.charter.com) has quit (Remote host closed the connection)
2013-05-09 23:42:35	-->	RaceCondition (~erik@82.131.19.23.cable.starman.ee) has joined #scala
2013-05-09 23:42:56	evanmeagher	IIRC the compiler support for reflection uses the cake pattern
2013-05-09 23:43:18	evanmeagher	odersky talked about it at scala days last year a bit: http://channel9.msdn.com/Events/Lang-NEXT/Lang-NEXT-2012/Reflection-and-Compilers
2013-05-09 23:43:27	evanmeagher	not to asnwer your question with a 70-minute video :-X
2013-05-09 23:43:32	-->	SeriousWorm (~sworm@bnet2731.x3d.carnet.hr) has joined #scala
2013-05-09 23:43:36	<--	jackcviers (~user@24.149.8.212) has quit (Ping timeout: 256 seconds)
2013-05-09 23:44:29	<--	bblfish_ (~bblfish@AAubervilliers-651-1-306-218.w83-114.abo.wanadoo.fr) has quit (Read error: No route to host)
2013-05-09 23:44:41	--	mrrobbot is now known as mrlunchbot
2013-05-09 23:44:44	-->	bblfish (~bblfish@AAubervilliers-651-1-306-218.w83-114.abo.wanadoo.fr) has joined #scala
2013-05-09 23:45:40	adaro	evanmeagher: :)
2013-05-09 23:46:48	<--	mary5030 (~mary5030@72.32.115.231) has quit (Ping timeout: 276 seconds)
2013-05-09 23:47:51	-->	jackcviers (~user@24.149.8.212) has joined #scala
2013-05-09 23:50:40	-->	dscleaver (~dscleaver@c-76-124-34-14.hsd1.nj.comcast.net) has joined #scala
2013-05-09 23:51:18	<--	jackcviers (~user@24.149.8.212) has quit (Remote host closed the connection)
2013-05-09 23:51:59	-->	jackcviers (~user@24.149.8.212) has joined #scala
2013-05-09 23:52:09	<--	Apocalisp (~textual@173-14-185-169-NewEngland.hfc.comcastbusiness.net) has quit (Quit: Computer has gone to sleep.)
2013-05-09 23:52:43	<--	beolnix (~beolnix@188.134.48.72) has quit (Quit: Leaving)
2013-05-09 23:53:05	-->	Apocalisp (~textual@173-14-185-169-NewEngland.hfc.comcastbusiness.net) has joined #scala
2013-05-09 23:53:51	-->	RSchulzB (~Adium@67.218.117.3) has joined #scala
2013-05-09 23:55:17	<--	oriig (~ilia@78-83-56-21.spectrumnet.bg) has quit (Remote host closed the connection)
2013-05-09 23:56:26	<--	lcfrs (~lcfrs@8.25.197.24) has quit (Remote host closed the connection)
2013-05-09 23:56:32	-->	mary5030 (~mary5030@72.32.115.231) has joined #scala
2013-05-09 23:56:39	skchrko	adaro, and here is 50-minute video if 70 minutes are too much http://www.youtube.com/watch?v=yLbdw06tKPQ
2013-05-09 23:57:03	skchrko	adaro, all that you ever want to know about cake :)
2013-05-09 23:57:28	evanmeagher	tl;dr it's a lie
2013-05-09 23:57:42	-->	Excureo (~c@68-116-31-34.static.yakm.wa.charter.com) has joined #scala
2013-05-09 23:59:19	<--	pmenon (~pmenon@75.98.196.98) has quit (Ping timeout: 256 seconds)
2013-05-09 23:59:36	<--	Apocalisp (~textual@173-14-185-169-NewEngland.hfc.comcastbusiness.net) has quit (Quit: Computer has gone to sleep.)
2013-05-10 00:00:12	qu1j0t3	:)
2013-05-10 00:01:10	<--	saml (~sam@adfb12c6.cst.lightpath.net) has quit (Quit: Leaving)
2013-05-10 00:03:53	<--	paddymahoney (~patrick@24.137.221.230) has quit (Ping timeout: 245 seconds)
2013-05-10 00:04:05	<--	zuzkins (~zuzkins@191.211.broadband3.iol.cz) has quit (Remote host closed the connection)
2013-05-10 00:04:09	tpolecat	cake tutorial is the new monad tutorial
2013-05-10 00:04:12	tpolecat	only longer
2013-05-10 00:04:39	qu1j0t3	separate three eggs 
2013-05-10 00:04:50	<--	io2 (~io2@unaffiliated/irrequietus) has quit
2013-05-10 00:05:27	<--	miclorb (~miclorb@ppp121-44-136-248.lns20.syd7.internode.on.net) has quit (Remote host closed the connection)
2013-05-10 00:06:15	tpolecat	whenever i look at old code i wrote, i realize what an idiot i used to be
2013-05-10 00:06:29	tpolecat	these days i'm finding that "old" is often just a matter of a few days
2013-05-10 00:06:59	-->	trepidaciousMBR (~trepidaci@217.155.204.2) has joined #scala
2013-05-10 00:07:12	<--	MarkMenard (~mark@rrcs-69-193-10-226.nys.biz.rr.com) has quit (Quit: MarkMenard)
2013-05-10 00:07:38	evanmeagher	tpolecat: at least that means you're improving :)
2013-05-10 00:08:19	<--	imeredith (~imeredith@192.194.69.111.dynamic.snap.net.nz) has quit (Read error: Connection reset by peer)
2013-05-10 00:08:29	tpolecat	yep
2013-05-10 00:08:51	-->	Agro (~Agro@108-79-20-223.lightspeed.hstntx.sbcglobal.net) has joined #scala
2013-05-10 00:08:54	-->	imeredith (~imeredith@192.194.69.111.dynamic.snap.net.nz) has joined #scala
2013-05-10 00:09:14	qu1j0t3	or.... your personality is mutating
2013-05-10 00:09:23	-->	Amanas (~Amanas@c-24-128-204-226.hsd1.ma.comcast.net) has joined #scala
2013-05-10 00:10:28	tpolecat	yes, yes. all of the above
2013-05-10 00:10:33	tpolecat	it's a rich tapestry of confusion
2013-05-10 00:10:42	qu1j0t3	:-)
2013-05-10 00:10:53	-->	OlegYch1 (~OlegYch@178.127.68.58) has joined #scala
2013-05-10 00:10:57	qu1j0t3	A coruscating cataract of confusion
2013-05-10 00:11:06	<--	imeredith (~imeredith@192.194.69.111.dynamic.snap.net.nz) has quit (Read error: Connection reset by peer)
2013-05-10 00:11:13	qu1j0t3	no, that woudl be Reddit.
2013-05-10 00:11:14	qu1j0t3	never mind.
2013-05-10 00:11:17	<--	RSchulzB (~Adium@67.218.117.3) has quit (Quit: Leaving.)
2013-05-10 00:12:03	datura	tpolecat: start worrying when that doesn't happen any more, and code 6 month old is "not too bad"...
2013-05-10 00:12:08	datura	months
2013-05-10 00:12:13	<--	milessabin (~miles@private.milessabin.com) has quit (Ping timeout: 245 seconds)
2013-05-10 00:12:20	runT1ME	i dunno, in some ways, ever since I tried doing things the 'ScalaZ' way, I'm looking back at my code thinking 'wow this DSL really is fairly flexible'. 
2013-05-10 00:12:26	runT1ME	where as befor eI'd write code and get angry later
2013-05-10 00:12:44	reactormonk	how exactly do you flatmap on an IO monad?
2013-05-10 00:12:48	<--	dacc_ (~dacc@c-24-17-231-116.hsd1.wa.comcast.net) has quit (Ping timeout: 276 seconds)
2013-05-10 00:12:59	qu1j0t3	reactormonk: precisely the same way you do with any other monad
2013-05-10 00:13:14	<--	tibbe (tibbe@nat/google/x-rpcfroyjcbaflhjv) has quit (Quit: tibbe)
2013-05-10 00:13:31	runT1ME	Monad is a typeclass, yeah. doesn't matter what's under the hood. Unless you're asking how you'd implement it?
2013-05-10 00:13:32	reactormonk	hm
2013-05-10 00:13:34	<--	OlegYch (~OlegYch@178.127.68.58) has quit (Ping timeout: 276 seconds)
2013-05-10 00:13:46	tpolecat	! import scalaz.effect._
2013-05-10 00:13:47	multibot_	 import scalaz.effect._
2013-05-10 00:13:50	tpolecat	! import IO._
2013-05-10 00:13:50	multibot_	 import IO._
2013-05-10 00:13:59	-->	imeredith (~imeredith@111.69.194.192) has joined #scala
2013-05-10 00:14:06	SethTisue	I often use breaking stuff up into cake traits as an intermediate stage in breaking up a class that's gotten too huge. but I tend to feel like I'm not done until I've gone on and made it use composition instead of inheritance
2013-05-10 00:14:08	tpolecat	! IO("foo") >>= putStrLn
2013-05-10 00:14:08	multibot_	 scalaz.effect.IO[Unit] = scalaz.effect.IOFunctions$$anon$5@702082
2013-05-10 00:14:20	tpolecat	! val a = IO("foo") >>= putStrLn
2013-05-10 00:14:20	multibot_	 a: scalaz.effect.IO[Unit] = scalaz.effect.IOFunctions$$anon$5@5c524f
2013-05-10 00:14:25	tpolecat	! a.unsafePerformIO
2013-05-10 00:14:25	multibot_	 foo
2013-05-10 00:14:34	<--	kobain (~kobian@unaffiliated/kobain) has quit (Quit: l'unica verità.. è la morte stessa!)
2013-05-10 00:14:53	-->	kobain (~kobian@unaffiliated/kobain) has joined #scala
2013-05-10 00:14:59	pdxleif	! IO("foo") flatMap putStrLn
2013-05-10 00:15:00	multibot_	 scalaz.effect.IO[Unit] = scalaz.effect.IOFunctions$$anon$5@f0fe00
2013-05-10 00:15:03	<--	runT1ME (~vmarquez@wsip-98-189-26-19.oc.oc.cox.net) has quit (Quit: runT1ME)
2013-05-10 00:15:14	datura	SethTisue: that's why traits have originally been invented i think - but the way of using the cake pattern for modules is something very different.
2013-05-10 00:15:14	tpolecat	yes thanks. >>= is flatMap
2013-05-10 00:15:29	pdxleif	! IO("foo") flatMap putStrLn unsafePerformIO
2013-05-10 00:15:29	multibot_	 foo
2013-05-10 00:15:34	-->	runT1ME (~vmarquez@wsip-98-189-26-19.oc.oc.cox.net) has joined #scala
2013-05-10 00:15:36	-->	lcfrs (~lcfrs@8.25.197.24) has joined #scala
2013-05-10 00:15:58	pdxleif	Wait a sec - this is just haskell implemented in scala
2013-05-10 00:16:01	qu1j0t3	lol
2013-05-10 00:16:10	qu1j0t3	i'm glad you're joking
2013-05-10 00:16:32	tpolecat	! val a = putStrLn("foo"); val b = a >> a >> a
2013-05-10 00:16:32	multibot_	 a: scalaz.effect.IO[Unit] = scalaz.effect.IOFunctions$$anon$5@1e41c9b
2013-05-10 00:16:33	multibot_	 b: scalaz.effect.IO[Unit] = scalaz.effect.IOFunctions$$anon$5@1121892
2013-05-10 00:16:39	tpolecat	! b.unsafePerformIO
2013-05-10 00:16:39	multibot_	 foo
2013-05-10 00:16:40	multibot_	 foo
2013-05-10 00:16:41	multibot_	 foo
2013-05-10 00:16:46	tpolecat	love it
2013-05-10 00:16:56	qu1j0t3	! a == b
2013-05-10 00:16:57	multibot_	 Boolean = false
2013-05-10 00:19:09	-->	RSchulzB (~Adium@67.218.117.3) has joined #scala
2013-05-10 00:20:10	-->	adaro_ (~jkuperus@53518F8B.cm-6-2c.dynamic.ziggo.nl) has joined #scala
2013-05-10 00:22:00	<--	ramses_ (~ramses@cl-1301.bru-01.be.sixxs.net) has quit (Ping timeout: 256 seconds)
2013-05-10 00:22:00	<--	joev (~joev@pdpc/supporter/active/joev) has quit (Ping timeout: 252 seconds)
2013-05-10 00:23:07	-->	asQuirreL (~asQuirreL@oriel-student-nat.oriel.ox.ac.uk) has joined #scala
2013-05-10 00:23:16	<--	curtosis (~curtosis@c-69-143-218-129.hsd1.md.comcast.net) has quit (Quit: Textual IRC Client: http://www.textualapp.com/)
2013-05-10 00:23:28	<--	taylr (~taylr@static-96-239-100-47.nycmny.fios.verizon.net) has quit (Remote host closed the connection)
2013-05-10 00:23:41	-->	OlegYch (~OlegYch@178.127.68.58) has joined #scala
2013-05-10 00:24:06	<--	ajhager (~ajhager@108-71-214-22.lightspeed.iplsin.sbcglobal.net) has quit (Ping timeout: 264 seconds)
2013-05-10 00:24:14	<--	enebo (~enebo@c-75-73-8-169.hsd1.mn.comcast.net) has quit (Quit: enebo)
2013-05-10 00:24:17	-->	sturner (~steve@71-211-144-60.hlrn.qwest.net) has joined #scala
2013-05-10 00:24:45	<--	sturner (~steve@71-211-144-60.hlrn.qwest.net) has quit (Client Quit)
2013-05-10 00:25:06	-->	sturner (~steve@71-211-144-60.hlrn.qwest.net) has joined #scala
2013-05-10 00:25:24	<--	OlegYch1 (~OlegYch@178.127.68.58) has quit (Ping timeout: 252 seconds)
2013-05-10 00:27:38	<--	oncenull (~oncenull@200.69.203.221) has quit (Remote host closed the connection)
2013-05-10 00:29:07	--	pdxleif is now known as pdxleif_away
2013-05-10 00:30:36	-->	danrabinowitz (~danrabino@184.106.149.15) has joined #scala
2013-05-10 00:33:04	<--	BeardedCoder (~user@of1-nat2.aus1.rackspace.com) has quit (Ping timeout: 276 seconds)
2013-05-10 00:33:15	<--	Heero (~Heero@unaffiliated/heero) has quit (Ping timeout: 260 seconds)
2013-05-10 00:34:02	<--	gphat (~gphat@99-8-185-28.lightspeed.snfcca.sbcglobal.net) has quit (Remote host closed the connection)
2013-05-10 00:35:07	-->	dolio (~dolio@c-174-63-84-118.hsd1.ma.comcast.net) has joined #scala
2013-05-10 00:35:18	<--	OlegYch (~OlegYch@178.127.68.58) has quit
2013-05-10 00:35:33	-->	OlegYch (~OlegYch@178.127.68.58) has joined #scala
2013-05-10 00:35:44	<--	atoll (~atoll@84-74-102-216.dclient.hispeed.ch) has quit (Ping timeout: 256 seconds)
2013-05-10 00:36:18	<--	thereisnospoon (~thereisno@113-61-86-28.static.qld.dsl.net.au) has quit (Ping timeout: 252 seconds)
2013-05-10 00:36:45	-->	derek_c (~derekchia@nat-128-84-124-0-911.cit.cornell.edu) has joined #scala
2013-05-10 00:38:09	<--	divoxx (~divoxx@64.124.27.219) has quit (Quit: Leaving...)
2013-05-10 00:38:20	--	mrlunchbot is now known as mrrobbot
2013-05-10 00:38:49	-->	jcazevedo (~jcazevedo@bl18-118-29.dsl.telepac.pt) has joined #scala
2013-05-10 00:39:11	-->	atoll (~atoll@84-74-102-216.dclient.hispeed.ch) has joined #scala
2013-05-10 00:39:24	-->	LazDude2012 (lazdude201@minecraft.is.awesome.but.adfly-is-la.me) has joined #scala
2013-05-10 00:39:39	-->	ajhager (~ajhager@108-71-214-22.lightspeed.iplsin.sbcglobal.net) has joined #scala
2013-05-10 00:39:44	LazDude2012	lol Dashkal, I guessed I'd find you here :D
2013-05-10 00:39:50	-->	OlegYch5 (~OlegYch@178.127.68.58) has joined #scala
2013-05-10 00:41:47	<--	OlegYch (~OlegYch@178.127.68.58) has quit (Ping timeout: 256 seconds)
2013-05-10 00:42:02	<--	RedPunch (~RedPunch@159.140.254.103) has quit (Remote host closed the connection)
2013-05-10 00:42:04	<--	LennyLinux (~LennyLinu@151.64.1.88) has quit (Remote host closed the connection)
2013-05-10 00:42:05	-->	soc (~soc@HSI-KBW-5-56-204-25.hsi17.kabel-badenwuerttemberg.de) has joined #scala
2013-05-10 00:42:19	<--	RSchulzB (~Adium@67.218.117.3) has quit (Quit: Leaving.)
2013-05-10 00:44:17	-->	RSchulzB (~Adium@67.218.117.3) has joined #scala
2013-05-10 00:46:00	<--	adaro_ (~jkuperus@53518F8B.cm-6-2c.dynamic.ziggo.nl) has quit (Quit: adaro_)
2013-05-10 00:46:29	qu1j0t3	spies are everywhere
2013-05-10 00:47:41	<--	whaley (~whaley@108-86-97-217.lightspeed.jcvlfl.sbcglobal.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2013-05-10 00:48:33	<--	nuttycom1 (~Adium@70-91-169-68-BusName-Colorado.hfc.comcastbusiness.net) has quit (Quit: Leaving.)
2013-05-10 00:48:48	<--	derek_c (~derekchia@nat-128-84-124-0-911.cit.cornell.edu) has quit (Quit: leaving)
2013-05-10 00:51:40	tpolecat	is there syntax to lift a conditional into validation? i.e.,  if (test) a.success else b.fail ?
2013-05-10 00:53:14	-->	francis_wolke (45b5caf6@gateway/web/cgi-irc/kiwiirc.com/ip.69.181.202.246) has joined #scala
2013-05-10 00:54:29	<--	OlegYch5 (~OlegYch@178.127.68.58) has quit (Ping timeout: 248 seconds)
2013-05-10 00:56:04	squeeks	assert?
2013-05-10 00:56:45	-->	OlegYch (~OlegYch@178.127.68.58) has joined #scala
2013-05-10 00:56:59	evanmeagher	tpolecat: choose your poison: http://stackoverflow.com/questions/8002835/what-is-the-meaning-of-an-assumption-in-scala-compared-to-an-assertion
2013-05-10 00:57:26	tpolecat	this isn't what i was asking about, but thanks. i asked on the wrong channel ;-)
2013-05-10 00:58:28	oscarvarto	Does anyone knows if Scala IDE works with scala bundles (osgi)? Last time I tried I had this issue: https://www.assembla.com/spaces/scala-ide/tickets/1919#/activity/ticket:
2013-05-10 00:59:18	<--	h31 (~artem@2002:b035:e00d::2) has quit (Quit: Konversation terminated!)
2013-05-10 01:00:08	<--	asQuirreL (~asQuirreL@oriel-student-nat.oriel.ox.ac.uk) has quit (Quit: Computer has gone to sleep.)
2013-05-10 01:02:55	-->	miclorb (~miclorb@ppp121-44-136-248.lns20.syd7.internode.on.net) has joined #scala
2013-05-10 01:05:24	<--	sleepynate (~sleepynat@199.16.190.194) has quit (Remote host closed the connection)
2013-05-10 01:06:42	--	wajiii is now known as wajiii-afk
2013-05-10 01:06:46	-->	divoxx (~divoxx@64.124.27.219) has joined #scala
2013-05-10 01:06:52	<--	francis_wolke (45b5caf6@gateway/web/cgi-irc/kiwiirc.com/ip.69.181.202.246) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2013-05-10 01:09:45	<--	RaceCondition (~erik@82.131.19.23.cable.starman.ee) has quit (Quit: RaceCondition)
2013-05-10 01:09:51	-->	OlegYch4 (~OlegYch@178.127.68.58) has joined #scala
2013-05-10 01:09:53	<--	MisterD (MisterD@port-92-205-31-16.dynamic.qsc.de) has quit (Quit: Read Error: 1337 (to leet to stay on server))
2013-05-10 01:10:59	-->	derek_c (~derekchia@nat-128-84-124-0-911.cit.cornell.edu) has joined #scala
2013-05-10 01:11:41	-->	thereisnospoon (~thereisno@113-61-86-28.static.qld.dsl.net.au) has joined #scala
2013-05-10 01:12:20	-->	whaley (~whaley@108-86-97-217.lightspeed.jcvlfl.sbcglobal.net) has joined #scala
2013-05-10 01:13:09	<--	OlegYch (~OlegYch@178.127.68.58) has quit (Ping timeout: 248 seconds)
2013-05-10 01:13:20	-->	jackcvie` (~user@24.149.8.212) has joined #scala
2013-05-10 01:13:28	<--	jackcviers (~user@24.149.8.212) has quit (Read error: Connection reset by peer)
2013-05-10 01:14:31	-->	iraklis (~Thunderbi@athedsl-4503310.home.otenet.gr) has joined #scala
2013-05-10 01:15:26	-->	SingingBoyo (~brandon@d154-5-190-48.bchsia.telus.net) has joined #scala
2013-05-10 01:15:45	iraklis	hi all!! i might ask something stupid but in scala 2.10.1 i cannot import scala.concurrent.util.duration._ what am i doing wrong?? Thanks in advance!
2013-05-10 01:16:09	<--	soc (~soc@HSI-KBW-5-56-204-25.hsi17.kabel-badenwuerttemberg.de) has quit (Remote host closed the connection)
2013-05-10 01:16:17	evanmeagher	new language feature: lackadaisical val
2013-05-10 01:16:36	-->	soc (~soc@hsi-kbw-5-56-204-25.hsi17.kabel-badenwuerttemberg.de) has joined #scala
2013-05-10 01:16:57	<--	jkarlsson (~jonas@70-100-130-14.dsl1-field.roch.ny.frontiernet.net) has quit (Quit: jkarlsson)
2013-05-10 01:17:44	soc	iraklis: do you mean import scala.concurrent.duration._?
2013-05-10 01:17:54	soc	scala.concurrent.util.duration._ does not exist
2013-05-10 01:18:37	iraklis	maybe a book mistake.. thank a lot..
2013-05-10 01:19:00	<--	djspiewak (~djspiewak@50-194-128-249-static.hfc.comcastbusiness.net) has quit (Quit: djspiewak)
2013-05-10 01:19:13	-->	stephenjudkins (~textual@c-98-246-155-212.hsd1.or.comcast.net) has joined #scala
2013-05-10 01:19:40	<--	Osho (~jevan@169.237.131.44) has quit (Quit: Leaving.)
2013-05-10 01:20:25	soc	which book?
2013-05-10 01:20:56	<--	infynyxx (~infynyxx@208.82.12.18) has quit (Remote host closed the connection)
2013-05-10 01:21:49	-->	OlegYch (~OlegYch@178.127.68.58) has joined #scala
2013-05-10 01:22:37	<--	jjenkins (~Adium@rrcs-67-78-69-4.sw.biz.rr.com) has quit (Quit: Leaving.)
2013-05-10 01:22:38	tpolecat	it's in scala.concurrent.duration 
2013-05-10 01:22:46	<--	joneshf-laptop (~joneshf@mail.concordusapps.com) has quit (Ping timeout: 256 seconds)
2013-05-10 01:25:34	<--	OlegYch4 (~OlegYch@178.127.68.58) has quit (Ping timeout: 268 seconds)
2013-05-10 01:26:31	<--	hahuang65 (~hahuang65@208.65.181.227.static.etheric.net) has quit (Quit: Computer has gone to sleep.)
2013-05-10 01:30:36	-->	_veer (~veer@pool-71-100-236-211.tampfl.fios.verizon.net) has joined #scala
2013-05-10 01:30:36	<--	_veer (~veer@pool-71-100-236-211.tampfl.fios.verizon.net) has quit (Changing host)
2013-05-10 01:30:36	-->	_veer (~veer@unaffiliated/lolsuper-/x-9881387) has joined #scala
2013-05-10 01:32:06	-->	bitonic (~user@176.27.229.121) has joined #scala
2013-05-10 01:32:50	LazDude2012	I'll ask you chaps the same thing I asked the F# fellows. Do you think "programming" will eventually come to mean "functional programming" by default, kinda like today it's generally assumed to be OOP?
2013-05-10 01:32:53	<--	colock (~colock@unaffiliated/colock) has quit (Ping timeout: 255 seconds)
2013-05-10 01:33:36	tpolecat	ha. today it's generally assumed to be javascript
2013-05-10 01:33:40	moops	^
2013-05-10 01:33:44	tpolecat	it's a messed-up world, man
2013-05-10 01:33:58	<--	OlegYch (~OlegYch@178.127.68.58) has quit (Read error: Connection reset by peer)
2013-05-10 01:34:00	LazDude2012	that's not real programming >.<
2013-05-10 01:34:07	moops	that or ruby
2013-05-10 01:34:16	-->	OlegYch (~OlegYch@178.127.68.58) has joined #scala
2013-05-10 01:34:19	LazDude2012	but the question still stands. Do you think functional is the future?
2013-05-10 01:34:23	<--	befuddled (~brian@cpc2-aztw24-2-0-cust618.aztw.cable.virginmedia.com) has quit (Read error: Connection reset by peer)
2013-05-10 01:34:39	<--	aztek (~aztek@128-69-70-152.broadband.corbina.ru) has quit (Remote host closed the connection)
2013-05-10 01:35:14	--	wajiii-afk is now known as wajiii
2013-05-10 01:35:42	-->	fayimora (~fayimora@5.151.0.1) has joined #scala
2013-05-10 01:35:43	-->	arn (~arn@192.210.214.195) has joined #scala
2013-05-10 01:35:43	--	arn is now known as shrewdu
2013-05-10 01:35:54	runT1ME	isn't that a bit like asking the x86 ASM guys if being 'close to the metal is important'? :-)
2013-05-10 01:35:57	runT1ME	i'm sure you can guess the answer....
2013-05-10 01:36:10	stephenjudkins	LazDude2012: i do not believe so
2013-05-10 01:36:10	<--	RSchulzB (~Adium@67.218.117.3) has quit (Quit: Leaving.)
2013-05-10 01:36:26	stephenjudkins	not as FP currently is 
2013-05-10 01:36:43	moops	drag n drop programming is more likely the future than FP
2013-05-10 01:36:53	stephenjudkins	people confuse liking it/being productive with it themselves
2013-05-10 01:37:05	stephenjudkins	with it being inevitable or even desirable that it will be adopted
2013-05-10 01:37:15	LazDude2012	would you say that a hybrid model, such as C# 3.0+, is more likely?
2013-05-10 01:37:25	<--	bblfish (~bblfish@AAubervilliers-651-1-306-218.w83-114.abo.wanadoo.fr) has quit (Ping timeout: 276 seconds)
2013-05-10 01:37:31	stephenjudkins	LazDude2012: this is my uninformed speculation
2013-05-10 01:37:52	LazDude2012	no dude, no problem. That's exactly the stuff I'm looking for
2013-05-10 01:37:58	LazDude2012	opinion, speculation, etc
2013-05-10 01:38:09	runT1ME	i'd say Scala is a hybrid model
2013-05-10 01:38:10	stephenjudkins	but I think containerization/virtualization/"sandboxing" will intersect with "FP" in a way that will benefit everyone
2013-05-10 01:38:25	-->	RSchulzB (~Adium@67.218.117.3) has joined #scala
2013-05-10 01:39:28	stephenjudkins	pure FP gives you a strong set of guarantees about code. basically, you can have your compiler tell you basically everything about a program except whether it will halt
2013-05-10 01:39:55	-->	capotej (~jcapote@209.141.62.251) has joined #scala
2013-05-10 01:40:00	stephenjudkins	JS sandboxing or Xen give you a much weaker set of guarantees, but for a much broader class of code
2013-05-10 01:40:10	runT1ME	Yes.  It forces you to make certain design decisions up front that other languages let you put off.  Anything that helps fight technical debt is a net win
2013-05-10 01:40:10	<--	jackcvie` (~user@24.149.8.212) has quit (Read error: Connection reset by peer)
2013-05-10 01:40:28	LazDude2012	Absolutely true. Disclaimer here, I'm not a huge FP fan. I like my OOP and imperative style. I just want to get a general feel of what people think on the matter.
2013-05-10 01:40:57	runT1ME	Variance is a good example. if you have covariant mutable collections, you have a problem, you just don't know it yet
2013-05-10 01:41:07	--	casualjim is now known as casualjim_zzz
2013-05-10 01:41:40	stephenjudkins	behold: purely functional C http://zerovm.org/wiki/The_Cloud_Hypervisor
2013-05-10 01:42:02	<--	hdoshi_ (~hdoshi@66.54.159.166) has quit (Ping timeout: 256 seconds)
2013-05-10 01:42:03	tpolecat	right. assuming you can even define what oo means, it's probably not at odds with fp; you can write functional code in any language
2013-05-10 01:42:08	stephenjudkins	or purely functional x64 ASM. whatever you want.
2013-05-10 01:42:30	-->	hahuang65 (~hahuang65@208.65.181.227.static.etheric.net) has joined #scala
2013-05-10 01:42:54	stephenjudkins	it's just that the "function" is a reader/writer monad that deals with streams of bytes.
2013-05-10 01:43:04	<--	hahuang65 (~hahuang65@208.65.181.227.static.etheric.net) has quit (Client Quit)
2013-05-10 01:43:26	LazDude2012	tpolecat: is the "OO doesn't exist" attitude common among FP folks? So far, I've seen it from you and Dashkal
2013-05-10 01:43:50	moops	compared to FP, no one can seem to agree what OO is and isnt
2013-05-10 01:43:52	tpolecat	no, just that it doesn't have an easy definition that people agree on
2013-05-10 01:44:26	<--	[mth] (~mth@110.151.64.18) has quit (Ping timeout: 256 seconds)
2013-05-10 01:44:30	<--	bitonic (~user@176.27.229.121) has quit (Ping timeout: 264 seconds)
2013-05-10 01:44:32	tpolecat	functional programming is programming with functions (in a mathematical sense), period. all the accoutrements you associate with "functional" languages are consequences of that
2013-05-10 01:44:38	tpolecat	OO is more of a grab-bag
2013-05-10 01:45:39	moops	haha what?:
2013-05-10 01:45:49	moops	found: Unit => Unit
2013-05-10 01:45:49	moops	required: () => Unit
2013-05-10 01:45:55	stephenjudkins	tpolecat: i think it's defensible to conflate "FP" with all the patterns and abstractions FP programmers have built upon it over the past couple decades
2013-05-10 01:46:28	qu1j0t3	heh
2013-05-10 01:46:49	qu1j0t3	moops: there is a difference
2013-05-10 01:46:54	moops	i still do not understand why you need to write () => Unit instead of Unit => Unit
2013-05-10 01:47:02	qu1j0t3	moops: the first is an empty parameter list
2013-05-10 01:47:13	runT1ME	I think when people gripe about OO, they are upset about encapsulation of mutable state along with issues arising from Inheritance as a model for code reuse.
2013-05-10 01:47:15	qu1j0t3	moops: while Unit => Unit is a single value => a single value
2013-05-10 01:47:23	copumpkin	i.e., the same exact thing
2013-05-10 01:47:25	qu1j0t3	runT1ME: yes, and...
2013-05-10 01:47:33	qu1j0t3	copumpkin: well, to scala it's not?
2013-05-10 01:47:37	tpolecat	stephenjudkins: i kind of agree, it just quickly gets fuzzy (like OO) so i like to go back to the base case
2013-05-10 01:47:43	copumpkin	yeah, but they're isomorphic and should be the same :P
2013-05-10 01:47:51	runT1ME	so I don't consider anything that has 'objects' neccessarily OO. IMO
2013-05-10 01:47:52	copumpkin	that's just scala revealing implementation details
2013-05-10 01:47:52	qu1j0t3	copumpkin: okay but let's help moops first.
2013-05-10 01:47:54	copumpkin	:P
2013-05-10 01:48:18	qu1j0t3	copumpkin: arises from the parameters versus tuples wart, i guess.
2013-05-10 01:48:23	copumpkin	yup
2013-05-10 01:48:34	qu1j0t3	moops: are you clear? Scala considers these different things.
2013-05-10 01:48:36	-->	jeddhaberstro (~jeddhaber@user-0cemip4.cable.mindspring.com) has joined #scala
2013-05-10 01:48:43	<--	jamesiry (~Adium@c-24-7-67-118.hsd1.ca.comcast.net) has quit (Quit: Leaving.)
2013-05-10 01:48:44	datura	LazDude2012: i think it's inevitable we'll get _something_ where more properties of a program can be proven
2013-05-10 01:48:49	moops	i guess, it still seems so silly
2013-05-10 01:48:57	stephenjudkins	LazDude2012: what runT1ME says about OO. 
2013-05-10 01:49:08	<--	Nekuromento (~Nekuromen@91.187.26.197) has quit (Quit: Nekuromento)
2013-05-10 01:49:12	qu1j0t3	! val f = () => ()
2013-05-10 01:49:12	multibot_	 f: () => Unit = <function0>
2013-05-10 01:49:13	datura	automatically, i mean
2013-05-10 01:49:14	tpolecat	runT1ME: right, that's what i mean; we just have to agree on what we're talking about, which is nontrivial
2013-05-10 01:49:18	<--	soc (~soc@hsi-kbw-5-56-204-25.hsi17.kabel-badenwuerttemberg.de) has quit (Quit: Leaving.)
2013-05-10 01:49:22	qu1j0t3	! val f = (a:Unit) => ()
2013-05-10 01:49:22	multibot_	 f: Unit => Unit = <function1>
2013-05-10 01:49:32	stephenjudkins	why i'm an FP proponent is the incredible the incredible amount of  complexity that mutable state can create without the programmer really knowing
2013-05-10 01:49:45	qu1j0t3	moops: right, mathematically it is silly.
2013-05-10 01:49:57	stephenjudkins	LazDude2012: read http://www.altdevblogaday.com/2012/04/26/functional-programming-in-c/
2013-05-10 01:49:59	tpolecat	datura: you would think so, but everyone is rushing to rewrite world+dog in javascript
2013-05-10 01:50:02	qu1j0t3	stephenjudkins: you accidentally an accidentally
2013-05-10 01:50:09	qu1j0t3	tpolecat: ikr
2013-05-10 01:50:13	miasma	datura: some things don't even need to be proved. FP programs just tend to work better. :F one example is scala-swing. i find it real odd how the init order of some things changes semantics
2013-05-10 01:50:21	<--	dolio (~dolio@c-174-63-84-118.hsd1.ma.comcast.net) has quit (Quit: Leaving)
2013-05-10 01:50:33	tpolecat	which isn't only an untyped language, but a shitty untyped language. you can't prove anything about a js program other than it probably parses ok
2013-05-10 01:50:36	datura	tpolecat: no. everybody is rushing to use JS as a low-level language in the backend of a compiler :)
2013-05-10 01:50:41	qu1j0t3	tpolecat: even then...
2013-05-10 01:50:50	-->	dankest (~dankest@wsip-70-182-130-90.sb.sd.cox.net) has joined #scala
2013-05-10 01:50:52	qu1j0t3	datura: the smarter ones are :)
2013-05-10 01:50:59	-->	m-jack (~chatzilla@cmr-208-97-104-82.cr.net.cable.rogers.com) has joined #scala
2013-05-10 01:51:05	qu1j0t3	datura: the redditherd is falling in love with JS as a language, which is remarkably obtuse
2013-05-10 01:51:14	qu1j0t3	...even for them
2013-05-10 01:51:17	moops	make asm.js so you can use nice languages instead of javascript. nice languages like C++
2013-05-10 01:51:30	qu1j0t3	moops: emscripten 
2013-05-10 01:51:43	qu1j0t3	moops: which will take advantage of asm.js
2013-05-10 01:51:44	moops	oh neat
2013-05-10 01:51:53	miasma	the js backend will give them dynamics
2013-05-10 01:51:58	datura	moops: they compile video codecs to JS nowadays...
2013-05-10 01:52:06	datura	and ego-shooters
2013-05-10 01:52:10	qu1j0t3	harhar
2013-05-10 01:52:15	miasma	datura: got any link to video codec in js?
2013-05-10 01:52:35	qu1j0t3	yeah there was a big announcement this month
2013-05-10 01:52:46	<--	sturner (~steve@71-211-144-60.hlrn.qwest.net) has quit (Quit: sturner)
2013-05-10 01:52:53	 *	qu1j0t3 rummages around
2013-05-10 01:53:01	miasma	found this http://badassjs.com/post/12035631618/broadway-an-h-264-decoder-in-javascript-running-at
2013-05-10 01:53:01	datura	miasma: https://brendaneich.com/2013/05/today-i-saw-the-future/
2013-05-10 01:53:19	miasma	wtf http://media.tumblr.com/tumblr_lts5qtAQJ01qbis4g.png
2013-05-10 01:53:23	moops	i was surprised at how fast asm.js was
2013-05-10 01:53:38	qu1j0t3	moops: it gets rid of some of the burden of dynamic typing
2013-05-10 01:53:49	qu1j0t3	moops: imagine how fast a static language could be!    *koff* haskell
2013-05-10 01:53:53	-->	nocturne7 (~havoc@c-76-103-150-97.hsd1.ca.comcast.net) has joined #scala
2013-05-10 01:54:01	datura	moops: why? i mean, even java bytecode can be compiled to pretty efficient machine code...
2013-05-10 01:54:15	datura	and that's a pretty dynamic language
2013-05-10 01:54:19	-->	predator117 (~predator1@p5080468F.dip0.t-ipconnect.de) has joined #scala
2013-05-10 01:54:29	moops	haha
2013-05-10 01:54:48	evanmeagher	http://1.bp.blogspot.com/-rDr1xkhB8Yc/T0KXD-II05I/AAAAAAAAA1M/lmu4ZwELyY0/s1600/KeepUsingThatWord.jpg
2013-05-10 01:54:49	miasma	asm.js is pretty much like C
2013-05-10 01:54:56	miasma	with even less features
2013-05-10 01:55:04	qu1j0t3	right, i'm glad i won't be writing it by hand. ever.
2013-05-10 01:55:16	<--	SeriousWorm (~sworm@bnet2731.x3d.carnet.hr) has quit (Ping timeout: 272 seconds)
2013-05-10 01:56:30	LazDude2012	see, the thing is, stevenjudkins, I *like* mutable state. But maybe that's just me. I'm fine with it not being the default, but I like to have mutable state.
2013-05-10 01:56:33	datura	miasma: gotta love the |0 to make sure something is treated as an int...
2013-05-10 01:56:54	datura	LazDude2012: we might get that under control in a different way - time will tell.
2013-05-10 01:57:05	-->	asrail (~quassel@177.193.199.186) has joined #scala
2013-05-10 01:57:07	qu1j0t3	LazDude2012: it gets old
2013-05-10 01:57:07	datura	but to be honest, i can live without much mutable state quite well.
2013-05-10 01:57:13	tpolecat	as you spend more time doing FP you realize you don't need it
2013-05-10 01:57:17	qu1j0t3	+1
2013-05-10 01:57:23	qu1j0t3	or want it
2013-05-10 01:57:28	datura	+1
2013-05-10 01:57:43	<--	predator217 (~predator1@p50803773.dip0.t-ipconnect.de) has quit (Ping timeout: 260 seconds)
2013-05-10 01:58:47	LazDude2012	I think that programming in a semi-functional style is going to be the future. Ex: lambdas and LINQ in C#, Scala itself, which is a hybrid OO/FP language.
2013-05-10 01:59:00	qu1j0t3	for some, yes.
2013-05-10 01:59:12	qu1j0t3	it would be something of an improvement over what we have now.
2013-05-10 01:59:33	LazDude2012	The right tool for the right job, really. FP isn't always going to be the right tool, nor is traditional imperative OO.
2013-05-10 01:59:35	miasma	LazDude2012: compiling everything to javascript will  be the future
2013-05-10 01:59:36	qu1j0t3	heh.
2013-05-10 01:59:38	moops	i think the number of "functional programmers" will increase slower than the number of ruby/javascript/drag n drop programmers
2013-05-10 01:59:44	squeeks	Apparently there is a good use case for factory of factory style OO. Anyone know one?
2013-05-10 02:00:32	stephenjudkins	LazDude2012: currently they are fundamentally incompatible
2013-05-10 02:01:07	qu1j0t3	moops: verymuch so, because it requires learning
2013-05-10 02:01:08	<--	bartt1 (~Adium@8.25.197.25) has quit (Quit: Leaving.)
2013-05-10 02:01:59	datura	LazDude2012: first, OO is a myth. nobody knows what that term actually means.
2013-05-10 02:02:14	tpolecat	(we have covered this)
2013-05-10 02:02:17	squeeks	ooh ooh ooh can I use a fallacy too?
2013-05-10 02:02:46	datura	second: with a little bit of syntactic sugar you can program in imperative style in FP-languages quite well.
2013-05-10 02:03:00	-->	OlegYch6 (~OlegYch@178.127.68.58) has joined #scala
2013-05-10 02:03:02	datura	some people call haskell the world's finest imperative programming language :)
2013-05-10 02:03:11	<--	OlegYch (~OlegYch@178.127.68.58) has quit (Ping timeout: 268 seconds)
2013-05-10 02:03:17	runT1ME	LazDude2012: mutable state is a concurrency nightmare.  Once you start using a language like scala you start seeing race conditions *everywhere*
2013-05-10 02:03:18	LazDude2012	I'll stick by my guns, as I've had this argument with Dashkal. While there is no formal definition of OOP, and as such, it may not exist in a formal sense, I can certainly tell OO programs apart from non-OO programs, meaning it does exist in some form, in the differences there.
2013-05-10 02:03:33	LazDude2012	Same thing with life.
2013-05-10 02:03:35	 *	qu1j0t3 puts on the airplane dozing goggles
2013-05-10 02:04:00	moops	"i know it when i see it"
2013-05-10 02:04:01	LazDude2012	There's no formal definition of life, however we can tell live things apart from dead things, meaning life exists in that difference.
2013-05-10 02:04:03	moops	best way to define things
2013-05-10 02:04:06	qu1j0t3	LazDude2012: which FP langs do you currently use?
2013-05-10 02:04:12	LazDude2012	F# mostly
2013-05-10 02:04:15	LazDude2012	I like it
2013-05-10 02:04:22	qu1j0t3	and which resources did you use to study FP?
2013-05-10 02:04:25	datura	LazDude2012: i tend to paste this link a lot: http://www.paulgraham.com/reesoo.html
2013-05-10 02:04:30	LazDude2012	F# books :P
2013-05-10 02:04:47	qu1j0t3	LazDude2012: well, FP is a very big and very old (50+ yrs) world.
2013-05-10 02:05:01	LazDude2012	Oh, I'm sure
2013-05-10 02:05:10	LazDude2012	Lisp is functional, by most FP standards
2013-05-10 02:05:13	LazDude2012	and it's quite old
2013-05-10 02:05:19	qu1j0t3	LazDude2012: why is Lisp considered functional?
2013-05-10 02:05:31	 *	tpolecat pulls up a lawn chair.
2013-05-10 02:05:32	qu1j0t3	LazDude2012: and how old would you guess the essentials of Haskell are?
2013-05-10 02:05:38	LazDude2012	first class functions, code as data, terrible syntax, etc :P
2013-05-10 02:05:45	LazDude2012	and old
2013-05-10 02:05:50	 *	squeeks gets popcorn
2013-05-10 02:05:57	qu1j0t3	LazDude2012: are you roughly familiar with lambda calculus?
2013-05-10 02:06:02	 *	datura hands tpolecat a mojito
2013-05-10 02:06:16	LazDude2012	only in terms that explode my head, :P
2013-05-10 02:06:19	qu1j0t3	ok.
2013-05-10 02:06:21	qu1j0t3	i'm done here.
2013-05-10 02:06:25	moops	heh
2013-05-10 02:06:26	qu1j0t3	all yours crowd.
2013-05-10 02:06:41	tpolecat	so, fp is easier in the end. that's why we do it.
2013-05-10 02:06:43	qu1j0t3	LazDude2012: you might want to do some research before setting up a shingle as FP critic.
2013-05-10 02:06:55	tpolecat	it's easier to understand functional programs than non-functional ones.
2013-05-10 02:06:59	<--	fayimora (~fayimora@5.151.0.1) has quit (Ping timeout: 256 seconds)
2013-05-10 02:07:06	<--	stefan-_ (~stefan@swhpet3183.uni-trier.de) has quit (Ping timeout: 256 seconds)
2013-05-10 02:07:13	qu1j0t3	tpolecat: you're only saying that because computer scientists have been saying it for 50 years!
2013-05-10 02:07:16	--	casualjim_zzz is now known as casualjim
2013-05-10 02:07:18	LazDude2012	I'm not necessarily criticising FP
2013-05-10 02:07:18	tpolecat	but there is a learning curve many refuse to climb.
2013-05-10 02:07:20	-->	MachineMuse (~quassel@S01060026f317b950.ed.shawcable.net) has joined #scala
2013-05-10 02:07:24	qu1j0t3	tpolecat: BE ORIGINAL.
2013-05-10 02:07:27	tpolecat	right, i understand
2013-05-10 02:07:29	tpolecat	sorry sorry
2013-05-10 02:07:46	qu1j0t3	tpolecat: invent a shitty language and say "Oh look it can do what lisp does, only the syntax is better"
2013-05-10 02:07:48	tpolecat	so in a reasonable world it would become the norm because it's easier
2013-05-10 02:08:01	runT1ME	why do you think mutable state is 'good'?
2013-05-10 02:08:01	LazDude2012	I'm saying that I think functional and traditional imperative style programming will likely coexist far into the future
2013-05-10 02:08:04	runT1ME	tha'ts what I wanna know
2013-05-10 02:08:07	MachineMuse	beep boop
2013-05-10 02:08:09	qu1j0t3	LazDude2012: yeah, sadly.
2013-05-10 02:08:12	tpolecat	LazDude2012: i think that's true
2013-05-10 02:08:21	LazDude2012	and I think that's a good thing
2013-05-10 02:08:22	MachineMuse	different tools for different fools
2013-05-10 02:08:25	runT1ME	why?
2013-05-10 02:08:26	LazDude2012	^
2013-05-10 02:08:28	MachineMuse	er...uses
2013-05-10 02:08:32	MachineMuse	er...people?
2013-05-10 02:08:32	runT1ME	You haven't answered why mutable state is *good*
2013-05-10 02:08:39	LazDude2012	Good is an opinion
2013-05-10 02:08:44	qu1j0t3	LazDude2012: no.
2013-05-10 02:08:50	qu1j0t3	LazDude2012: this isn't a matter of opinion.
2013-05-10 02:08:55	LazDude2012	Mutable state more closely corresponds to the real world.
2013-05-10 02:08:57	runT1ME	no "Good" is random words if you don't have evidence of something
2013-05-10 02:08:58	qu1j0t3	LazDude2012: it's a very scientific matter-- mathematics, in fact.
2013-05-10 02:09:01	LazDude2012	which is why I like it.
2013-05-10 02:09:08	MachineMuse	i've been told mutation is an optimization, so that's a possible reason I guess?
2013-05-10 02:09:08	qu1j0t3	oh boy
2013-05-10 02:09:19	qu1j0t3	dobblego: the real world is mutable, mate.
2013-05-10 02:09:30	tpolecat	there's a good rich hickey talk on that, actually
2013-05-10 02:09:38	runT1ME	So you think we should program with natural language since it corrosponds better to the real world????
2013-05-10 02:09:39	LazDude2012	I don't buy a new monitor that's turned off; I turn off my existing monitor. ;)
2013-05-10 02:09:45	qu1j0t3	LazDude2012: from time to time we have someone who comes in here claiming reality is mutable therefore I need mutable variables. This is nonsense.
2013-05-10 02:09:46	datura	MachineMuse: the real world is probably heavily optimized ;)
2013-05-10 02:09:50	LazDude2012	runT1ME, not necessarily.
2013-05-10 02:09:59	LazDude2012	But if it helps, then why not?
2013-05-10 02:10:05	qu1j0t3	it hinders.
2013-05-10 02:10:08	runT1ME	how does it *help*???
2013-05-10 02:10:08	qu1j0t3	it hinders viciously.
2013-05-10 02:10:12	runT1ME	^^^^
2013-05-10 02:10:21	<--	DonRichie (~DonRichie@dslb-088-068-231-198.pools.arcor-ip.net) has quit (Read error: Operation timed out)
2013-05-10 02:10:22	LazDude2012	Natural language, though, would be too verbose for actual, serious programming IMAO
2013-05-10 02:10:23	squeeks	nom nom nom
2013-05-10 02:10:24	MachineMuse	we assume it is mutable. last thursdayism suggests it is possible that the world is in fact immutable which means we are doomed to be having this terrible argument at all points in time for eternity!
2013-05-10 02:10:24	moops	i think his name sums it up
2013-05-10 02:10:27	moops	doesnt it
2013-05-10 02:10:28	qu1j0t3	this is a lesson that has been learned time and again, LazDude2012 
2013-05-10 02:10:38	qu1j0t3	mutable. state. is. not. desirable.
2013-05-10 02:10:46	qu1j0t3	or helpful
2013-05-10 02:10:46	squeeks	for. you.
2013-05-10 02:10:49	qu1j0t3	at the moment you think it is.
2013-05-10 02:10:50	-->	DonRichie (~DonRichie@dslb-088-068-255-163.pools.arcor-ip.net) has joined #scala
2013-05-10 02:10:51	LazDude2012	hold on, lemme check something
2013-05-10 02:11:08	RSchulzB	Diagrams are also not a good medium for expressing computer programs.
2013-05-10 02:11:23	MachineMuse	but did you really check it? or are you merely in a state where you believe you have checked it and have knowledge of the outcome
2013-05-10 02:11:52	miasma	LazDude2012: what if the world is a purely functional, infinite data structure
2013-05-10 02:11:53	qu1j0t3	LazDude2012: you should seriously investigate the possibility that mutable state is a problem, not a solution. 
2013-05-10 02:12:17	-->	mmazer (~mmazer@216.191.72.153) has joined #scala
2013-05-10 02:12:31	datura	qu1j0t3: i'm not convinced it is. the problem might be we don't have good tools to help us reason about it.
2013-05-10 02:12:33	LazDude2012	qu1j0t3, that depends on the application, on what you're trying to accomplish
2013-05-10 02:12:34	qu1j0t3	it is perhaps the most fertile source of bugs yet known.
2013-05-10 02:12:44	MachineMuse	ironically, LazDude2012's opinion on this topic had better be mutable otherwise this conversation is pointless!
2013-05-10 02:12:45	qu1j0t3	LazDude2012: to a degree much less than you currently believe.
2013-05-10 02:12:55	qu1j0t3	MachineMuse: history shows, it isn't. yet.
2013-05-10 02:13:08	Dashkal	Nah, we just need a function that takes present LazDude2012, and returns a new one with a slightly adjusted mindset
2013-05-10 02:13:24	datura	MachineMuse: nah... let's just make a new LazDude2012 who has a different opinion :)
2013-05-10 02:13:36	datura	Dashkal: *G*
2013-05-10 02:13:36	qu1j0t3	this isn't a matter of opinion... it falls under a branch of theory called computer science, itself under mathematics.
2013-05-10 02:13:39	LazDude2012	I have an open mind, in fact, I enjoy FP. I just don't think it's the only way.
2013-05-10 02:13:42	MachineMuse	touché
2013-05-10 02:13:47	Arrgh	Lousy Minecrafters invading #scala ;)
2013-05-10 02:13:51	qu1j0t3	Arrgh: ya
2013-05-10 02:13:53	Dashkal	>.>
2013-05-10 02:13:57	MachineMuse	it's true :(
2013-05-10 02:14:00	LazDude2012	I was a coder before I ever heard of minecraft :P
2013-05-10 02:14:00	qu1j0t3	atamagawarui: like little meteoroids
2013-05-10 02:14:03	Dashkal	I disclaim all responsibility!
2013-05-10 02:14:12	Arrgh	Discussing OOP *in general* is problematic; discussing particular languages-that-claim-to-be-OOP is perfectly fine I'd say
2013-05-10 02:14:23	Dashkal	^
2013-05-10 02:14:26	qu1j0t3	atamagawarui: sorry. Arrgh 
2013-05-10 02:14:31	atamagawarui	qu1j0t3: no worries
2013-05-10 02:14:34	qu1j0t3	Arrgh: but awfully boring.
2013-05-10 02:14:47	Arrgh	Religious wars are much more fun
2013-05-10 02:14:56	Arrgh	In related news, http://www.smbc-comics.com/index.php?db=comics&id=2939#comic
2013-05-10 02:14:59	qu1j0t3	Arrgh: or we could have a scientific, math based one :)
2013-05-10 02:15:06	<--	DanBurton (~DanBurton@204-16-157-170-static.ipnetworksinc.net) has quit (Remote host closed the connection)
2013-05-10 02:15:27	LazDude2012	man, the hostility in this room
2013-05-10 02:15:32	LazDude2012	you could cut it with a knife
2013-05-10 02:15:40	-->	OlegYch (~OlegYch@178.127.68.58) has joined #scala
2013-05-10 02:15:50	squeeks	I'll cut you with a knife
2013-05-10 02:15:54	qu1j0t3	LazDude2012: if you're going to come in with wild assertions, study FP some first
2013-05-10 02:16:01	MachineMuse	good comic
2013-05-10 02:16:09	LazDude2012	I'm open to immutable state and other functional idioms, however, I'm not going to be religious at any point, saying that it's the only way to go.
2013-05-10 02:16:13	-->	sleepynate (~sleepynat@108-228-209-115.lightspeed.livnmi.sbcglobal.net) has joined #scala
2013-05-10 02:16:22	qu1j0t3	LazDude2012: notice how nobody in this channel has said that.
2013-05-10 02:16:24	datura	Arrgh: that comic describes pretty well why i like this channel :)
2013-05-10 02:16:30	qu1j0t3	LazDude2012: they said, mutable state is a fertile generator of bugs
2013-05-10 02:16:35	miasma	LazDude2012: that viewpoint is silly because the turing complete computation can be modeled with so many ways
2013-05-10 02:16:36	qu1j0t3	LazDude2012: and, ultimately, unhelpful.
2013-05-10 02:16:36	<--	oscarvarto (~oscarvart@187.173.241.21) has quit (Quit: oscarvarto)
2013-05-10 02:16:45	miasma	LazDude2012: ever heard of rewrite systems or conway's life?
2013-05-10 02:16:52	LazDude2012	Sure I have., 
2013-05-10 02:16:54	qu1j0t3	miasma: not to mention that it's just a subset of useful computation.
2013-05-10 02:17:08	<--	Nosceteipsum (~Nosceteip@d137231.adsl.hansenet.de) has quit (Quit: This computer has gone to sleep)
2013-05-10 02:17:12	miasma	LazDude2012: in those worlds all computation is a rewrite or some moving spaceships
2013-05-10 02:17:12	datura	qu1j0t3: so you'd never use the state monad?
2013-05-10 02:17:20	Dashkal	I still need to go learn Adga at some point,,,
2013-05-10 02:17:26	LazDude2012	A problem with immutable state is that it'll toss memory out the window without advanced garbage collection.
2013-05-10 02:17:26	qu1j0t3	datura: yes, i use it. :)
2013-05-10 02:17:34	qu1j0t3	LazDude2012: oh?
2013-05-10 02:17:38	LazDude2012	Granted, Scala and F# have that GC present
2013-05-10 02:17:47	datura	qu1j0t3: mutable state. just kept under control a little bit better.
2013-05-10 02:17:50	qu1j0t3	LazDude2012: heard of haskell?
2013-05-10 02:17:55	qu1j0t3	datura: i know.
2013-05-10 02:18:04	miasma	i thought the turing machine could be modeled with purely functional rules :P
2013-05-10 02:18:07	qu1j0t3	datura: that's not the mutable state our interlocutor means.
2013-05-10 02:18:24	LazDude2012	sure it will qu1j0t3. If every time I change an object, a new one is created, the old one is still taking memory
2013-05-10 02:18:28	qu1j0t3	LazDude2012: cool.
2013-05-10 02:18:32	LazDude2012	(unless the new one overwrites the old one)
2013-05-10 02:18:33	<--	RSchulzB (~Adium@67.218.117.3) has quit (Quit: Leaving.)
2013-05-10 02:18:38	-->	sdfwjbwer (b27f443a@gateway/web/freenode/ip.178.127.68.58) has joined #scala
2013-05-10 02:18:44	qu1j0t3	LazDude2012: this can be a great advantage.
2013-05-10 02:18:45	MachineMuse	without garbage collection, doesn't that mean you're managing memory by hand, in which case immutable state would allow you to free everything up as soon as it goes out of scope
2013-05-10 02:18:48	<--	OlegYch6 (~OlegYch@178.127.68.58) has quit (Ping timeout: 264 seconds)
2013-05-10 02:18:49	qu1j0t3	LazDude2012: but you haven't learned that yet.
2013-05-10 02:18:56	LazDude2012	and if the new one overwrites the old one, then isn't it technically mutable anyway?
2013-05-10 02:19:04	qu1j0t3	LazDude2012: it actually enables _more_ efficiency, not less.
2013-05-10 02:19:07	miasma	LazDude2012: you shold take a look at the 'clean' language. it's purely functional, yet they can easily handle mutable ram
2013-05-10 02:19:10	<--	HairyFotr1 (~hairy@89-212-217-158.dynamic.t-2.net) has quit (Quit: Leaving.)
2013-05-10 02:19:12	qu1j0t3	LazDude2012: if you're open minded, you'll go away and study why.
2013-05-10 02:19:25	LazDude2012	I'm willing to hear/see proof here
2013-05-10 02:19:29	qu1j0t3	LazDude2012: go look it up.
2013-05-10 02:19:29	MachineMuse	if my mother were to murder me and eat me, then didn't I technically become my mother, LazDude2012?
2013-05-10 02:19:47	qu1j0t3	LazDude2012: this is irc. This can be studied in innumerable books, papers, and implementations.
2013-05-10 02:20:03	LazDude2012	if your mother's atoms were rearranged into you, then I'd say that technically you would be your mother, Muse. :P
2013-05-10 02:20:05	qu1j0t3	LazDude2012: asking for a CS education on irc is imbecilic.
2013-05-10 02:20:23	qu1j0t3	LazDude2012: the education is found off irc and off reddit. 
2013-05-10 02:20:28	LazDude2012	I'm not. In fact, I'll be going off to college and getting a CS degree next year.
2013-05-10 02:20:37	datura	hm... i learned _a lot_ about CS in this channel.
2013-05-10 02:20:40	qu1j0t3	LazDude2012: we look forward to talking to you as a graduate.
2013-05-10 02:20:44	qu1j0t3	LazDude2012: i hope the course is a good one.
2013-05-10 02:20:59	qu1j0t3	datura: it only works if you are _in fact_ open minded.
2013-05-10 02:21:07	LazDude2012	well, s/next year/next 4 years
2013-05-10 02:21:10	stephenjudkins	LazDude2012: good luck, and for what it's worst, I don't think you were being inappropriate, nor do I think people here were being inordinately hostile.
2013-05-10 02:21:12	MachineMuse	yeah, I think the problem is asking to be *convinced* rather than educated
2013-05-10 02:21:14	qu1j0t3	LazDude2012: yep, cya in 2018
2013-05-10 02:21:22	stephenjudkins	*what it's worth
2013-05-10 02:21:25	-->	infynyxx (~infynyxx@208.82.12.18) has joined #scala
2013-05-10 02:21:34	LazDude2012	oh, I'm not leaving lol :P
2013-05-10 02:21:34	datura	qu1j0t3: i try. hard. but in my heart i'll always stay an assembler hacker :)
2013-05-10 02:21:36	LazDude2012	not this irc
2013-05-10 02:21:44	LazDude2012	i have a bouncer. I'll be here all 4 years
2013-05-10 02:22:30	stephenjudkins	LazDude2012: mutable or immutable state are tools used to reason about programs, not reflections of platonic ideals 
2013-05-10 02:22:33	datura	on a sidenote, i re-implemented about 20000 lines i've written 20 years ago in 68k asm in scala. in about 800 lines.
2013-05-10 02:23:14	<--	RRSchulz1 (~RRSchulz@67.218.117.4) has quit (Quit: Leaving.)
2013-05-10 02:23:26	LazDude2012	stephenjudkins: I understand that, and I believe that good things can be accomplished both ways. Those in this channel seem to believe that immutable state is the only proper way to do things.
2013-05-10 02:23:48	stephenjudkins	LazDude2012: yes, they generally hold that opinion.
2013-05-10 02:24:07	datura	well, currently there's no better alternative.
2013-05-10 02:24:09	MachineMuse	mutable state reflects how people interact with the world, but immutable state reflects how people think about mathematics. now is CS a branch of psychology or of mathematics...hmm
2013-05-10 02:24:20	LazDude2012	Well, math of course :P
2013-05-10 02:24:30	datura	art!
2013-05-10 02:24:36	miasma	programming is a craft
2013-05-10 02:24:38	MachineMuse	hehehe
2013-05-10 02:24:39	LazDude2012	it's generally considered a mathematical science
2013-05-10 02:24:41	moops	http://blog.gmarceau.qc.ca/2009/05/speed-size-and-dependability-of.html look at that tight ocaml curve dont you wanna get in on that
2013-05-10 02:25:31	LazDude2012	The big question that I had, and still have, is why is mutable state such a bad thing?
2013-05-10 02:25:49	LazDude2012	I'm open to using immutable states. I just want to know why you guys aren't.
2013-05-10 02:25:56	moops	its more likely that your program is wrong
2013-05-10 02:25:58	LazDude2012	(in the other way, I mean)
2013-05-10 02:25:59	MachineMuse	it's not. the question is what advantages does immutable state have
2013-05-10 02:26:13	-->	RRSchulz (~RRSchulz@67.218.117.4) has joined #scala
2013-05-10 02:26:14	--	pdxleif_away is now known as pdxleif
2013-05-10 02:26:25	LazDude2012	<qu1j0t3> mutable. state. is. not. desirable.
2013-05-10 02:26:25	LazDude2012	<qu1j0t3> or helpful
2013-05-10 02:26:39	MachineMuse	parallelization is a big one
2013-05-10 02:26:49	LazDude2012	datura> but to be honest, i can live without much mutable state quite well.
2013-05-10 02:26:49	LazDude2012	<tpolecat> as you spend more time doing FP you realize you don't need it
2013-05-10 02:26:49	LazDude2012	<qu1j0t3> +1
2013-05-10 02:26:49	LazDude2012	<qu1j0t3> or want it
2013-05-10 02:26:49	LazDude2012	<datura> +1
2013-05-10 02:27:10	MachineMuse	why are you pasting all these lines
2013-05-10 02:27:10	LazDude2012	Parallelization can be accomplished in mutable states, albeit with trickery.
2013-05-10 02:27:27	LazDude2012	Because you were disputing that people said mutable state was bad
2013-05-10 02:27:32	LazDude2012	and they clearly did
2013-05-10 02:27:43	LazDude2012	I'm simply wondering why it's bad to them
2013-05-10 02:27:49	datura	LazDude2012: personally the bugs i spent by far the most time on killing in my professional career would not have been possible without uncontrolled mutable state.
2013-05-10 02:28:20	datura	in my own, and more importantly in other people's code.
2013-05-10 02:28:29	MachineMuse	right. and being a java coder as well as a minecraft modder, it's no surprise that 'trickery' as a way of doing anything desireable is sort of accepted and normal, but... ^
2013-05-10 02:28:47	-->	joneshf-laptop (~joneshf@086.112-30-64.ftth.swbr.surewest.net) has joined #scala
2013-05-10 02:29:03	miasma	well, one could same some lazy dumbasses use immutable data. real coders work with mutable state
2013-05-10 02:29:18	datura	MachineMuse: now tell me using monads to control effect is not a great trick :)
2013-05-10 02:29:20	LazDude2012	yeah, but they wouldn't have been possible without computers either datura
2013-05-10 02:29:27	-->	blair (~blair@static-108-0-197-17.lsanca.fios.verizon.net) has joined #scala
2013-05-10 02:29:33	LazDude2012	i mean, is mutable state really at fault for bad programming?
2013-05-10 02:29:47	datura	no, stupid programmers are.
2013-05-10 02:29:51	LazDude2012	exactly
2013-05-10 02:29:54	datura	programmers like me, for example.
2013-05-10 02:30:02	moops	by that logic everyone is just fine using forth
2013-05-10 02:30:03	<--	infynyxx (~infynyxx@208.82.12.18) has quit (Ping timeout: 256 seconds)
2013-05-10 02:30:03	<--	mmazer (~mmazer@216.191.72.153) has quit (Read error: Connection reset by peer)
2013-05-10 02:30:05	<--	divoxx (~divoxx@64.124.27.219) has quit (Quit: Leaving...)
2013-05-10 02:30:25	tpolecat	LazDude2012: so, what we want is correct programs, and it helps a lot to be able to reason about your programs equationally. if you have mutable state, you can no longer reason equationally about parts of your program that can see the mutation.
2013-05-10 02:30:31	<--	headius (~headius@65-128-131-102.mpls.qwest.net) has quit (Quit: headius)
2013-05-10 02:30:35	miasma	LazDude2012: if you're good at logic, you can see that quite many in #scala and #haskell favor immutable programming style. maybe they're worse as progmrammers than say php users
2013-05-10 02:30:44	-->	divoxx (~divoxx@64.124.27.219) has joined #scala
2013-05-10 02:30:47	MachineMuse	datura: shush x.x it's *elegant* trickery
2013-05-10 02:30:52	<--	divoxx (~divoxx@64.124.27.219) has quit (Client Quit)
2013-05-10 02:30:55	datura	LazDude2012: but there's something that can help if the programmer is stupid. computers :)
2013-05-10 02:31:07	LazDude2012	Well, I would know that in, say #csharp, they would favour mutable data. Obviously.
2013-05-10 02:31:10	-->	OlegYch3 (~OlegYch@178.127.68.58) has joined #scala
2013-05-10 02:31:24	miasma	they're better programmers. can't imagine other reasons
2013-05-10 02:31:31	datura	*nod*
2013-05-10 02:31:35	tpolecat	… and with not much effort you can squeeze the mutation out of your programs, and you're left with somethng that's much easier to understand
2013-05-10 02:31:47	LazDude2012	tpolecat, but many people (me) don't think of programs as equations, but as objects.
2013-05-10 02:31:50	-->	hdoshi (~hdoshi@66.54.159.166) has joined #scala
2013-05-10 02:32:07	datura	LazDude2012: in the end it's the same with a GC. only stupid people need a GC. or a high-level-language.
2013-05-10 02:32:08	tpolecat	yes, this is a change of perspective that takes a while to adopt
2013-05-10 02:32:16	LazDude2012	My program is an object, sending data to/from other objects.
2013-05-10 02:32:17	imeredith	i dont think many/any people thing of programs as equations
2013-05-10 02:32:21	-->	colock (~colock@unaffiliated/colock) has joined #scala
2013-05-10 02:32:30	MachineMuse	I think of programs as magic spells
2013-05-10 02:32:31	imeredith	as functions maybe
2013-05-10 02:32:43	LazDude2012	tpolecat, but why would you need to think of say, an IRC daemon as an equation or series of equations?
2013-05-10 02:32:44	tpolecat	so, not equations, but values
2013-05-10 02:32:52	MachineMuse	say these words of power and receive some result
2013-05-10 02:32:53	LazDude2012	ok, s/equations/values
2013-05-10 02:32:53	imeredith	MachineMuse: if your chant the right words you avoid NPE!
2013-05-10 02:32:59	MachineMuse	hahaha
2013-05-10 02:33:08	<--	OlegYch3 (~OlegYch@178.127.68.58) has quit (Client Quit)
2013-05-10 02:33:10	tpolecat	an irc daemon is a function that translates input packets to output packets 
2013-05-10 02:33:10	-->	pmenon (~pmenon@70.52.134.185) has joined #scala
2013-05-10 02:33:11	<--	OlegYch (~OlegYch@178.127.68.58) has quit (Ping timeout: 260 seconds)
2013-05-10 02:33:12	datura	imeredith: the word is Option
2013-05-10 02:33:16	Dashkal	⊥ still lurks for the unwary progrmomancer
2013-05-10 02:33:24	imeredith	datura: Maybe..
2013-05-10 02:33:30	imeredith	:)
2013-05-10 02:33:37	datura	Dashkal: we'll get rid of that. total languages ftw.
2013-05-10 02:33:43	Dashkal	hah
2013-05-10 02:34:10	MachineMuse	'total' => 'not turing-complete'?
2013-05-10 02:34:13	LazDude2012	tpolecat: but why is thinking about it that way better than thinking of it as an object.
2013-05-10 02:34:16	datura	MachineMuse: yes
2013-05-10 02:34:17	imeredith	LazDude2012: we use objects in immutable programming, what we dont use is objects that have mutable state
2013-05-10 02:34:21	moops	you dont need turing completeness
2013-05-10 02:34:22	moops	its a crutch
2013-05-10 02:34:32	-->	OlegYch (~OlegYch@178.127.68.58) has joined #scala
2013-05-10 02:34:39	MachineMuse	but...what can you take out
2013-05-10 02:34:46	-->	fayimora (~fayimora@5.151.0.1) has joined #scala
2013-05-10 02:34:50	tpolecat	LazDude2012: it's just different, and in my experience it makes things easier to understad
2013-05-10 02:34:50	Dashkal	It's a pretty damn comfortable crutch, though :P
2013-05-10 02:35:07	Dashkal	Still, so was mutation
2013-05-10 02:35:20	-->	infynyxx (~infynyxx@208.82.12.18) has joined #scala
2013-05-10 02:35:31	moops	if you really needed turing completeness youd also need infinite memory
2013-05-10 02:35:34	runT1ME	unfamiliarity with something doesn't mean it's worse or hard
2013-05-10 02:35:38	MachineMuse	because mathematicians proved mathematically that thinking about things mathematically is the best way.
2013-05-10 02:35:42	tpolecat	as i'm pretty sure i have said before, but i'm not smart enough to deal with mutation. i just accept that as a brain deficiency and move on
2013-05-10 02:35:50	Dashkal	tpolecat++
2013-05-10 02:35:54	LazDude2012	so, the thing is, in your equations viewpoint, of course mutability makes no sense. But similarly, in my object viewpoint, immutability doesn't make much sense either.
2013-05-10 02:36:09	imeredith	why doesnt immutabibily make sense?
2013-05-10 02:36:12	Lymia	LazDude2012, it doesn't?
2013-05-10 02:36:17	<--	m-jack (~chatzilla@cmr-208-97-104-82.cr.net.cable.rogers.com) has quit (Ping timeout: 252 seconds)
2013-05-10 02:36:28	<--	whaley (~whaley@108-86-97-217.lightspeed.jcvlfl.sbcglobal.net) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2013-05-10 02:36:30	<--	fayimora (~fayimora@5.151.0.1) has quit (Client Quit)
2013-05-10 02:36:38	LazDude2012	Not to me. If I'm thinking about things as objects, I can change objects. 
2013-05-10 02:36:39	Lymia	! case class SomeObject(i: Int) { def someTransformation() = SomeObject(i*2) }
2013-05-10 02:36:39	multibot_	 defined class SomeObject
2013-05-10 02:36:39	-->	buhawi (~buhawi@124.6.182.55) has joined #scala
2013-05-10 02:36:54	moops	to be fair, before youre used to FP, not using mutable state seems impossible
2013-05-10 02:36:58	moops	at least it did for me
2013-05-10 02:37:02	<--	RRSchulz (~RRSchulz@67.218.117.4) has quit (Quit: Leaving.)
2013-05-10 02:37:08	LazDude2012	sure, Lymia, but if it were a real object, why the hell couldn't you just change i? :P
2013-05-10 02:37:13	colock	LazDude2012: to know the state of an object at a given time t, you must know its past
2013-05-10 02:37:19	Lymia	LazDude2012, you're native to Java, right?
2013-05-10 02:37:21	colock	and that's _very_ hard for our poor human brain.
2013-05-10 02:37:23	Lymia	What is String?
2013-05-10 02:37:26	LazDude2012	Lymia: C# actually
2013-05-10 02:37:32	Lymia	Close enough :P
2013-05-10 02:37:46	LazDude2012	and String is a primitive .NET class, composed of an array of characters.
2013-05-10 02:37:56	MachineMuse	LazDude2012: changing people is a lot harder than it seems
2013-05-10 02:37:56	colock	bring in some concurrency and it becomes just impossible to follow the flow of things
2013-05-10 02:38:13	tpolecat	even without concurrency
2013-05-10 02:38:15	LazDude2012	Yes, it's immutable, although not in the traditional immutability sense, as you can still assign new string values to it.
2013-05-10 02:38:27	LazDude2012	The data is immutable, although the string itself is not.
2013-05-10 02:38:28	Lymia	I personally don't like to use lots of mutation because this brings in the complication of keeping track of instance equality.
2013-05-10 02:38:33	<--	Score_Under (~Score_Und@90.209.79.78) has quit (Ping timeout: 256 seconds)
2013-05-10 02:39:18	Lymia	For some things, this results in a mess in "what just changed that"? "Oh, I have to add a clone here".
2013-05-10 02:39:20	imeredith	LazDude2012: you mean the reference to the immutable string is mutable?
2013-05-10 02:39:38	LazDude2012	Sure, you can put it that way. It's C#, everything is pointers. :P
2013-05-10 02:39:44	imeredith	same with java
2013-05-10 02:40:02	<--	sdfwjbwer (b27f443a@gateway/web/freenode/ip.178.127.68.58) has quit (Ping timeout: 245 seconds)
2013-05-10 02:40:07	LazDude2012	When mutability is needed, which happens sometimes, one uses a StringBuilder.
2013-05-10 02:40:32	LazDude2012	I'm fine with immutability as an option, even as a default, but not as the only way to do things. ;)
2013-05-10 02:40:35	tpolecat	desired. it's never needed.
2013-05-10 02:40:38	<--	jeddhaberstro (~jeddhaber@user-0cemip4.cable.mindspring.com) has quit (Quit: jeddhaberstro)
2013-05-10 02:41:02	LazDude2012	this discussion is pointless, as (like MachineMuse pointed out) my opinion is ironically immutable.
2013-05-10 02:41:28	tpolecat	you'll start to see it better as you use scala more, or other fp languages
2013-05-10 02:41:28	MachineMuse	well, even then, there is good news for you
2013-05-10 02:41:34	tpolecat	it does take a while to settle in
2013-05-10 02:41:35	datura	mutable state is an illusion. there's only the world now, and a different world one instant later.
2013-05-10 02:41:40	LazDude2012	you'll need LazDude2013 for you to help.
2013-05-10 02:41:52	-->	jeddhaberstro (~jeddhaber@user-0cemip4.cable.mindspring.com) has joined #scala
2013-05-10 02:41:54	MachineMuse	ha
2013-05-10 02:41:56	imeredith	LazDude2012: well, you dont have the experience yet to understand where we are coming from, if you spent time doing it maybe you view point would change
2013-05-10 02:42:13	imeredith	LazDude2012: many of us had similar thoughts to you once upon a time
2013-05-10 02:42:16	LazDude2012	datura: one could say immutable state is an illusion. Especially on computers, where every instruction mutates the state of the RAM, processor registers, etc
2013-05-10 02:42:21	MachineMuse	yes! the good news is: scala lets you use mutable state when you want to, but also encourages you not to
2013-05-10 02:42:21	imeredith	its not like we magically understood
2013-05-10 02:42:30	LazDude2012	MachineMuse: as does F#
2013-05-10 02:42:32	datura	LazDude2012: that's exactly the point in all this talking
2013-05-10 02:42:38	--	wajiii is now known as wajiii-afk
2013-05-10 02:42:45	imeredith	LazDude2012: all we care about is the apis, impl is unimportant
2013-05-10 02:42:58	LazDude2012	is it?
2013-05-10 02:43:05	LazDude2012	I'm leaving for a while, bye. 
2013-05-10 02:43:12	<--	kelvl (~kelvl@192-195-80-114-TWIL.static.monkeybrains.net) has quit (Read error: Connection reset by peer)
2013-05-10 02:43:15	--	LazDude2012 is now known as AFKDude2012
2013-05-10 02:43:16	-->	kelvl_ (~kelvl@192-195-80-114-TWIL.static.monkeybrains.net) has joined #scala
2013-05-10 02:43:40	<--	AFKDude2012 (lazdude201@minecraft.is.awesome.but.adfly-is-la.me) has left #scala ("Leaving")
2013-05-10 02:43:50	-->	RSchulzB (~Adium@67.218.117.3) has joined #scala
2013-05-10 02:43:53	tpolecat	(when you change memory its prior quantum state is preserved in the radiated heat, so it really is immutable)
2013-05-10 02:43:56	-->	[mth] (~mth@110.151.20.114) has joined #scala
2013-05-10 02:44:07	colock	pfff
2013-05-10 02:44:19	MachineMuse	~it's~all~an~illusion~ I am not really talking to you, I am pressing plastic buttons in rapid sequence causing a series of electrical pulses which are (etc) resulting in words which appear on your screen
2013-05-10 02:44:20	datura	LazDude2012: it's just two different ways to look at things.
2013-05-10 02:44:38	moops	immutability is a useful abstraction independent of implementation
2013-05-10 02:44:40	colock	who care if it's an illusion? programs are an illusion (read: abstraction) too
2013-05-10 02:45:09	Lymia	I'm not sure why people think mutability is such a big deal...
2013-05-10 02:45:12	<--	hdoshi (~hdoshi@66.54.159.166) has quit (Ping timeout: 264 seconds)
2013-05-10 02:45:19	-->	gphat (~gphat@99-8-185-28.lightspeed.snfcca.sbcglobal.net) has joined #scala
2013-05-10 02:45:29	imeredith	because thats all they have known
2013-05-10 02:45:29	colock	Lymia: val vs var culture
2013-05-10 02:45:39	colock	yep :P
2013-05-10 02:45:40	Lymia	Even in my oldest programs, about the biggest change to program structure to make as much immutable as possible would be turning a few () => Unit functions into SomeClass => SomeClass
2013-05-10 02:45:44	colock	well C has "const" !
2013-05-10 02:45:57	MachineMuse	because everyone wishes the things that exist could be improved through some mechanism other than destruction and replacement
2013-05-10 02:46:04	imeredith	the keyword val helps immeasurably towards going immutable
2013-05-10 02:46:24	datura	colock: i found reasoning about "const" in C++ pretty hard sometimes :)
2013-05-10 02:46:28	MachineMuse	yeah
2013-05-10 02:46:33	<--	ryanlecompte (~ryanlecom@c-67-180-16-120.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2013-05-10 02:46:34	colock	MachineMuse: for list that's true only if you have immutability :)
2013-05-10 02:47:05	MachineMuse	'final' is just more typing even when I know a variable isn't going to change :s
2013-05-10 02:47:07	colock	since you don't need to destroy what existed to "improve" it, since you're sure the items won't change
2013-05-10 02:47:22	MachineMuse	hm...
2013-05-10 02:47:37	imeredith	MachineMuse: its also sets a tone in the language that using final isnt the most common case
2013-05-10 02:47:37	datura	MachineMuse: really? my impression was people nowadays don't repair anything any more. instead stuff gets thrown away and replaced.
2013-05-10 02:47:47	colock	datura: :)
2013-05-10 02:48:02	 *	colock loves his old kitchen tools
2013-05-10 02:48:11	<--	jeddhaberstro (~jeddhaber@user-0cemip4.cable.mindspring.com) has quit (Remote host closed the connection)
2013-05-10 02:48:11	imeredith	if in java you had to do something like... mutable String.. and by default things were immutable, i bet people would be working a lot more immutably
2013-05-10 02:48:13	colock	solid and handy
2013-05-10 02:48:14	<--	buhawi (~buhawi@124.6.182.55) has left #scala ("["Textual IRC Client: www.textualapp.com"]")
2013-05-10 02:48:25	-->	hdoshi (~hdoshi@66.54.159.166) has joined #scala
2013-05-10 02:48:41	MachineMuse	datura: it's true. val represents disposable culture D:
2013-05-10 02:48:48	Lymia	imeredith, I've never really used promiscuously global state, in the first place, which probably helped. :p
2013-05-10 02:48:56	datura	i hate it how much electronics today have become more and more immutable... when i was a kid, you could change them easily :/
2013-05-10 02:49:13	-->	m-jack (~chatzilla@cmr-208-97-104-82.cr.net.cable.rogers.com) has joined #scala
2013-05-10 02:49:38	MachineMuse	but the ones you throw out and buy new ones of perform so much better for the cost ;o
2013-05-10 02:50:27	datura	but i'm emotionally attached to the old ones!
2013-05-10 02:50:42	<--	tpolecat (~tpolecat@c-24-22-11-146.hsd1.or.comcast.net) has quit (Quit: has left the building.)
2013-05-10 02:50:44	 *	datura still has his commodore 64
2013-05-10 02:50:55	datura	and the amigas
2013-05-10 02:50:58	Dashkal	does not.  flyweight pattern becomes "duh" in immutable style.  You don't throw out the toaster, you replace only the broken part and keep the rest!
2013-05-10 02:51:00	colock	also not true, really the <thing> 5 outperforms <thing> 4 ?
2013-05-10 02:51:01	imeredith	im not emotionally attached to my ihpone4, but ill be fucked if im going to dish out maney for anything newer
2013-05-10 02:51:02	<--	gdey (~gdey@72-34-68-226.skyriver.net) has quit (Ping timeout: 256 seconds)
2013-05-10 02:51:12	colock	^^
2013-05-10 02:52:08	MachineMuse	thing 5 is more immutable than thing 4... you can solder components off of old apple computers pretty easily
2013-05-10 02:52:25	colock	datura: take a little tour… http://museo.freaknet.org/en/
2013-05-10 02:52:26	<--	gphat (~gphat@99-8-185-28.lightspeed.snfcca.sbcglobal.net) has quit (Remote host closed the connection)
2013-05-10 02:52:47	-->	deuteros_ (~deuteros@unaffiliated/deuteros) has joined #scala
2013-05-10 02:52:52	MachineMuse	'flyweight pattern'? *ducks*
2013-05-10 02:53:00	Dashkal	One thing people get stuck on.  "immutable" does not mean cannot be changed.
2013-05-10 02:53:17	pfurla	epfl had a nice computer museum
2013-05-10 02:53:22	Dashkal	MachineMuse: One of the few patterns from the gang of five that is actually pretty sane
2013-05-10 02:53:27	Lymia	! def Test(s: String) extends Val
2013-05-10 02:53:28	multibot_	 error: '=' expected but 'extends' found.
2013-05-10 02:53:29	multibot_	        def Test(s: String) extends Val
2013-05-10 02:53:30	multibot_	                            ^
2013-05-10 02:53:32	<--	sritchie (~sritchie@8.25.197.25) has quit (Quit: sritchie)
2013-05-10 02:53:34	Lymia	! case class Test(s: String) extends Val
2013-05-10 02:53:34	multibot_	 error: not found: type Val
2013-05-10 02:53:35	multibot_	        case class Test(s: String) extends Val
2013-05-10 02:53:36	multibot_	                                           ^
2013-05-10 02:53:38	Lymia	! case class Test(s: String) extends AnyVal
2013-05-10 02:53:38	multibot_	 defined class Test
2013-05-10 02:53:54	Lymia	! case class Test(s: Seq[String]) extends AnyVal
2013-05-10 02:53:54	multibot_	 defined class Test
2013-05-10 02:53:58	Lymia	Hun. That's neat.
2013-05-10 02:54:11	Dashkal	MachineMuse: case class Foo(a: Int, b: String); foo = Foo(5, "x"); bar = foo.copy(b = "y"); bar.a == 5
2013-05-10 02:54:18	colock	pfurla: yep, got "improved" in the past years… but I found it more aseptic now :\
2013-05-10 02:54:48	colock	the freaknet's one is better, you can even use old systems via telnet :D
2013-05-10 02:54:51	MachineMuse	wha o.o
2013-05-10 02:55:09	pfurla	aseptic ? cleaner ?
2013-05-10 02:55:15	Dashkal	The idea is when making bar, I changed only the string, keeping the int.
2013-05-10 02:55:20	colock	distant, cold
2013-05-10 02:55:22	MachineMuse	ok
2013-05-10 02:55:26	pfurla	oh
2013-05-10 02:55:31	Dashkal	Why would I need to copy the int, it can't change anyway, just use it!
2013-05-10 02:55:40	pfurla	awesome, sinclair via telnet :)
2013-05-10 02:56:05	MachineMuse	got it. so 'flyweight' => copy constructor with default args equal to this.thatvalue
2013-05-10 02:56:07	MachineMuse	thing
2013-05-10 02:56:10	<--	dankest (~dankest@wsip-70-182-130-90.sb.sd.cox.net) has quit (Quit: Leaving...)
2013-05-10 02:56:16	Dashkal	MachineMuse: More or less
2013-05-10 02:56:17	-->	OlegYch2 (~OlegYch@178.127.68.58) has joined #scala
2013-05-10 02:56:18	MachineMuse	what's a case class
2013-05-10 02:56:30	Dashkal	case class is just a class that predefines a few methods for you.
2013-05-10 02:56:31	<--	RSchulzB (~Adium@67.218.117.3) has quit (Quit: Leaving.)
2013-05-10 02:56:33	Dashkal	like copy
2013-05-10 02:56:43	pfurla	i'd really love to play with old macs
2013-05-10 02:57:00	MachineMuse	oh
2013-05-10 02:57:28	colock	the guys down there are trying to rebuild an Apple I "from scratch"
2013-05-10 02:57:30	Dashkal	case class makes all constructor args vals, provides copy on instances, provides apply() and unapply() on the companion object.  Enables a few handy patterns
2013-05-10 02:57:40	colock	http://museo.freaknet.org/en/apple-1-creation/
2013-05-10 02:57:50	Dashkal	having apply on the companion object is why I didn't need 'new' there.
2013-05-10 02:57:55	<--	atoll (~atoll@84-74-102-216.dclient.hispeed.ch) has quit (Ping timeout: 260 seconds)
2013-05-10 02:57:56	Dashkal	Unapply allows matching
2013-05-10 02:58:11	MachineMuse	ahhh
2013-05-10 02:58:21	MachineMuse	that explains ...
2013-05-10 02:58:24	MachineMuse	ok
2013-05-10 02:58:36	<--	OlegYch (~OlegYch@178.127.68.58) has quit (Ping timeout: 272 seconds)
2013-05-10 02:59:04	colock	pfurla: if you can't wait, you can play with basilisk ;)
2013-05-10 02:59:05	<--	stephenjudkins (~textual@c-98-246-155-212.hsd1.or.comcast.net) has quit (Quit: Computer has gone to sleep.)
2013-05-10 02:59:23	colock	http://basilisk.cebix.net/
2013-05-10 02:59:51	moops	should have told that guy that even john carmack is using haskell now
2013-05-10 02:59:58	pfurla	awesome
2013-05-10 03:00:05	-->	rhysyngsun (~rhysyngsu@pool-108-20-78-157.bstnma.fios.verizon.net) has joined #scala
2013-05-10 03:00:22	moops	https://twitter.com/id_aa_carmack/status/331918309916295168
2013-05-10 03:00:34	<--	infynyxx (~infynyxx@208.82.12.18) has quit (Remote host closed the connection)
2013-05-10 03:00:56	colock	wow
2013-05-10 03:01:15	moops	there is hope for the games industry!
2013-05-10 03:01:18	colock	:)
2013-05-10 03:01:37	Dashkal	It would be amazing to have games cleanly shut down rather than crash again...
2013-05-10 03:02:09	colock	eheh
2013-05-10 03:02:14	-->	jhaberstro (~textual@user-0cemip4.cable.mindspring.com) has joined #scala
2013-05-10 03:02:17	colock	i wonder how he deals with VBO
2013-05-10 03:02:18	<--	OwenOu (~Adium@ws165.acl.com) has quit (Quit: Leaving.)
2013-05-10 03:02:29	moops	he said hes just gonna use opengl
2013-05-10 03:02:31	moops	so probably by cheating
2013-05-10 03:02:57	pfurla	"https://twitter.com/ID_AA_Carmack GHC 7.8 will include native iOS compilation support; I've been having a great time using the dev version for about a year : ) " finally!
2013-05-10 03:03:30	<--	sleepynate (~sleepynat@108-228-209-115.lightspeed.livnmi.sbcglobal.net) has quit (Remote host closed the connection)
2013-05-10 03:04:36	Dashkal	I'm working on a Render monad for libwjgl
2013-05-10 03:04:53	datura	!
2013-05-10 03:04:59	colock	VBO *is* OpenGL
2013-05-10 03:05:18	colock	Vertex Buffer Objects
2013-05-10 03:05:26	Dashkal	I'm doing minecraft modding in scala these days, and raw opengl hurt my brain too much, needed a saner api.
2013-05-10 03:05:47	-->	RRSchulz (~RRSchulz@173-228-5-23.dsl.static.sonic.net) has joined #scala
2013-05-10 03:05:53	colock	need to pass a pointer to your vertex structures in contiguous ram, their size and so on
2013-05-10 03:06:12	moops	who needs types
2013-05-10 03:06:16	colock	haskell has VBO support, but the api seems crazy (as it should be, since the specification is crazy)
2013-05-10 03:06:19	moops	we have SCREAMING_CAPS_INTEGER_CONSTANTS
2013-05-10 03:06:29	colock	ahah
2013-05-10 03:07:09	colock	oh, haskell has Ptr data tyep
2013-05-10 03:07:22	pfurla	BECAUSE_IT_IS_ALL_FROM_C?
2013-05-10 03:07:39	colock	castPtr :: Ptr a -> Ptr b
2013-05-10 03:07:43	colock	so correct :P
2013-05-10 03:08:02	colock	also pointer arithmetic
2013-05-10 03:08:05	pfurla	wait to see the Ptr Ptr Ptr Ptr x
2013-05-10 03:08:07	colock	http://hackage.haskell.org/packages/archive/base/4.5.0.0/doc/html/Foreign-Ptr.html#t:Ptr
2013-05-10 03:08:26	colock	FunPtr !
2013-05-10 03:09:12	pfurla	https://github.com/ghc-ios/ghc/wiki
2013-05-10 03:09:42	-->	kelvl (~kelvl@192-195-80-114-TWIL.static.monkeybrains.net) has joined #scala
2013-05-10 03:12:05	-->	OlegYch (~OlegYch@178.127.68.58) has joined #scala
2013-05-10 03:12:51	<--	kelvl_ (~kelvl@192-195-80-114-TWIL.static.monkeybrains.net) has quit (Ping timeout: 260 seconds)
2013-05-10 03:13:32	<--	evanmeagher (~evm@8.25.197.24) has quit (Quit: evanmeagher)
2013-05-10 03:13:40	<--	mrrobbot (~siksia@unaffiliated/siksia) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2013-05-10 03:14:14	<--	OlegYch2 (~OlegYch@178.127.68.58) has quit (Ping timeout: 248 seconds)
2013-05-10 03:14:34	-->	jcazeved_ (~jcazevedo@bl18-80-238.dsl.telepac.pt) has joined #scala
2013-05-10 03:15:37	-->	mmazer (~mmazer@67.70.111.176) has joined #scala
2013-05-10 03:16:53	<--	jcazevedo (~jcazevedo@bl18-118-29.dsl.telepac.pt) has quit (Ping timeout: 248 seconds)
2013-05-10 03:18:38	Lymia	pfurla, four star programming
2013-05-10 03:18:40	Lymia	o.o
2013-05-10 03:19:04	Lymia	****type is ugly enough in C
2013-05-10 03:19:06	-->	jamesiry (~Adium@c-24-7-67-118.hsd1.ca.comcast.net) has joined #scala
2013-05-10 03:19:38	-->	infynyxx (~infynyxx@208.82.12.18) has joined #scala
2013-05-10 03:20:11	<--	m-jack (~chatzilla@cmr-208-97-104-82.cr.net.cable.rogers.com) has quit (Ping timeout: 252 seconds)
2013-05-10 03:20:58	<--	moops (~username@unaffiliated/moops) has quit (Ping timeout: 245 seconds)
2013-05-10 03:22:03	<--	alippai (~alippai@cuppa.sch.bme.hu) has quit (Quit: Leaving.)
2013-05-10 03:22:15	-->	m-jack (~chatzilla@cmr-208-97-104-82.cr.net.cable.rogers.com) has joined #scala
2013-05-10 03:26:20	<--	SuperTux88 (benjamin@i.have.ipv6.on.coding4coffee.org) has quit (Remote host closed the connection)
2013-05-10 03:26:20	<--	raid (macbookpro@irc.coding4coffee.org) has quit (Remote host closed the connection)
2013-05-10 03:26:52	-->	RSchulzB (~Adium@67.218.117.3) has joined #scala
2013-05-10 03:27:09	<--	m-jack (~chatzilla@cmr-208-97-104-82.cr.net.cable.rogers.com) has quit (Ping timeout: 252 seconds)
2013-05-10 03:27:27	<--	OlegYch (~OlegYch@178.127.68.58) has quit (Ping timeout: 252 seconds)
2013-05-10 03:27:27	-->	OlegYch9 (~OlegYch@178.127.68.58) has joined #scala
2013-05-10 03:27:40	<--	jamesiry (~Adium@c-24-7-67-118.hsd1.ca.comcast.net) has quit (Ping timeout: 268 seconds)
2013-05-10 03:28:29	-->	gphat (~gphat@99-8-185-28.lightspeed.snfcca.sbcglobal.net) has joined #scala
2013-05-10 03:29:17	<--	colock (~colock@unaffiliated/colock) has quit (Quit: zzz)
2013-05-10 03:30:41	<--	dancapo (dcsobral@201.22.135.227.dynamic.adsl.gvt.net.br) has quit (Remote host closed the connection)
2013-05-10 03:30:53	-->	dcsobral (dcsobral@201.22.135.227.dynamic.adsl.gvt.net.br) has joined #scala
2013-05-10 03:32:15	<--	hdoshi (~hdoshi@66.54.159.166) has quit (Read error: Operation timed out)
2013-05-10 03:34:54	<--	Ashoat (~Ashoat@66-192-186-66.static.twtelecom.net) has quit (Quit: Computer has gone to sleep.)
2013-05-10 03:35:00	<--	RSchulzB (~Adium@67.218.117.3) has quit (Ping timeout: 264 seconds)
2013-05-10 03:36:44	<--	mmazer (~mmazer@67.70.111.176) has quit (Quit: mmazer)
2013-05-10 03:36:53	<--	Amanas (~Amanas@c-24-128-204-226.hsd1.ma.comcast.net) has quit (Quit: Leaving)
2013-05-10 03:37:11	-->	hdoshi (~hdoshi@66.54.159.166) has joined #scala
2013-05-10 03:40:03	-->	OlegYch (~OlegYch@178.127.68.58) has joined #scala
2013-05-10 03:41:16	<--	lcfrs (~lcfrs@8.25.197.24) has quit (Remote host closed the connection)
2013-05-10 03:42:48	-->	soulofpeace (~soulofpea@119.75.11.250) has joined #scala
2013-05-10 03:42:56	<--	datura (~datura@unaffiliated/datura) has quit (Ping timeout: 255 seconds)
2013-05-10 03:43:10	<--	OlegYch9 (~OlegYch@178.127.68.58) has quit (Ping timeout: 256 seconds)
2013-05-10 03:43:49	-->	hdoshi_ (~hdoshi@66.54.159.166) has joined #scala
2013-05-10 03:46:09	<--	hdoshi (~hdoshi@66.54.159.166) has quit (Ping timeout: 252 seconds)
2013-05-10 03:46:09	runT1ME	better way to do a collect from a tree structure? i'm using this but there are some issues... anyone already know a cleaner way? http://pastebin.com/ZxteP2F1
2013-05-10 03:46:49	runT1ME	and yes, I know I should move it to a typeclass. :-P
2013-05-10 03:46:49	<--	infynyxx (~infynyxx@208.82.12.18) has quit (Remote host closed the connection)
2013-05-10 03:49:11	--	Arrgh is now known as Arr`Gone
2013-05-10 03:49:15	<--	hdoshi_ (~hdoshi@66.54.159.166) has quit (Ping timeout: 268 seconds)
2013-05-10 03:50:31	copumpkin	not sure collect is the right name for that :)
2013-05-10 03:51:44	runT1ME	well, i'm just collecting depth first and returning
2013-05-10 03:51:49	<--	pcarrier (~textual@unaffiliated/pcarrier) has quit (Ping timeout: 256 seconds)
2013-05-10 03:51:53	runT1ME	it's collect, but instead of a list, a tree
2013-05-10 03:52:10	runT1ME	but you'er right, it shold be first
2013-05-10 03:52:12	runT1ME	huh
2013-05-10 03:54:44	<--	gphat (~gphat@99-8-185-28.lightspeed.snfcca.sbcglobal.net) has quit (Remote host closed the connection)
2013-05-10 03:54:52	qu1j0t3	copumpkin: flattenDepthFirst ?
2013-05-10 03:55:01	-->	pcarrier (~textual@unaffiliated/pcarrier) has joined #scala
2013-05-10 03:55:25	copumpkin	firstBy or something like that seems okay
2013-05-10 03:55:30	<--	OlegYch (~OlegYch@178.127.68.58) has quit (Ping timeout: 252 seconds)
2013-05-10 03:55:39	 *	qu1j0t3 didn't read the code
2013-05-10 03:55:49	<--	derek_c (~derekchia@nat-128-84-124-0-911.cit.cornell.edu) has quit (Ping timeout: 248 seconds)
2013-05-10 03:55:50	-->	gphat (~gphat@99-8-185-28.lightspeed.snfcca.sbcglobal.net) has joined #scala
2013-05-10 03:55:59	-->	ranie (~rramiso@124.6.182.55) has joined #scala
2013-05-10 03:56:04	runT1ME	fine I'll multibot it for the lazy
2013-05-10 03:56:20	<--	gphat (~gphat@99-8-185-28.lightspeed.snfcca.sbcglobal.net) has quit (Remote host closed the connection)
2013-05-10 03:56:27	 *	qu1j0t3 is a La-z-Dude
2013-05-10 03:57:10	runT1ME	! trait Packet {
2013-05-10 03:57:10	multibot_	 error: unexpected EOF found, incomplete expression
2013-05-10 03:57:11	runT1ME	  def source: String
2013-05-10 03:57:11	runT1ME	  def children: Seq[Packet]
2013-05-10 03:57:11	runT1ME	 
2013-05-10 03:57:11	runT1ME	  //TODO: make tail recursive?
2013-05-10 03:57:12	runT1ME	  def collect[T <: Packet](pf: PartialFunction[Packet, T]): Option[T] = {
2013-05-10 03:57:12	runT1ME	    val first = children.collect(pf).headOption
2013-05-10 03:57:12	runT1ME	    first match {
2013-05-10 03:57:13	runT1ME	      case Some(f) => Some(f)
2013-05-10 03:57:13	runT1ME	      case None => children
2013-05-10 03:57:13	runT1ME	        .toSeq
2013-05-10 03:57:13	runT1ME	        .map(child => child.collect[T](pf))
2013-05-10 03:57:14	runT1ME	        .collect { case Some(x) => x }
2013-05-10 03:57:14	runT1ME	        .headOption
2013-05-10 03:57:27	-->	gphat (~gphat@99-8-185-28.lightspeed.snfcca.sbcglobal.net) has joined #scala
2013-05-10 03:57:39	qu1j0t3	what have I DONE
2013-05-10 03:57:54	-->	infynyxx (~infynyxx@208.82.12.18) has joined #scala
2013-05-10 03:57:54	<--	atamagawarui (~user@unaffiliated/dijkstragroupie) has quit (Remote host closed the connection)
2013-05-10 03:57:59	<--	gphat (~gphat@99-8-185-28.lightspeed.snfcca.sbcglobal.net) has quit (Remote host closed the connection)
2013-05-10 03:58:03	qu1j0t3	you can use orElse here
2013-05-10 03:58:19	qu1j0t3	instead of the match
2013-05-10 03:58:49	runT1ME	oh yeah
2013-05-10 03:58:56	runT1ME	that's good. 
2013-05-10 03:59:12	qu1j0t3	  .collect { case Some(x) => x }             // doesn't flatten do this?
2013-05-10 03:59:20	reactormonk	do we have a toJava on option that returns a null on None?
2013-05-10 03:59:33	-->	gphat (~gphat@99-8-185-28.lightspeed.snfcca.sbcglobal.net) has joined #scala
2013-05-10 04:00:23	-->	cdidd (~cdidd@93-80-183-196.broadband.corbina.ru) has joined #scala
2013-05-10 04:00:30	<--	gphat (~gphat@99-8-185-28.lightspeed.snfcca.sbcglobal.net) has quit (Remote host closed the connection)
2013-05-10 04:01:07	runT1ME	hrm. does it? 
2013-05-10 04:01:20	-->	gphat (~gphat@99-8-185-28.lightspeed.snfcca.sbcglobal.net) has joined #scala
2013-05-10 04:01:24	runT1ME	! List(None, Some(4), Some(5))
2013-05-10 04:01:25	multibot_	 List[Option[Int]] = List(None, Some(4), Some(5))
2013-05-10 04:01:44	runT1ME	! List(None, Some(4), Some(5)).collect { case Some(x) => x }
2013-05-10 04:01:44	multibot_	 List[Int] = List(4, 5)
2013-05-10 04:01:51	qu1j0t3	! List(None, Some(4), Some(5)).flatten
2013-05-10 04:01:51	multibot_	 List[Int] = List(4, 5)
2013-05-10 04:02:08	runT1ME	hows that work. 
2013-05-10 04:02:21	runT1ME	oh. is it the freaking implicit shit between option and seq again? o_O
2013-05-10 04:02:22	-->	atamagawarui (~user@unaffiliated/dijkstragroupie) has joined #scala
2013-05-10 04:03:44	<--	rhysyngsun (~rhysyngsu@pool-108-20-78-157.bstnma.fios.verizon.net) has quit (Quit: rhysyngsun)
2013-05-10 04:06:19	<--	infynyxx (~infynyxx@208.82.12.18) has quit (Remote host closed the connection)
2013-05-10 04:06:51	runT1ME	collections can't flatten arbitrary stuff, right? just so happens option works?
2013-05-10 04:07:13	-->	jamesiry (~Adium@c-24-7-67-118.hsd1.ca.comcast.net) has joined #scala
2013-05-10 04:08:10	doctau	runT1ME: from memory it works if you have any traversable inside any traversable, with the result being of the type of the outer one
2013-05-10 04:08:29	runT1ME	oh. that's interesting. 
2013-05-10 04:08:39	-->	paddymahoney (~patrick@198-84-186-52.cpe.teksavvy.com) has joined #scala
2013-05-10 04:09:00	<--	PeteDaGuru (~PeteDaGur@user-0c99bnk.cable.mindspring.com) has quit (Quit: Leaving.)
2013-05-10 04:09:08	runT1ME	OK well that's two beers I owe qu1j0t3 so far
2013-05-10 04:09:38	runT1ME	anymore things i should change?
2013-05-10 04:11:51	doctau	checking, the outer one has to be GenericTraversableTemplate, the inner one is anything with an implicit conversion to GenTraverableOnce, and it produces  whatever the builder for the outer type emits
2013-05-10 04:12:01	runT1ME	that's pretty cool
2013-05-10 04:12:32	-->	m-jack (~chatzilla@cmr-208-97-104-82.cr.net.cable.rogers.com) has joined #scala
2013-05-10 04:12:39	doctau	runT1ME: https://github.com/scala/scala/blob/v2.10.1/src/library/scala/collection/generic/GenericTraversableTemplate.scala#L119
2013-05-10 04:12:46	qu1j0t3	runT1ME: that's nice of you, but i don't think i've earned a beer yet.
2013-05-10 04:12:49	doctau	the links is from the scaladoc page for it
2013-05-10 04:13:54	runT1ME	oops, it should be toStream not toSeq.  
2013-05-10 04:14:17	qu1j0t3	yeah that looked redundant
2013-05-10 04:14:31	runT1ME	want it lazy since i'm looking for the first
2013-05-10 04:16:33	-->	Heero (~Heero@c-98-245-11-181.hsd1.co.comcast.net) has joined #scala
2013-05-10 04:16:33	<--	Heero (~Heero@c-98-245-11-181.hsd1.co.comcast.net) has quit (Changing host)
2013-05-10 04:16:33	-->	Heero (~Heero@unaffiliated/heero) has joined #scala
2013-05-10 04:16:39	<--	pcarrier (~textual@unaffiliated/pcarrier) has quit (Ping timeout: 252 seconds)
2013-05-10 04:17:00	<--	pmenon (~pmenon@70.52.134.185) has quit (Ping timeout: 268 seconds)
2013-05-10 04:17:38	<--	gphat (~gphat@99-8-185-28.lightspeed.snfcca.sbcglobal.net) has quit (Remote host closed the connection)
2013-05-10 04:20:05	-->	mizu_no_oto (~textual@c-76-24-19-222.hsd1.ma.comcast.net) has joined #scala
2013-05-10 04:22:08	-->	pcarrier (~textual@unaffiliated/pcarrier) has joined #scala
2013-05-10 04:22:53	<--	thereisnospoon (~thereisno@113-61-86-28.static.qld.dsl.net.au) has quit (Ping timeout: 252 seconds)
2013-05-10 04:23:05	<--	pettter (pettter@stalin.acc.umu.se) has quit (Ping timeout: 246 seconds)
2013-05-10 04:25:06	<--	jcazeved_ (~jcazevedo@bl18-80-238.dsl.telepac.pt) has quit (Remote host closed the connection)
2013-05-10 04:25:48	-->	bartt (~Adium@c-98-210-237-129.hsd1.ca.comcast.net) has joined #scala
2013-05-10 04:25:58	-->	pettter (pettter@stalin.acc.umu.se) has joined #scala
2013-05-10 04:28:44	-->	bartt1 (~Adium@c-98-210-237-129.hsd1.ca.comcast.net) has joined #scala
2013-05-10 04:30:42	<--	bartt (~Adium@c-98-210-237-129.hsd1.ca.comcast.net) has quit (Ping timeout: 264 seconds)
2013-05-10 04:31:53	-->	RSchulzB (~Adium@67.218.117.3) has joined #scala
2013-05-10 04:34:40	-->	timperrett (~timperret@c-69-181-166-66.hsd1.ca.comcast.net) has joined #scala
2013-05-10 04:36:25	-->	thereisnospoon (~thereisno@113-61-86-28.static.qld.dsl.net.au) has joined #scala
2013-05-10 04:36:45	<--	timperrett (~timperret@c-69-181-166-66.hsd1.ca.comcast.net) has quit (Client Quit)
2013-05-10 04:37:06	-->	timperrett (~timperret@c-69-181-166-66.hsd1.ca.comcast.net) has joined #scala
2013-05-10 04:40:05	<--	RSchulzB (~Adium@67.218.117.3) has quit (Ping timeout: 255 seconds)
2013-05-10 04:41:53	<--	yacks (~py@180.151.36.168) has quit (Ping timeout: 255 seconds)
2013-05-10 04:43:45	-->	yacks (~py@180.151.36.168) has joined #scala
2013-05-10 04:43:46	<--	jamesiry (~Adium@c-24-7-67-118.hsd1.ca.comcast.net) has quit (Quit: Leaving.)
2013-05-10 04:44:55	<--	atamagawarui (~user@unaffiliated/dijkstragroupie) has quit (Quit: Switching machines.)
2013-05-10 04:49:25	-->	SuperTux88 (benjamin@i.have.ipv6.on.coding4coffee.org) has joined #scala
2013-05-10 04:49:29	-->	atamagawarui (~user@unaffiliated/dijkstragroupie) has joined #scala
2013-05-10 04:50:04	<--	thereisnospoon (~thereisno@113-61-86-28.static.qld.dsl.net.au) has quit (Ping timeout: 272 seconds)
2013-05-10 04:50:29	<--	pfurla (~Adium@186.221.83.47) has left #scala
2013-05-10 04:50:33	-->	pfurla (~Adium@186.221.83.47) has joined #scala
2013-05-10 04:51:48	<--	Heero (~Heero@unaffiliated/heero) has quit (Ping timeout: 264 seconds)
2013-05-10 04:51:56	-->	raid (macbookpro@irc.coding4coffee.org) has joined #scala
2013-05-10 04:52:55	SethTisue	reactormonk: yes, Option has orNull
2013-05-10 04:52:56	SethTisue	! (Some("foo").orNull, (None: Option[String]).orNull)
2013-05-10 04:52:56	multibot_	 (String, String) = (foo,null)
2013-05-10 04:55:01	-->	hdoshi (~hdoshi@c-67-180-211-122.hsd1.ca.comcast.net) has joined #scala
2013-05-10 04:55:15	 *	qu1j0t3 buries a kitten
2013-05-10 04:55:44	qu1j0t3	's ok i made sure it was dead first. Tombstone reads: NullPointerException
2013-05-10 04:56:50	copumpkin	! class Foo { final def bar: Int = 5 }; (null: Foo).bar // this would work in C++ :(
2013-05-10 04:56:50	multibot_	 java.lang.NullPointerException
2013-05-10 04:56:51	multibot_	 	at .<init>(<console>:36)
2013-05-10 04:56:52	multibot_	 	at .<clinit>(<console>)
2013-05-10 04:56:53	multibot_	 	at .<init>(<console>:7)
2013-05-10 04:56:54	multibot_	 	at .<clinit>(<console>)
2013-05-10 04:57:30	qu1j0t3	-_-
2013-05-10 04:57:53	qu1j0t3	copumpkin: you forgot    *drops mike*   *marches off stage*
2013-05-10 04:58:08	-->	lizzin (~b@c-24-14-148-164.hsd1.il.comcast.net) has joined #scala
2013-05-10 04:58:11	qu1j0t3	copumpkin: ♥
2013-05-10 04:58:20	-->	Heero (~Heero@c-98-245-11-181.hsd1.co.comcast.net) has joined #scala
2013-05-10 04:58:20	<--	Heero (~Heero@c-98-245-11-181.hsd1.co.comcast.net) has quit (Changing host)
2013-05-10 04:58:20	-->	Heero (~Heero@unaffiliated/heero) has joined #scala
2013-05-10 04:58:32	--	lizzin is now known as Guest53572
2013-05-10 04:58:42	copumpkin	:)
2013-05-10 04:59:02	--	doctau is now known as jlivings_lunch
2013-05-10 05:00:21	<--	hdoshi (~hdoshi@c-67-180-211-122.hsd1.ca.comcast.net) has quit (Ping timeout: 248 seconds)
2013-05-10 05:03:17	-->	thereisnospoon (~thereisno@113-61-86-28.static.qld.dsl.net.au) has joined #scala
2013-05-10 05:03:44	<--	pcarrier (~textual@unaffiliated/pcarrier) has quit (Quit: Computer has gone to sleep.)
2013-05-10 05:03:52	<--	runT1ME (~vmarquez@wsip-98-189-26-19.oc.oc.cox.net) has quit (Quit: runT1ME)
2013-05-10 05:05:47	pfurla	Rschulz2: hey, around?
2013-05-10 05:06:01	Rschulz2	Yeah, I'm here.
2013-05-10 05:06:16	pfurla	How are you doing, Randall?
2013-05-10 05:06:22	<--	Narigo (~Narigo@g229240078.adsl.alicedsl.de) has quit
2013-05-10 05:06:37	Rschulz2	Pretty good. Very busy.
2013-05-10 05:06:43	<--	Guest53572 (~b@c-24-14-148-164.hsd1.il.comcast.net) has quit (Ping timeout: 260 seconds)
2013-05-10 05:06:54	pfurla	I be in SF next month
2013-05-10 05:07:33	Rschulz2	Cool. You gonna' stop by?
2013-05-10 05:08:18	pfurla	I will be there for a week. You mean stop by exactly where?
2013-05-10 05:08:45	Rschulz2	I mean visit Box.
2013-05-10 05:09:14	pfurla	Oh, sure, that'd be awesome
2013-05-10 05:09:38	Rschulz2	When specifically will you be in the area?
2013-05-10 05:10:41	pfurla	Arriving there +- 6/14 'till the 21st
2013-05-10 05:11:02	<--	ranie (~rramiso@124.6.182.55) has quit (Ping timeout: 256 seconds)
2013-05-10 05:11:39	-->	ranie (~rramiso@124.6.182.55) has joined #scala
2013-05-10 05:11:54	Rschulz2	June, yes?
2013-05-10 05:12:18	-->	dankest (~dankest@ip24-254-84-12.sb.sd.cox.net) has joined #scala
2013-05-10 05:12:26	pfurla	yep
2013-05-10 05:13:02	Rschulz2	Could our recruiting people schedule a phone screen with you ahead of time?
2013-05-10 05:13:13	pfurla	sure
2013-05-10 05:13:21	pfurla	that'd be awesome too
2013-05-10 05:13:44	Rschulz2	Great.
2013-05-10 05:14:00	Rschulz2	Is that week before or after Scala Days?
2013-05-10 05:14:07	-->	jamesiry (~Adium@c-24-7-67-118.hsd1.ca.comcast.net) has joined #scala
2013-05-10 05:14:14	pfurla	btw, I brought the subject to set up a beer or something with you
2013-05-10 05:14:20	pfurla	after Scala Days
2013-05-10 05:14:44	-->	infynyxx (~infynyxx@cpe-24-90-84-91.nyc.res.rr.com) has joined #scala
2013-05-10 05:14:58	Rschulz2	We can do that, too!
2013-05-10 05:16:00	pfurla	awesome!
2013-05-10 05:16:21	<--	ranie (~rramiso@124.6.182.55) has quit (Ping timeout: 252 seconds)
2013-05-10 05:17:24	<--	k7k (~k7k@77-254-211-145.adsl.inetia.pl) has quit (Read error: Connection reset by peer)
2013-05-10 05:18:40	<--	jamesiry (~Adium@c-24-7-67-118.hsd1.ca.comcast.net) has quit (Ping timeout: 268 seconds)
2013-05-10 05:23:14	-->	ranie (~rramiso@124.6.182.55) has joined #scala
2013-05-10 05:28:21	-->	lizzin (~b@c-24-14-148-164.hsd1.il.comcast.net) has joined #scala
2013-05-10 05:28:45	--	lizzin is now known as Guest21099
2013-05-10 05:29:29	-->	vramana (~chatzilla@117.207.255.2) has joined #scala
2013-05-10 05:29:44	<--	twoism (~twoism@8.25.194.28) has quit (Ping timeout: 256 seconds)
2013-05-10 05:30:46	pdxleif	What's the state of the art of web input validation these days?  Formlets / digestive functors / etc?
2013-05-10 05:32:58	SethTisue	I had to Google to see if you made those up or not
2013-05-10 05:33:03	<--	nirvdrum (~nirvdrum@pool-173-48-98-124.bstnma.fios.verizon.net) has quit (Ping timeout: 245 seconds)
2013-05-10 05:35:50	<--	m-jack (~chatzilla@cmr-208-97-104-82.cr.net.cable.rogers.com) has quit (Ping timeout: 252 seconds)
2013-05-10 05:36:21	Rschulz2	I think "etc" is real.
2013-05-10 05:36:54	<--	SethTisue (~tisue@c-76-24-29-48.hsd1.ma.comcast.net) has quit (Quit: SethTisue)
2013-05-10 05:37:03	-->	RSchulzB (~Adium@67.218.117.3) has joined #scala
2013-05-10 05:37:21	<--	guampa (~guampa@unaffiliated/guampa) has quit
2013-05-10 05:39:29	pdxleif	Sorry - I'm familiar with http://groups.inf.ed.ac.uk/links/ and http://www.haskell.org/haskellwiki/Formlets and stuff, but that was years ago - haven't kept up.
2013-05-10 05:39:41	-->	francis_wolke (45b5caf6@gateway/web/cgi-irc/kiwiirc.com/ip.69.181.202.246) has joined #scala
2013-05-10 05:40:00	qu1j0t3	seanparsons_: hahahaha
2013-05-10 05:40:02	qu1j0t3	oops
2013-05-10 05:40:07	pdxleif	I just wanna validate input as different stuff, like hex strings, whatevs.
2013-05-10 05:40:59	pdxleif	I guess I could just use regexes.
2013-05-10 05:41:28	 *	qu1j0t3 sees steam rising from Erik Naggum's grave
2013-05-10 05:41:29	pdxleif	But that doesn't sound all cool / futureristic / science-y
2013-05-10 05:43:06	Rogach	pdxleif: I remember somebody attempted to bring formlets to scala, but I don't know if he succeeded.
2013-05-10 05:44:01	pdxleif	Can't you just copy 'n paste haskell code into a scala source file, and intellij will auto-convert it for you?
2013-05-10 05:44:02	-->	blast_hardcheese (~blast_har@unaffiliated/blast-hardcheese/x-0199635) has joined #scala
2013-05-10 05:44:05	-->	jamesiry (~Adium@c-24-7-67-118.hsd1.ca.comcast.net) has joined #scala
2013-05-10 05:44:32	timperrett	@Rogach - that was formaggio: https://github.com/wrwills/formaggio
2013-05-10 05:44:33	lambdabot	Unknown command, try @list
2013-05-10 05:44:45	Rogach	pdxleif: Well, I hear there was a simple haskell plugin for idea, and maybe with it will ;)
2013-05-10 05:44:50	Rogach	pdxleif: But I highly doubt it.
2013-05-10 05:44:57	Rogach	timperrett: Yes, thanks!
2013-05-10 05:45:00	pdxleif	Also found this - maybe a little newer - https://github.com/mads379/scala-formlets
2013-05-10 05:45:17	pdxleif	Just wondering if there was some common tool people are already using, I suppose.
2013-05-10 05:45:22	timperrett	pdxleif: yes, mads was working on that as a toy project, but i don't believe he finished it
2013-05-10 05:45:48	<--	RSchulzB (~Adium@67.218.117.3) has quit (Ping timeout: 272 seconds)
2013-05-10 05:46:50	pdxleif	Someone just add 'Scala' to the list on this page, so I can translate between the two - http://blog.sigfpe.com/2011/01/quine-central.html
2013-05-10 05:51:26	--	pdxleif is now known as pdxleif_away
2013-05-10 05:52:35	<--	jamesiry (~Adium@c-24-7-67-118.hsd1.ca.comcast.net) has quit (Ping timeout: 268 seconds)
2013-05-10 05:54:19	<--	Guest21099 (~b@c-24-14-148-164.hsd1.il.comcast.net) has quit (Ping timeout: 260 seconds)
2013-05-10 05:54:28	<--	timperrett (~timperret@c-69-181-166-66.hsd1.ca.comcast.net) has quit (Quit: timperrett)
2013-05-10 05:56:45	-->	stephenjudkins (~textual@c-67-189-34-121.hsd1.or.comcast.net) has joined #scala
2013-05-10 05:57:02	<--	Agro (~Agro@108-79-20-223.lightspeed.hstntx.sbcglobal.net) has quit (Quit: Leaving)
2013-05-10 05:58:29	-->	nirvdrum (~nirvdrum@pool-173-48-98-124.bstnma.fios.verizon.net) has joined #scala
2013-05-10 06:02:51	<--	kelvl (~kelvl@192-195-80-114-TWIL.static.monkeybrains.net) has quit (Remote host closed the connection)
2013-05-10 06:06:49	<--	infynyxx (~infynyxx@cpe-24-90-84-91.nyc.res.rr.com) has quit (Remote host closed the connection)
2013-05-10 06:08:46	-->	rexim (~rexim@unaffiliated/rexim) has joined #scala
2013-05-10 06:10:18	-->	OOPMan (~Adam_Jorg@105-236-113-162.access.mtnbusiness.co.za) has joined #scala
2013-05-10 06:12:12	<--	daniel_hinojosa (~danno@67-0-179-87.albq.qwest.net) has quit (Ping timeout: 264 seconds)
2013-05-10 06:15:48	<--	asrail (~quassel@177.193.199.186) has quit (Ping timeout: 264 seconds)
2013-05-10 06:15:56	--	pdxleif_away is now known as pdxleif
2013-05-10 06:16:11	-->	tpolecat (~tpolecat@c-24-22-11-146.hsd1.or.comcast.net) has joined #scala
2013-05-10 06:17:40	-->	derek_c (~derekchia@nat-128-84-124-0-949.cit.cornell.edu) has joined #scala
2013-05-10 06:19:48	<--	kobain (~kobian@unaffiliated/kobain) has quit (Quit: l'unica verità.. è la morte stessa!)
2013-05-10 06:19:59	<--	mizu_no_oto (~textual@c-76-24-19-222.hsd1.ma.comcast.net) has quit (Quit: ["Textual IRC Client: www.textualapp.com"])
2013-05-10 06:21:17	-->	jamesiry (~Adium@c-24-7-67-118.hsd1.ca.comcast.net) has joined #scala
2013-05-10 06:22:18	<--	miclorb (~miclorb@ppp121-44-136-248.lns20.syd7.internode.on.net) has quit (Ping timeout: 264 seconds)
2013-05-10 06:24:42	<--	Heero (~Heero@unaffiliated/heero) has quit (Ping timeout: 264 seconds)
2013-05-10 06:26:06	-->	bmahe (~bmahe@c-76-126-242-200.hsd1.ca.comcast.net) has joined #scala
2013-05-10 06:26:06	<--	bmahe (~bmahe@c-76-126-242-200.hsd1.ca.comcast.net) has quit (Changing host)
2013-05-10 06:26:06	-->	bmahe (~bmahe@fsf/member/bmahe) has joined #scala
2013-05-10 06:31:19	-->	gdey (~gdey@108-233-117-89.lightspeed.sndgca.sbcglobal.net) has joined #scala
2013-05-10 06:34:48	-->	timperrett (~timperret@c-69-181-166-66.hsd1.ca.comcast.net) has joined #scala
2013-05-10 06:40:22	--	jlivings_lunch is now known as doctau
2013-05-10 06:42:12	-->	RSchulzB (~Adium@67.218.117.3) has joined #scala
2013-05-10 06:42:57	-->	Score_Under (~Score_Und@90.209.79.78) has joined #scala
2013-05-10 06:43:44	<--	jamesiry (~Adium@c-24-7-67-118.hsd1.ca.comcast.net) has quit (Quit: Leaving.)
2013-05-10 06:44:53	-->	dolio (~dolio@c-174-63-84-118.hsd1.ma.comcast.net) has joined #scala
2013-05-10 06:48:31	-->	m-jack (~chatzilla@cmr-208-97-104-82.cr.net.cable.rogers.com) has joined #scala
2013-05-10 06:48:35	-->	hahuang65 (~hahuang65@c-76-21-60-158.hsd1.ca.comcast.net) has joined #scala
2013-05-10 06:50:24	<--	nirvdrum (~nirvdrum@pool-173-48-98-124.bstnma.fios.verizon.net) has quit (Ping timeout: 272 seconds)
2013-05-10 06:50:51	-->	runT1ME (~vmarquez@172.249.153.209) has joined #scala
2013-05-10 06:51:02	<--	RSchulzB (~Adium@67.218.117.3) has quit (Ping timeout: 272 seconds)
2013-05-10 06:51:09	-->	henrikhodne (~henrikhod@far3052.urh.uiuc.edu) has joined #scala
2013-05-10 06:52:17	-->	sritchie (~sritchie@c-67-180-210-142.hsd1.ca.comcast.net) has joined #scala
2013-05-10 06:53:08	--	pdxleif is now known as pdxleif_away
2013-05-10 06:54:06	<--	timperrett (~timperret@c-69-181-166-66.hsd1.ca.comcast.net) has quit (Quit: timperrett)
2013-05-10 06:55:36	-->	jamesiry (~Adium@c-24-7-67-118.hsd1.ca.comcast.net) has joined #scala
2013-05-10 06:56:27	<--	Score_Under (~Score_Und@90.209.79.78) has quit (Ping timeout: 256 seconds)
2013-05-10 07:05:06	<--	runT1ME (~vmarquez@172.249.153.209) has quit (Quit: runT1ME)
2013-05-10 07:05:23	-->	runT1ME (~vmarquez@cpe-172-249-153-209.socal.res.rr.com) has joined #scala
2013-05-10 07:06:28	-->	timperrett (~timperret@c-69-181-166-66.hsd1.ca.comcast.net) has joined #scala
2013-05-10 07:07:50	-->	divoxx (~divoxx@c-69-181-105-207.hsd1.ca.comcast.net) has joined #scala
2013-05-10 07:08:28	<--	paddymahoney (~patrick@198-84-186-52.cpe.teksavvy.com) has quit (Remote host closed the connection)
2013-05-10 07:11:24	-->	ryanlecompte (~ryanlecom@172-7-149-76.lightspeed.sntcca.sbcglobal.net) has joined #scala
2013-05-10 07:11:50	-->	dacc (~dacc@c-24-17-231-116.hsd1.wa.comcast.net) has joined #scala
2013-05-10 07:11:57	-->	Zweistein (~work@133.51.86.199) has joined #scala
2013-05-10 07:13:18	-->	kelvl (~kelvl@c-24-5-148-128.hsd1.ca.comcast.net) has joined #scala
2013-05-10 07:17:46	<--	kelvl (~kelvl@c-24-5-148-128.hsd1.ca.comcast.net) has quit (Ping timeout: 252 seconds)
2013-05-10 07:18:00	-->	lcfrs (~lcfrs@c-76-102-68-44.hsd1.ca.comcast.net) has joined #scala
2013-05-10 07:18:41	<--	rexim (~rexim@unaffiliated/rexim) has quit (Quit: Leaving)
2013-05-10 07:19:43	<--	hiratara (~hiratara@i218040.dynamic.ppp.asahi-net.or.jp) has quit (Ping timeout: 260 seconds)
2013-05-10 07:20:02	-->	pala21 (~pala@HSI-KBW-134-3-229-202.hsi14.kabel-badenwuerttemberg.de) has joined #scala
2013-05-10 07:20:13	-->	miclorb (~miclorb@1.129.57.36) has joined #scala
2013-05-10 07:24:18	-->	kho`kho` (~phan@144.214.222.125) has joined #scala
2013-05-10 07:24:28	-->	hiratara (~hiratara@j081223.dynamic.ppp.asahi-net.or.jp) has joined #scala
2013-05-10 07:25:25	-->	SethTisue (~tisue@c-76-24-29-48.hsd1.ma.comcast.net) has joined #scala
2013-05-10 07:26:10	-->	headius (~headius@65-128-131-102.mpls.qwest.net) has joined #scala
2013-05-10 07:27:39	<--	headius (~headius@65-128-131-102.mpls.qwest.net) has quit (Client Quit)
2013-05-10 07:27:53	-->	weie_ (~eie@softbank221078042071.bbtec.net) has joined #scala
2013-05-10 07:27:55	<--	pala21 (~pala@HSI-KBW-134-3-229-202.hsi14.kabel-badenwuerttemberg.de) has quit (Read error: Operation timed out)
2013-05-10 07:28:08	-->	HairyFotr1 (~hairy@89-212-217-158.dynamic.t-2.net) has joined #scala
2013-05-10 07:28:49	-->	kelvl (~kelvl@c-24-5-148-128.hsd1.ca.comcast.net) has joined #scala
2013-05-10 07:29:24	<--	weie (~eie@softbank221078042071.bbtec.net) has quit (Ping timeout: 268 seconds)
2013-05-10 07:29:35	-->	eklavya (~eklavya@194.237.142.10) has joined #scala
2013-05-10 07:31:17	-->	lkba (~AndChat@aenq221.neoplus.adsl.tpnet.pl) has joined #scala
2013-05-10 07:33:04	-->	adaro_ (~jkuperus@53518F8B.cm-6-2c.dynamic.ziggo.nl) has joined #scala
2013-05-10 07:35:56	<--	lcfrs (~lcfrs@c-76-102-68-44.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2013-05-10 07:39:14	tnks	I'm a bit surprised there's not more linters for Scala.
2013-05-10 07:39:41	tnks	WartRemover isn't really what I want because I don't think this should be done with macros.
2013-05-10 07:40:17	tnks	The IDEs have some good inspections. . . but running and IDE seems needlessly heavy.
2013-05-10 07:40:26	--	casualjim is now known as casualjim_zzz
2013-05-10 07:46:23	<--	adaro_ (~jkuperus@53518F8B.cm-6-2c.dynamic.ziggo.nl) has quit (Quit: adaro_)
2013-05-10 07:47:16	-->	RSchulzB (~Adium@67.218.117.3) has joined #scala
2013-05-10 07:47:53	<--	epuckett (~Adium@adsl-108-200-234-115.dsl.pltn13.sbcglobal.net) has quit (Quit: Leaving.)
2013-05-10 07:51:45	<--	imeredith (~imeredith@111.69.194.192) has quit (Read error: Connection reset by peer)
2013-05-10 07:52:21	-->	imeredith (~imeredith@254.193.69.111.dynamic.snap.net.nz) has joined #scala
2013-05-10 07:54:11	-->	pantsman (~pantsman@188-222-133-52.zone13.bethere.co.uk) has joined #scala
2013-05-10 07:54:11	<--	pantsman (~pantsman@188-222-133-52.zone13.bethere.co.uk) has quit (Changing host)
2013-05-10 07:54:11	-->	pantsman (~pantsman@pdpc/supporter/active/pantsman) has joined #scala
2013-05-10 07:55:24	<--	RSchulzB (~Adium@67.218.117.3) has quit (Ping timeout: 264 seconds)
2013-05-10 07:56:16	--	wajiii-afk is now known as wajiii
2013-05-10 07:56:40	<--	stephenjudkins (~textual@c-67-189-34-121.hsd1.or.comcast.net) has quit (Quit: Textual IRC Client: www.textualapp.com)
2013-05-10 07:58:32	<--	m-jack (~chatzilla@cmr-208-97-104-82.cr.net.cable.rogers.com) has quit (Ping timeout: 255 seconds)
2013-05-10 07:59:00	-->	kushal (kdas@fedora/kushal) has joined #scala
2013-05-10 08:03:42	<--	miclorb (~miclorb@1.129.57.36) has quit (Remote host closed the connection)
2013-05-10 08:03:56	-->	miclorb (~miclorb@1.129.57.36) has joined #scala
2013-05-10 08:10:16	--	casualjim_zzz is now known as casualjim
2013-05-10 08:14:19	<--	Caelum (rkitover@caelum.cachemiss.com) has quit (Ping timeout: 260 seconds)
2013-05-10 08:16:06	-->	Caelum (rkitover@caelum.cachemiss.com) has joined #scala
2013-05-10 08:16:42	<--	runT1ME (~vmarquez@cpe-172-249-153-209.socal.res.rr.com) has quit (Quit: runT1ME)
2013-05-10 08:17:30	-->	navlelo_ (~df@80.203.225.1) has joined #scala
2013-05-10 08:18:27	<--	francis_wolke (45b5caf6@gateway/web/cgi-irc/kiwiirc.com/ip.69.181.202.246) has quit (Quit: http://www.kiwiirc.com/ - A hand crafted IRC client)
2013-05-10 08:19:45	--	casualjim is now known as casualjim_zzz
2013-05-10 08:22:18	-->	artemk (~artem@95.81.3.50) has joined #scala
2013-05-10 08:22:50	<--	waerloga (~waerloga@unaffiliated/waerloga) has quit (Remote host closed the connection)
2013-05-10 08:22:53	-->	zuzkins (~zuzkins@191.211.broadband3.iol.cz) has joined #scala
2013-05-10 08:23:23	-->	waerloga (~waerloga@unaffiliated/waerloga) has joined #scala
2013-05-10 08:23:43	-->	lcfrs (~lcfrs@50-1-125-250.dsl.dynamic.sonic.net) has joined #scala
2013-05-10 08:23:52	-->	arturaz (~arturas@193.219.158.154) has joined #scala
2013-05-10 08:24:33	<--	tpolecat (~tpolecat@c-24-22-11-146.hsd1.or.comcast.net) has quit (Quit: has left the building.)
2013-05-10 08:24:38	<--	zuzkins (~zuzkins@191.211.broadband3.iol.cz) has quit (Remote host closed the connection)
2013-05-10 08:24:50	-->	MisterD (MisterD@port-92-201-67-188.dynamic.qsc.de) has joined #scala
2013-05-10 08:26:14	<--	timperrett (~timperret@c-69-181-166-66.hsd1.ca.comcast.net) has quit (Quit: timperrett)
2013-05-10 08:27:12	-->	bblfish (~bblfish@AAubervilliers-652-1-240-141.w86-198.abo.wanadoo.fr) has joined #scala
2013-05-10 08:29:19	<--	divoxx (~divoxx@c-69-181-105-207.hsd1.ca.comcast.net) has quit (Quit: Leaving...)
2013-05-10 08:29:56	-->	bitonic (~user@176.27.229.121) has joined #scala
2013-05-10 08:30:32	<--	Zweistein (~work@133.51.86.199) has quit (Quit: Zweistein)
2013-05-10 08:31:06	-->	lcfrs_ (~lcfrs@50-1-125-250.dsl.dynamic.sonic.net) has joined #scala
2013-05-10 08:32:22	<--	kushal (kdas@fedora/kushal) has quit (Ping timeout: 272 seconds)
2013-05-10 08:32:59	<--	lcfrs (~lcfrs@50-1-125-250.dsl.dynamic.sonic.net) has quit (Ping timeout: 260 seconds)
2013-05-10 08:33:15	<--	ryanlecompte (~ryanlecom@172-7-149-76.lightspeed.sntcca.sbcglobal.net) has quit (Remote host closed the connection)
2013-05-10 08:33:35	<--	miclorb (~miclorb@1.129.57.36) has quit (Remote host closed the connection)
2013-05-10 08:36:03	<--	dankest (~dankest@ip24-254-84-12.sb.sd.cox.net) has quit (Quit: Leaving...)
2013-05-10 08:39:46	-->	beolnix (~beolnix@188.134.48.72) has joined #scala
2013-05-10 08:40:29	--	casualjim_zzz is now known as casualjim
2013-05-10 08:40:49	-->	miclorb (~miclorb@1.129.57.36) has joined #scala
2013-05-10 08:41:45	<--	dolio (~dolio@c-174-63-84-118.hsd1.ma.comcast.net) has quit (Quit: Leaving)
2013-05-10 08:44:17	-->	like-a-boss (~like-a-bo@ip-220-189.ists.pl) has joined #scala
2013-05-10 08:44:33	-->	kushal (kdas@fedora/kushal) has joined #scala
2013-05-10 08:46:34	-->	Leon (~Leon@s83-180-231-178.cust.tele2.se) has joined #scala
2013-05-10 08:48:33	-->	lizzin (~b@c-24-14-148-164.hsd1.il.comcast.net) has joined #scala
2013-05-10 08:48:46	-->	shock_one (~shock_one@46.118.141.174) has joined #scala
2013-05-10 08:48:57	--	lizzin is now known as Guest16342
2013-05-10 08:49:52	-->	przl (~przlrkt@p5B298FD1.dip0.t-ipconnect.de) has joined #scala
2013-05-10 08:49:56	<--	doctau (~doctau@2001:44b8:21b1:8100:2677:3ff:fe37:2638) has quit (Quit: Leaving)
2013-05-10 08:50:02	--	Watcher7 is now known as Watcher7|off
2013-05-10 08:51:17	-->	jkriesten (~jkriesten@31-18-184-115-dynip.superkabel.de) has joined #scala
2013-05-10 08:52:11	-->	neutrino_ (~neutrino@p57AE969B.dip0.t-ipconnect.de) has joined #scala
2013-05-10 08:52:18	-->	RSchulzB (~Adium@67.218.117.3) has joined #scala
2013-05-10 08:52:49	-->	tpolecat (~tpolecat@c-24-22-11-146.hsd1.or.comcast.net) has joined #scala
2013-05-10 08:53:56	--	casualjim is now known as casualjim_zzz
2013-05-10 08:55:14	<--	neutrino1 (~neutrino@p57AE9704.dip0.t-ipconnect.de) has quit (Ping timeout: 255 seconds)
2013-05-10 08:56:42	<--	MisterD (MisterD@port-92-201-67-188.dynamic.qsc.de) has quit (Quit: Read Error: 1337 (to leet to stay on server))
2013-05-10 08:58:29	<--	bblfish (~bblfish@AAubervilliers-652-1-240-141.w86-198.abo.wanadoo.fr) has quit (Remote host closed the connection)
2013-05-10 08:58:57	<--	jamesiry (~Adium@c-24-7-67-118.hsd1.ca.comcast.net) has quit (Quit: Leaving.)
2013-05-10 08:59:43	-->	divoxx (~divoxx@c-69-181-105-207.hsd1.ca.comcast.net) has joined #scala
2013-05-10 09:00:09	<--	deuteros_ (~deuteros@unaffiliated/deuteros) has quit (Quit: deuteros_)
2013-05-10 09:00:34	-->	MCamou (~Adium@wan.taric.es) has joined #scala
2013-05-10 09:01:22	<--	RSchulzB (~Adium@67.218.117.3) has quit (Ping timeout: 276 seconds)
2013-05-10 09:03:28	<--	bitonic (~user@176.27.229.121) has quit (Remote host closed the connection)
2013-05-10 09:04:00	--	gpampara_off is now known as gpampara
2013-05-10 09:04:21	-->	folone (~folone@91.102.12.198) has joined #scala
2013-05-10 09:04:55	-->	rushboy (~rushi@122.170.43.242) has joined #scala
2013-05-10 09:05:02	-->	bblfish (~bblfish@AAubervilliers-652-1-240-141.w86-198.abo.wanadoo.fr) has joined #scala
2013-05-10 09:05:08	<--	MCamou (~Adium@wan.taric.es) has quit (Ping timeout: 256 seconds)
2013-05-10 09:06:20	-->	lcfrs (~lcfrs@50-1-125-250.dsl.dynamic.sonic.net) has joined #scala
2013-05-10 09:06:26	-->	BadDesign (~cpp@unaffiliated/baddesign) has joined #scala
2013-05-10 09:08:04	<--	thereisnospoon (~thereisno@113-61-86-28.static.qld.dsl.net.au) has quit (Ping timeout: 268 seconds)
2013-05-10 09:08:17	<--	lcfrs_ (~lcfrs@50-1-125-250.dsl.dynamic.sonic.net) has quit (Ping timeout: 255 seconds)
2013-05-10 09:09:06	<--	divoxx (~divoxx@c-69-181-105-207.hsd1.ca.comcast.net) has quit (Ping timeout: 272 seconds)
2013-05-10 09:12:16	<--	beolnix (~beolnix@188.134.48.72) has quit (Ping timeout: 272 seconds)
2013-05-10 09:12:28	-->	rushi__ (~rushi@122.170.43.146) has joined #scala
2013-05-10 09:12:45	<--	shrewdu (~arn@192.210.214.195) has quit (Quit: Lost terminal)
2013-05-10 09:13:44	<--	tpolecat (~tpolecat@c-24-22-11-146.hsd1.or.comcast.net) has quit (Quit: is having a little nap now.)
2013-05-10 09:14:36	<--	rushboy (~rushi@122.170.43.242) has quit (Ping timeout: 264 seconds)
2013-05-10 09:18:43	-->	stdDoubt (~ptiago@a79-169-41-79.cpe.netcabo.pt) has joined #scala
2013-05-10 09:18:44	-->	gildegoma (~gildegoma@vpn.static.83-173-201-166.cybernet.ch) has joined #scala
2013-05-10 09:19:03	stdDoubt	what tool would you recommend to profile scala code?
2013-05-10 09:19:55	<--	predator117 (~predator1@p5080468F.dip0.t-ipconnect.de) has quit (Ping timeout: 256 seconds)
2013-05-10 09:20:51	-->	ilpuccio (~ra@212.31.227.18) has joined #scala
2013-05-10 09:22:24	<--	jhaberstro (~textual@user-0cemip4.cable.mindspring.com) has quit (Quit: My MacBook Pro has gone to sleep. ZZZzzz…)
2013-05-10 09:22:41	<--	kushal (kdas@fedora/kushal) has quit (Ping timeout: 255 seconds)
2013-05-10 09:23:49	<--	OOPMan (~Adam_Jorg@105-236-113-162.access.mtnbusiness.co.za) has quit (Read error: Connection reset by peer)
2013-05-10 09:24:49	-->	matheus23 (~quassel@p4FDF3637.dip0.t-ipconnect.de) has joined #scala
2013-05-10 09:24:56	<--	shock_one (~shock_one@46.118.141.174) has quit (Ping timeout: 272 seconds)
2013-05-10 09:25:54	-->	ramses_ (~ramses@cl-1301.bru-01.be.sixxs.net) has joined #scala
2013-05-10 09:28:02	-->	predator117 (~predator1@p5080468F.dip0.t-ipconnect.de) has joined #scala
2013-05-10 09:29:46	-->	dolio (~dolio@c-174-63-84-118.hsd1.ma.comcast.net) has joined #scala
2013-05-10 09:29:49	<--	SingingBoyo (~brandon@d154-5-190-48.bchsia.telus.net) has quit (Read error: Connection reset by peer)
2013-05-10 09:31:36	adelbertc	stdDoubt: try takipi http://www.takipi.com/scala.html
2013-05-10 09:32:19	stdDoubt	thanks
2013-05-10 09:32:47	-->	zuzkins (~zuzkins@doit.inkubator.cvut.cz) has joined #scala
2013-05-10 09:33:12	adelbertc	stdDoubt: otherwise any JVM profiler will work.. virtualvm, etc
2013-05-10 09:34:30	-->	divoxx (~divoxx@c-69-181-105-207.hsd1.ca.comcast.net) has joined #scala
2013-05-10 09:35:02	-->	kushal (kdas@fedora/kushal) has joined #scala
2013-05-10 09:36:03	-->	mercwithamouth (~kingdom@99-38-191-69.lightspeed.clmasc.sbcglobal.net) has joined #scala
2013-05-10 09:37:27	-->	qwerty_nor (~Thunderbi@46.118.71.85) has joined #scala
2013-05-10 09:43:06	<--	neutrino_ (~neutrino@p57AE969B.dip0.t-ipconnect.de) has quit (Ping timeout: 252 seconds)
2013-05-10 09:43:53	-->	ryanlecompte (~ryanlecom@172-7-149-76.lightspeed.sntcca.sbcglobal.net) has joined #scala
2013-05-10 09:44:14	<--	predator117 (~predator1@p5080468F.dip0.t-ipconnect.de) has quit (Ping timeout: 256 seconds)
2013-05-10 09:45:26	--	casualjim_zzz is now known as casualjim
2013-05-10 09:46:18	<--	divoxx (~divoxx@c-69-181-105-207.hsd1.ca.comcast.net) has quit (Ping timeout: 264 seconds)
2013-05-10 09:46:26	<--	miclorb (~miclorb@1.129.57.36) has quit (Remote host closed the connection)
2013-05-10 09:47:11	<--	arussel (~user@2a02:2788:64:24c:6aa8:6dff:fe24:60a) has left #scala ("ERC Version 5.3 (IRC client for Emacs)")
2013-05-10 09:47:40	-->	zakora (~NC@tok69-4-82-236-111-173.fbx.proxad.net) has joined #scala
2013-05-10 09:47:49	-->	scott_w (~quassel@93-97-174-114.zone5.bethere.co.uk) has joined #scala
2013-05-10 09:48:36	<--	ryanlecompte (~ryanlecom@172-7-149-76.lightspeed.sntcca.sbcglobal.net) has quit (Ping timeout: 252 seconds)
2013-05-10 09:50:39	-->	talios (~textual@ip-118-90-53-167.xdsl.xnet.co.nz) has joined #scala
2013-05-10 09:50:57	-->	tsinnema (~tsinnema@dsl-espbrasgw1-50dfb9-125.dhcp.inet.fi) has joined #scala
2013-05-10 09:53:57	<--	trepidaciousMBR (~trepidaci@217.155.204.2) has quit (Quit: trepidaciousMBR)
2013-05-10 09:54:45	<--	yacks (~py@180.151.36.168) has quit (Ping timeout: 248 seconds)
2013-05-10 09:55:02	--	casualjim is now known as casualjim_zzz
2013-05-10 09:55:34	-->	pala21 (~pala@2a00:1398:9:fb00:222:faff:feeb:5ffc) has joined #scala
2013-05-10 09:55:44	<--	pantsman (~pantsman@pdpc/supporter/active/pantsman) has quit (Ping timeout: 252 seconds)
2013-05-10 09:56:41	<--	rushi__ (~rushi@122.170.43.146) has quit (Quit: Leaving)
2013-05-10 09:56:52	-->	predator117 (~predator1@p5080468F.dip0.t-ipconnect.de) has joined #scala
2013-05-10 09:57:26	-->	RSchulzB (~Adium@67.218.117.3) has joined #scala
2013-05-10 09:58:20	-->	imjsilva (~joaosilva@20.161.broadband17.iol.cz) has joined #scala
2013-05-10 10:00:29	<--	Guest16342 (~b@c-24-14-148-164.hsd1.il.comcast.net) has quit (Ping timeout: 268 seconds)
2013-05-10 10:04:16	<--	dolio (~dolio@c-174-63-84-118.hsd1.ma.comcast.net) has quit (Quit: Leaving)
2013-05-10 10:04:50	<--	ktosiek (~quassel@46.22.173.54) has quit (Ping timeout: 272 seconds)
2013-05-10 10:05:40	<--	predator117 (~predator1@p5080468F.dip0.t-ipconnect.de) has quit (Ping timeout: 252 seconds)
2013-05-10 10:06:39	<--	RSchulzB (~Adium@67.218.117.3) has quit (Ping timeout: 268 seconds)
2013-05-10 10:06:55	-->	predator117 (~predator1@p5080468F.dip0.t-ipconnect.de) has joined #scala
2013-05-10 10:06:57	-->	ktosiek (~quassel@46.22.173.54) has joined #scala
2013-05-10 10:07:37	-->	atoll (~atoll@84-74-102-216.dclient.hispeed.ch) has joined #scala
2013-05-10 10:07:57	-->	yacks (~py@180.151.36.168) has joined #scala
2013-05-10 10:08:49	-->	Nekuromento (~Nekuromen@91.187.26.197) has joined #scala
2013-05-10 10:09:18	-->	bitonic (~user@176.27.229.121) has joined #scala
2013-05-10 10:12:21	<--	dacc (~dacc@c-24-17-231-116.hsd1.wa.comcast.net) has quit (Ping timeout: 248 seconds)
2013-05-10 10:12:38	-->	Naktibalda (~chatzilla@host-81-20-37-12.eckoh.com) has joined #scala
2013-05-10 10:13:18	<--	lkba (~AndChat@aenq221.neoplus.adsl.tpnet.pl) has quit (Ping timeout: 264 seconds)
2013-05-10 10:14:39	-->	neutrino_ (~neutrino@zentrale.gutefrage.net) has joined #scala
2013-05-10 10:16:03	-->	milessabin (~miles@private.milessabin.com) has joined #scala
2013-05-10 10:16:14	<--	predator117 (~predator1@p5080468F.dip0.t-ipconnect.de) has quit (Ping timeout: 255 seconds)
2013-05-10 10:18:19	-->	LennyLinux (~LennyLinu@151.64.1.88) has joined #scala
2013-05-10 10:19:45	-->	mariaDa2 (~dark@ip-d24b.d-net.kiev.ua) has joined #scala
2013-05-10 10:20:38	-->	lizzin (~b@c-24-14-148-164.hsd1.il.comcast.net) has joined #scala
2013-05-10 10:21:02	--	lizzin is now known as Guest56573
2013-05-10 10:21:12	<--	raid (macbookpro@irc.coding4coffee.org) has quit (Ping timeout: 264 seconds)
2013-05-10 10:22:47	<--	lcfrs (~lcfrs@50-1-125-250.dsl.dynamic.sonic.net) has quit (Remote host closed the connection)
2013-05-10 10:23:14	<--	bmahe (~bmahe@fsf/member/bmahe) has quit (Read error: Connection reset by peer)
2013-05-10 10:23:31	-->	raid (macbookpro@irc.coding4coffee.org) has joined #scala
2013-05-10 10:24:56	<--	zakora (~NC@tok69-4-82-236-111-173.fbx.proxad.net) has quit (Quit: Quit: Textual IRC Client: www.textualapp.com)
2013-05-10 10:25:20	-->	Ashoat (~Ashoat@c-67-171-17-59.hsd1.wa.comcast.net) has joined #scala
2013-05-10 10:25:52	<--	Kneiva (~kneiva@raah.fi) has left #scala ("bye")
2013-05-10 10:26:39	<--	pala21 (~pala@2a00:1398:9:fb00:222:faff:feeb:5ffc) has left #scala
2013-05-10 10:28:43	-->	OOPMan (~adamj@41-134-255-154.dsl.mweb.co.za) has joined #scala
2013-05-10 10:29:09	-->	Eldariof-ru (~CLD@pppoe-206-10-dyn-sr.volgaline.ru) has joined #scala
2013-05-10 10:29:09	-->	milosn_ (~milosn@user-5af501c0.broadband.tesco.net) has joined #scala
2013-05-10 10:29:52	<--	Ashoat (~Ashoat@c-67-171-17-59.hsd1.wa.comcast.net) has quit (Ping timeout: 252 seconds)
2013-05-10 10:30:30	<--	stdDoubt (~ptiago@a79-169-41-79.cpe.netcabo.pt) has quit (Remote host closed the connection)
2013-05-10 10:31:23	-->	Ashoat (~Ashoat@69.63.185.56) has joined #scala
2013-05-10 10:32:00	<--	milosn (~milosn@user-5af50a8b.broadband.tesco.net) has quit (Ping timeout: 264 seconds)
2013-05-10 10:34:13	<--	Nekuromento (~Nekuromen@91.187.26.197) has quit (Quit: Nekuromento)
2013-05-10 10:34:34	-->	lcfrs (~lcfrs@50-1-125-250.dsl.dynamic.sonic.net) has joined #scala
2013-05-10 10:35:03	-->	jamesiry (~Adium@c-24-7-67-118.hsd1.ca.comcast.net) has joined #scala
2013-05-10 10:36:50	-->	piggybox_ (~piggybox@c-71-202-16-136.hsd1.ca.comcast.net) has joined #scala
2013-05-10 10:37:37	-->	gildegoma_ (~gildegoma@vpn.static.83-173-201-166.cybernet.ch) has joined #scala
2013-05-10 10:37:54	-->	lcfrs_ (~lcfrs@50-1-125-250.dsl.dynamic.sonic.net) has joined #scala
2013-05-10 10:37:57	-->	mary5030_ (~mary5030@72.32.115.231) has joined #scala
2013-05-10 10:39:12	<--	jmvanel (~jmvanel@219.142.139.88.rev.sfr.net) has quit (Ping timeout: 252 seconds)
2013-05-10 10:39:57	<--	jamesiry (~Adium@c-24-7-67-118.hsd1.ca.comcast.net) has quit (Ping timeout: 268 seconds)
2013-05-10 10:40:16	-->	jcazevedo (~jcazevedo@bl18-80-238.dsl.telepac.pt) has joined #scala
2013-05-10 10:42:03	-->	divoxx (~divoxx@c-69-181-105-207.hsd1.ca.comcast.net) has joined #scala
2013-05-10 10:42:48	<--	Eldariof-ru (~CLD@pppoe-206-10-dyn-sr.volgaline.ru) has quit (Ping timeout: 264 seconds)
2013-05-10 10:43:18	<--	mariaDa2 (~dark@ip-d24b.d-net.kiev.ua) has quit (Ping timeout: 264 seconds)
2013-05-10 10:43:37	-->	rsuniev123 (~textual@static-88.131.62.36.addr.tdcsong.se) has joined #scala
2013-05-10 10:44:36	<--	flowsnake (~flowsnake@cpc26-aztw25-2-0-cust894.aztw.cable.virginmedia.com) has quit (Read error: Operation timed out)
2013-05-10 10:44:42	<--	bblfish (~bblfish@AAubervilliers-652-1-240-141.w86-198.abo.wanadoo.fr) has quit (Ping timeout: 252 seconds)
2013-05-10 10:45:18	-->	alippai (~alippai@cuppa.sch.bme.hu) has joined #scala
2013-05-10 10:45:56	--	casualjim_zzz is now known as casualjim
2013-05-10 10:46:18	<--	lcfrs (~lcfrs@50-1-125-250.dsl.dynamic.sonic.net) has quit (*.net *.split)
2013-05-10 10:46:18	<--	yacks (~py@180.151.36.168) has quit (*.net *.split)
2013-05-10 10:46:18	<--	gildegoma (~gildegoma@vpn.static.83-173-201-166.cybernet.ch) has quit (*.net *.split)
2013-05-10 10:46:18	<--	arturaz (~arturas@193.219.158.154) has quit (*.net *.split)
2013-05-10 10:46:18	<--	eklavya (~eklavya@194.237.142.10) has quit (*.net *.split)
2013-05-10 10:46:18	<--	mary5030 (~mary5030@72.32.115.231) has quit (*.net *.split)
2013-05-10 10:46:18	<--	piggybox (~piggybox@c-71-202-16-136.hsd1.ca.comcast.net) has quit (*.net *.split)
2013-05-10 10:46:18	<--	DigitalKiwi (~kiwi@ip174-74-81-77.om.om.cox.net) has quit (*.net *.split)
2013-05-10 10:46:18	<--	pa (~pa@unaffiliated/pa) has quit (*.net *.split)
2013-05-10 10:46:18	<--	ironm (~ironm@84-75-222-49.dclient.hispeed.ch) has quit (*.net *.split)
2013-05-10 10:46:20	--	gildegoma_ is now known as gildegoma
2013-05-10 10:46:39	-->	enriclluelles (~enricllue@87.111.204.186) has joined #scala
2013-05-10 10:46:44	<--	divoxx (~divoxx@c-69-181-105-207.hsd1.ca.comcast.net) has quit (Ping timeout: 252 seconds)
2013-05-10 10:47:41	-->	DigitalKiwi (~kiwi@ip174-74-81-77.om.om.cox.net) has joined #scala
2013-05-10 10:48:18	-->	eklavya (~eklavya@194.237.142.10) has joined #scala
2013-05-10 10:49:24	-->	ironm (~ironm@84-75-222-49.dclient.hispeed.ch) has joined #scala
2013-05-10 10:50:51	-->	yacks (~py@180.151.36.168) has joined #scala
2013-05-10 10:51:04	-->	arturaz (~arturas@193.219.158.154) has joined #scala
2013-05-10 10:51:10	-->	atamagaw` (~user@190.222.142.194) has joined #scala
2013-05-10 10:51:32	-->	flowsnake (~flowsnake@cpc26-aztw25-2-0-cust894.aztw.cable.virginmedia.com) has joined #scala
2013-05-10 10:51:41	-->	weie (~eie@softbank221078042071.bbtec.net) has joined #scala
2013-05-10 10:51:46	-->	MachineMuse_ (~quassel@S01060026f317b950.ed.shawcable.net) has joined #scala
2013-05-10 10:51:52	-->	Droggl__ (~quassel@mail.sourcewave.de) has joined #scala
2013-05-10 10:51:57	<--	Droggl__ (~quassel@mail.sourcewave.de) has quit (Changing host)
2013-05-10 10:51:57	-->	Droggl__ (~quassel@unaffiliated/droggl) has joined #scala
2013-05-10 10:52:15	-->	scott_walton (~quassel@93-97-174-114.zone5.bethere.co.uk) has joined #scala
2013-05-10 10:52:39	--	wajiii is now known as wajiii-afk
2013-05-10 10:52:47	-->	Arrgh (~alex@S01064ce676224df4.vc.shawcable.net) has joined #scala
2013-05-10 10:53:40	-->	pa (~pa@unaffiliated/pa) has joined #scala
2013-05-10 10:54:01	-->	soulofpe1ce (~soulofpea@119.75.11.250) has joined #scala
2013-05-10 10:54:08	-->	Kuba (~jakub@unaffiliated/kuba) has joined #scala
2013-05-10 10:55:23	--	casualjim is now known as casualjim_zzz
2013-05-10 10:56:02	-->	_main_ (~main@c-67-180-22-241.hsd1.ca.comcast.net) has joined #scala
2013-05-10 10:56:13	<--	lcfrs_ (~lcfrs@50-1-125-250.dsl.dynamic.sonic.net) has quit (Remote host closed the connection)
2013-05-10 10:56:28	-->	colock (~colock@unaffiliated/colock) has joined #scala
2013-05-10 10:57:53	-->	dmil (~dmilith@verknowsys.com) has joined #scala
2013-05-10 10:58:13	<--	kelvl (~kelvl@c-24-5-148-128.hsd1.ca.comcast.net) has quit (Remote host closed the connection)
2013-05-10 10:58:56	-->	imjsilva_ (~joaosilva@20.161.broadband17.iol.cz) has joined #scala
2013-05-10 10:59:04	<--	piggybox_ (~piggybox@c-71-202-16-136.hsd1.ca.comcast.net) has quit (*.net *.split)
2013-05-10 10:59:04	<--	atoll (~atoll@84-74-102-216.dclient.hispeed.ch) has quit (*.net *.split)
2013-05-10 10:59:04	<--	imjsilva (~joaosilva@20.161.broadband17.iol.cz) has quit (*.net *.split)
2013-05-10 10:59:04	<--	scott_w (~quassel@93-97-174-114.zone5.bethere.co.uk) has quit (*.net *.split)
2013-05-10 10:59:04	<--	weie_ (~eie@softbank221078042071.bbtec.net) has quit (*.net *.split)
2013-05-10 10:59:04	<--	hahuang65 (~hahuang65@c-76-21-60-158.hsd1.ca.comcast.net) has quit (*.net *.split)
2013-05-10 10:59:04	<--	atamagawarui (~user@unaffiliated/dijkstragroupie) has quit (*.net *.split)
2013-05-10 10:59:04	<--	bartt1 (~Adium@c-98-210-237-129.hsd1.ca.comcast.net) has quit (*.net *.split)
2013-05-10 10:59:04	<--	soulofpeace (~soulofpea@119.75.11.250) has quit (*.net *.split)
2013-05-10 10:59:04	<--	MachineMuse (~quassel@S01060026f317b950.ed.shawcable.net) has quit (*.net *.split)
2013-05-10 10:59:04	<--	Arr`Gone (~alex@S01064ce676224df4.vc.shawcable.net) has quit (*.net *.split)
2013-05-10 10:59:05	<--	Droggl (~quassel@unaffiliated/droggl) has quit (*.net *.split)
2013-05-10 10:59:05	<--	Kuba_ (~jakub@87-239-45-70.ip.gronet.pl) has quit (*.net *.split)
2013-05-10 10:59:08	<--	dmilith (~dmilith@verknowsys.com) has quit (*.net *.split)
2013-05-10 10:59:08	<--	__main__ (~main@c-67-180-22-241.hsd1.ca.comcast.net) has quit (*.net *.split)
2013-05-10 10:59:08	--	dmil is now known as dmilith
2013-05-10 10:59:08	--	imjsilva_ is now known as imjsilva
2013-05-10 11:00:02	--	_main_ is now known as __main__
2013-05-10 11:01:07	-->	piggybox_ (~piggybox@c-71-202-16-136.hsd1.ca.comcast.net) has joined #scala
2013-05-10 11:01:07	-->	atoll (~atoll@84-74-102-216.dclient.hispeed.ch) has joined #scala
2013-05-10 11:01:07	-->	16WAAVUPD (~joaosilva@20.161.broadband17.iol.cz) has joined #scala
2013-05-10 11:01:07	-->	scott_w (~quassel@93-97-174-114.zone5.bethere.co.uk) has joined #scala
2013-05-10 11:01:07	-->	weie_ (~eie@softbank221078042071.bbtec.net) has joined #scala
2013-05-10 11:01:07	-->	hahuang65 (~hahuang65@c-76-21-60-158.hsd1.ca.comcast.net) has joined #scala
2013-05-10 11:01:07	-->	atamagawarui (~user@unaffiliated/dijkstragroupie) has joined #scala
2013-05-10 11:01:07	-->	bartt1 (~Adium@c-98-210-237-129.hsd1.ca.comcast.net) has joined #scala
2013-05-10 11:01:07	-->	MachineMuse (~quassel@S01060026f317b950.ed.shawcable.net) has joined #scala
2013-05-10 11:01:07	-->	Arr`Gone (~alex@S01064ce676224df4.vc.shawcable.net) has joined #scala
2013-05-10 11:01:07	-->	16WAAULLX (~dmilith@verknowsys.com) has joined #scala
2013-05-10 11:01:17	<--	kppullin (~kppullin@pdpc/supporter/active/kppullin) has quit (Excess Flood)
2013-05-10 11:01:21	<--	scott_w (~quassel@93-97-174-114.zone5.bethere.co.uk) has quit (Max SendQ exceeded)
2013-05-10 11:01:22	<--	weie_ (~eie@softbank221078042071.bbtec.net) has quit (Max SendQ exceeded)
2013-05-10 11:01:25	-->	bblfish (~bblfish@AAubervilliers-651-1-306-218.w83-114.abo.wanadoo.fr) has joined #scala
2013-05-10 11:01:36	<--	16WAAULLX (~dmilith@verknowsys.com) has quit (Read error: Operation timed out)
2013-05-10 11:01:55	<--	16WAAVUPD (~joaosilva@20.161.broadband17.iol.cz) has quit (Ping timeout: 246 seconds)
2013-05-10 11:01:55	<--	atamagawarui (~user@unaffiliated/dijkstragroupie) has quit (Ping timeout: 246 seconds)
2013-05-10 11:01:55	<--	Arr`Gone (~alex@S01064ce676224df4.vc.shawcable.net) has quit (Ping timeout: 246 seconds)
2013-05-10 11:02:18	-->	shellac (~pldms@snowball.ilrt.bris.ac.uk) has joined #scala
2013-05-10 11:02:28	-->	RSchulzB (~Adium@67.218.117.3) has joined #scala
2013-05-10 11:03:35	-->	kppullin (~kppullin@pdpc/supporter/active/kppullin) has joined #scala
2013-05-10 11:04:11	<--	hahuang65 (~hahuang65@c-76-21-60-158.hsd1.ca.comcast.net) has quit (Ping timeout: 256 seconds)
2013-05-10 11:04:11	<--	MachineMuse (~quassel@S01060026f317b950.ed.shawcable.net) has quit (Ping timeout: 256 seconds)
2013-05-10 11:08:29	-->	SeriousWorm (~sworm@bnet2385.x3d.carnet.hr) has joined #scala
2013-05-10 11:08:48	<--	derek_c (~derekchia@nat-128-84-124-0-949.cit.cornell.edu) has quit (Quit: leaving)
2013-05-10 11:09:57	<--	Ashoat (~Ashoat@69.63.185.56) has quit (Ping timeout: 248 seconds)
2013-05-10 11:10:08	-->	coindiff (~coindiff@unaffiliated/coindiff) has joined #scala
2013-05-10 11:10:54	<--	RSchulzB (~Adium@67.218.117.3) has quit (Ping timeout: 264 seconds)
2013-05-10 11:11:52	-->	ajhager_ (~ajhager@108-71-214-22.lightspeed.iplsin.sbcglobal.net) has joined #scala
2013-05-10 11:12:04	-->	trepidaciousMBR (~trepidaci@176.62.208.227) has joined #scala
2013-05-10 11:12:09	-->	lizzin_ (~b@c-24-14-148-164.hsd1.il.comcast.net) has joined #scala
2013-05-10 11:13:41	<--	mercwithamouth (~kingdom@99-38-191-69.lightspeed.clmasc.sbcglobal.net) has quit (Ping timeout: 248 seconds)
2013-05-10 11:13:57	-->	talios_ (~textual@ip-118-90-53-167.xdsl.xnet.co.nz) has joined #scala
2013-05-10 11:14:02	-->	MCamou (~Adium@wan.taric.es) has joined #scala
2013-05-10 11:14:08	-->	Ezku_ (saukkee@kosh.org.aalto.fi) has joined #scala
2013-05-10 11:14:08	-->	duncanm_ (~duncan@a-chinaman.com) has joined #scala
2013-05-10 11:14:12	-->	Ry4an_ (~ry4an@li103-234.members.linode.com) has joined #scala
2013-05-10 11:14:13	-->	bjartek_ (bjartka@horisont.pvv.ntnu.no) has joined #scala
2013-05-10 11:14:50	-->	mjc` (~user@frost.sekurity.org) has joined #scala
2013-05-10 11:14:53	-->	iraklis1 (~Thunderbi@athedsl-4503310.home.otenet.gr) has joined #scala
2013-05-10 11:15:05	-->	jberkel_ (uid3928@gateway/web/irccloud.com/x-yrltbgrfjkupsfny) has joined #scala
2013-05-10 11:15:08	-->	eamelink (~quassel@2001:610:7de:0:2dc8:2255:9081:9372) has joined #scala
2013-05-10 11:15:42	-->	verma_ (~verma@thor.udayv.com) has joined #scala
2013-05-10 11:15:46	<--	imjsilva (~joaosilva@20.161.broadband17.iol.cz) has quit (Ping timeout: 272 seconds)
2013-05-10 11:15:51	-->	genehack_ (~genehack@65.49.60.231) has joined #scala
2013-05-10 11:16:00	-->	stonecol1devin (~dhoss@69.30.53.42) has joined #scala
2013-05-10 11:16:01	-->	alippai1 (~alippai@cuppa.sch.bme.hu) has joined #scala
2013-05-10 11:16:19	<--	arturaz (~arturas@193.219.158.154) has quit (Ping timeout: 260 seconds)
2013-05-10 11:16:21	-->	keras_ (~foo@a88-115-213-147.elisa-laajakaista.fi) has joined #scala
2013-05-10 11:16:53	-->	predator117 (~predator1@p5080468F.dip0.t-ipconnect.de) has joined #scala
2013-05-10 11:17:15	-->	justinmcp_ (quassel@2600:3c03::f03c:91ff:fedf:3fac) has joined #scala
2013-05-10 11:17:18	-->	rodgort (~rodgort@li125-242.members.linode.com) has joined #scala
2013-05-10 11:19:18	<--	17SACS680 (~tessi@pdpc/supporter/student/tessi) has quit (Ping timeout: 245 seconds)
2013-05-10 11:19:55	<--	rsuniev123 (~textual@static-88.131.62.36.addr.tdcsong.se) has quit (Quit: Computer has gone to sleep.)
2013-05-10 11:20:20	-->	fbe_ (~fbe@chat.felixbecker.name) has joined #scala
2013-05-10 11:20:24	-->	phite (~tessi@pdpc/supporter/student/tessi) has joined #scala
2013-05-10 11:20:26	-->	pionic (~pionic@217.142.157.81) has joined #scala
2013-05-10 11:21:27	-->	ntelford_ (~ntelford@diag-2-2.rdg.ac.uk) has joined #scala
2013-05-10 11:21:28	<--	coindiff (~coindiff@unaffiliated/coindiff) has quit (Quit: Leaving)
2013-05-10 11:21:39	<--	jcazevedo (~jcazevedo@bl18-80-238.dsl.telepac.pt) has quit (Remote host closed the connection)
2013-05-10 11:21:41	-->	spiffxp_ (~spiffxp@15.185.114.44) has joined #scala
2013-05-10 11:21:46	<--	mjc (~user@frost.sekurity.org) has quit (Read error: Connection reset by peer)
2013-05-10 11:21:46	<--	raid (macbookpro@irc.coding4coffee.org) has quit (Ping timeout: 264 seconds)
2013-05-10 11:21:46	<--	Guest56573 (~b@c-24-14-148-164.hsd1.il.comcast.net) has quit (Ping timeout: 264 seconds)
2013-05-10 11:21:46	<--	ajhager (~ajhager@108-71-214-22.lightspeed.iplsin.sbcglobal.net) has quit (Ping timeout: 264 seconds)
2013-05-10 11:21:46	<--	Ezku (saukkee@kosh.org.aalto.fi) has quit (Ping timeout: 264 seconds)
2013-05-10 11:21:47	<--	duncanm (~duncan@a-chinaman.com) has quit (Ping timeout: 264 seconds)
2013-05-10 11:21:48	<--	fbe (~fbe@chat.felixbecker.name) has quit (Ping timeout: 264 seconds)
2013-05-10 11:21:48	<--	bjartek (bjartka@horisont.pvv.ntnu.no) has quit (Ping timeout: 264 seconds)
2013-05-10 11:21:48	<--	Ry4an (~ry4an@li103-234.members.linode.com) has quit (Ping timeout: 264 seconds)
2013-05-10 11:21:48	<--	verma (~verma@thor.udayv.com) has quit (Ping timeout: 264 seconds)
2013-05-10 11:21:48	<--	talios (~textual@ip-118-90-53-167.xdsl.xnet.co.nz) has quit (Ping timeout: 264 seconds)
2013-05-10 11:21:48	<--	iraklis (~Thunderbi@athedsl-4503310.home.otenet.gr) has quit (Ping timeout: 264 seconds)
2013-05-10 11:21:49	<--	eamelinky (~quassel@2001:610:7de:0:2dc8:2255:9081:9372) has quit (Ping timeout: 264 seconds)
2013-05-10 11:21:49	<--	genehack (~genehack@65.49.60.231) has quit (Ping timeout: 264 seconds)
2013-05-10 11:21:50	<--	rodgort` (~rodgort@li125-242.members.linode.com) has quit (Ping timeout: 264 seconds)
2013-05-10 11:21:50	<--	spiffxp (~spiffxp@15.185.114.44) has quit (Ping timeout: 264 seconds)
2013-05-10 11:21:50	<--	keras (~foo@a88-115-213-147.elisa-laajakaista.fi) has quit (Ping timeout: 264 seconds)
2013-05-10 11:21:50	<--	jberkel (uid3928@gateway/web/irccloud.com/x-hjfmctolasivnktx) has quit (Ping timeout: 264 seconds)
2013-05-10 11:21:50	<--	stonecolddevin (~dhoss@69.30.53.42) has quit (Ping timeout: 264 seconds)
2013-05-10 11:21:50	<--	alippai (~alippai@cuppa.sch.bme.hu) has quit (Ping timeout: 264 seconds)
2013-05-10 11:21:50	<--	justinmcp (quassel@2600:3c03::f03c:91ff:fedf:3fac) has quit (Ping timeout: 264 seconds)
2013-05-10 11:21:50	<--	SuperTux88 (benjamin@i.have.ipv6.on.coding4coffee.org) has quit (Ping timeout: 264 seconds)
2013-05-10 11:21:50	<--	ntelford (~ntelford@diag-2-2.rdg.ac.uk) has quit (Ping timeout: 264 seconds)
2013-05-10 11:21:50	<--	beawesomeinstead (uid1643@gateway/web/irccloud.com/x-bqcwtwwwiqfwguba) has quit (Ping timeout: 264 seconds)
2013-05-10 11:21:51	<--	pionic- (~pionic@217.142.157.81) has quit (Ping timeout: 264 seconds)
2013-05-10 11:21:51	-->	coindiff (~coindiff@host81-136-167-178.in-addr.btopenworld.com) has joined #scala
2013-05-10 11:21:51	-->	raid (macbookpro@irc.coding4coffee.org) has joined #scala
2013-05-10 11:21:51	<--	coindiff (~coindiff@host81-136-167-178.in-addr.btopenworld.com) has quit (Changing host)
2013-05-10 11:21:51	-->	coindiff (~coindiff@unaffiliated/coindiff) has joined #scala
2013-05-10 11:22:04	-->	SuperTux88 (benjamin@i.have.ipv6.on.coding4coffee.org) has joined #scala
2013-05-10 11:22:23	<--	predator117 (~predator1@p5080468F.dip0.t-ipconnect.de) has quit (Ping timeout: 255 seconds)
2013-05-10 11:22:24	-->	datura (~datura@unaffiliated/datura) has joined #scala
2013-05-10 11:23:01	-->	imjsilva (~joaosilva@20.161.broadband17.iol.cz) has joined #scala
2013-05-10 11:23:32	-->	pala21 (~pala@2a00:1398:9:fb00:222:faff:feeb:5ffc) has joined #scala
2013-05-10 11:23:48	--	jberkel_ is now known as jberkel
2013-05-10 11:28:00	<--	ranie (~rramiso@124.6.182.55) has quit (Remote host closed the connection)
2013-05-10 11:28:33	-->	kelvl (~kelvl@c-24-5-148-128.hsd1.ca.comcast.net) has joined #scala
2013-05-10 11:31:51	<--	raid (macbookpro@irc.coding4coffee.org) has quit (Ping timeout: 264 seconds)
2013-05-10 11:31:51	<--	SuperTux88 (benjamin@i.have.ipv6.on.coding4coffee.org) has quit (Ping timeout: 264 seconds)
2013-05-10 11:33:02	-->	SuperTux88 (benjamin@i.have.ipv6.on.coding4coffee.org) has joined #scala
2013-05-10 11:33:12	<--	SuperTux88 (benjamin@i.have.ipv6.on.coding4coffee.org) has quit (*.net *.split)
2013-05-10 11:33:13	<--	nafg (~quassel@pool-98-109-167-242.nwrknj.fios.verizon.net) has quit (Remote host closed the connection)
2013-05-10 11:34:47	-->	Eldariof-ru (~CLD@pppoe-206-10-dyn-sr.volgaline.ru) has joined #scala
2013-05-10 11:35:39	-->	jamesiry (~Adium@c-24-7-67-118.hsd1.ca.comcast.net) has joined #scala
2013-05-10 11:37:12	-->	SuperTux88 (benjamin@i.have.ipv6.on.coding4coffee.org) has joined #scala
2013-05-10 11:37:13	-->	raid (macbookpro@irc.coding4coffee.org) has joined #scala
2013-05-10 11:40:01	<--	Leon (~Leon@s83-180-231-178.cust.tele2.se) has quit (Ping timeout: 245 seconds)
2013-05-10 11:40:19	-->	mercwithamouth (~kingdom@99-38-191-69.lightspeed.clmasc.sbcglobal.net) has joined #scala
2013-05-10 11:40:23	<--	jamesiry (~Adium@c-24-7-67-118.hsd1.ca.comcast.net) has quit (Ping timeout: 268 seconds)
2013-05-10 11:40:23	<--	kelvl (~kelvl@c-24-5-148-128.hsd1.ca.comcast.net) has quit (Ping timeout: 268 seconds)
2013-05-10 11:40:23	<--	DonRichie (~DonRichie@dslb-088-068-255-163.pools.arcor-ip.net) has quit (Ping timeout: 268 seconds)
2013-05-10 11:40:34	-->	DonRichie (~DonRichie@dslb-088-069-178-109.pools.arcor-ip.net) has joined #scala
2013-05-10 11:41:30	-->	Leon (~Leon@s83-180-231-178.cust.tele2.se) has joined #scala
2013-05-10 11:42:41	-->	divoxx (~divoxx@c-69-181-105-207.hsd1.ca.comcast.net) has joined #scala
2013-05-10 11:46:30	-->	zatu (~chatzilla@49.248.247.54) has joined #scala
2013-05-10 11:47:13	<--	divoxx (~divoxx@c-69-181-105-207.hsd1.ca.comcast.net) has quit (Ping timeout: 248 seconds)
2013-05-10 11:48:32	zatu	zattu
2013-05-10 11:49:14	<--	zatu (~chatzilla@49.248.247.54) has quit (Client Quit)
2013-05-10 11:53:28	-->	Nosceteipsum (~Nosceteip@d137231.adsl.hansenet.de) has joined #scala
2013-05-10 11:55:01	-->	predator117 (~predator1@p5080468F.dip0.t-ipconnect.de) has joined #scala
2013-05-10 11:55:57	<--	nocturne7 (~havoc@c-76-103-150-97.hsd1.ca.comcast.net) has quit (Quit: Leaving)
2013-05-10 11:58:11	-->	jcazevedo (~jcazevedo@193.137.28.184) has joined #scala
2013-05-10 12:01:32	-->	stefan-_ (~stefan@swhpet3183.uni-trier.de) has joined #scala
2013-05-10 12:02:48	--	Droggl__ is now known as Droggl
2013-05-10 12:03:37	-->	mercwith1mouth (~kingdom@99-38-191-69.lightspeed.clmasc.sbcglobal.net) has joined #scala
2013-05-10 12:05:22	-->	rsuniev123 (~textual@212.140.174.166) has joined #scala
2013-05-10 12:05:59	-->	rhysyngsun (~rhysyngsu@pool-108-20-78-157.bstnma.fios.verizon.net) has joined #scala
2013-05-10 12:06:06	<--	predator117 (~predator1@p5080468F.dip0.t-ipconnect.de) has quit (Ping timeout: 252 seconds)
2013-05-10 12:06:21	<--	rhysyngsun (~rhysyngsu@pool-108-20-78-157.bstnma.fios.verizon.net) has quit (Client Quit)
2013-05-10 12:07:39	-->	RSchulzB (~Adium@67.218.117.3) has joined #scala
2013-05-10 12:07:41	<--	henrikhodne (~henrikhod@far3052.urh.uiuc.edu) has quit (Quit: Computer has gone to sleep.)
2013-05-10 12:08:09	-->	soc (~soc@HSI-KBW-5-56-204-25.hsi17.kabel-badenwuerttemberg.de) has joined #scala
2013-05-10 12:13:35	<--	tsinnema (~tsinnema@dsl-espbrasgw1-50dfb9-125.dhcp.inet.fi) has quit (Read error: Connection reset by peer)
2013-05-10 12:15:35	<--	dcorbin (~dcorbin@unaffiliated/dcorbin) has quit (Quit: This computer has gone to sleep)
2013-05-10 12:15:43	<--	RSchulzB (~Adium@67.218.117.3) has quit (Ping timeout: 276 seconds)
2013-05-10 12:17:28	-->	predator117 (~predator1@p5080468F.dip0.t-ipconnect.de) has joined #scala
2013-05-10 12:21:50	-->	Narigo (~Narigo@g229147162.adsl.alicedsl.de) has joined #scala
2013-05-10 12:24:24	<--	atamagaw` (~user@190.222.142.194) has quit (Quit: ERC Version 5.3 (IRC client for Emacs))
2013-05-10 12:25:20	-->	atamagawarui (~user@unaffiliated/dijkstragroupie) has joined #scala
2013-05-10 12:29:06	<--	przl (~przlrkt@p5B298FD1.dip0.t-ipconnect.de) has quit (Ping timeout: 268 seconds)
2013-05-10 12:30:50	<--	pala21 (~pala@2a00:1398:9:fb00:222:faff:feeb:5ffc) has quit (Quit: Leaving.)
2013-05-10 12:33:18	-->	asQuirreL (~asQuirreL@oriel-student-nat.oriel.ox.ac.uk) has joined #scala
2013-05-10 12:34:00	-->	whaley (~whaley@108-86-97-217.lightspeed.jcvlfl.sbcglobal.net) has joined #scala
2013-05-10 12:36:00	-->	kelvl (~kelvl@c-24-5-148-128.hsd1.ca.comcast.net) has joined #scala
2013-05-10 12:36:14	-->	jamesiry (~Adium@c-24-7-67-118.hsd1.ca.comcast.net) has joined #scala
2013-05-10 12:36:36	<--	Leon (~Leon@s83-180-231-178.cust.tele2.se) has quit (Quit: Leon)
2013-05-10 12:38:29	<--	whaley (~whaley@108-86-97-217.lightspeed.jcvlfl.sbcglobal.net) has quit (Ping timeout: 248 seconds)
2013-05-10 12:40:05	<--	kelvl (~kelvl@c-24-5-148-128.hsd1.ca.comcast.net) has quit (Ping timeout: 248 seconds)
2013-05-10 12:40:14	-->	tsinnema (~tsinnema@dsl-espbrasgw1-50dfb9-125.dhcp.inet.fi) has joined #scala
2013-05-10 12:40:49	<--	jamesiry (~Adium@c-24-7-67-118.hsd1.ca.comcast.net) has quit (Ping timeout: 268 seconds)
2013-05-10 12:40:54	<--	bitonic (~user@176.27.229.121) has quit (Ping timeout: 264 seconds)
2013-05-10 12:43:07	-->	divoxx (~divoxx@c-69-181-105-207.hsd1.ca.comcast.net) has joined #scala
2013-05-10 12:44:13	-->	Leon (~Leon@s83-180-231-178.cust.tele2.se) has joined #scala
2013-05-10 12:46:04	-->	MisterD (MisterD@dyn92.se.informatik.tu-darmstadt.de) has joined #scala
2013-05-10 12:46:43	<--	xav (~xav@ks2.recrutae.net) has quit (Excess Flood)
2013-05-10 12:46:48	--	casualjim_zzz is now known as casualjim
2013-05-10 12:47:22	-->	xav (~xav@ks2.recrutae.net) has joined #scala
2013-05-10 12:47:45	-->	arussel (~user@2a02:2788:64:24c:6aa8:6dff:fe24:60a) has joined #scala
2013-05-10 12:47:51	-->	jrbalderrama (~Thunderbi@181.114.88.236) has joined #scala
2013-05-10 12:47:51	<--	jrbalderrama (~Thunderbi@181.114.88.236) has quit (Remote host closed the connection)
2013-05-10 12:48:05	-->	jrbalderrama (~Thunderbi@181.114.88.236) has joined #scala
2013-05-10 12:48:12	<--	divoxx (~divoxx@c-69-181-105-207.hsd1.ca.comcast.net) has quit (Ping timeout: 264 seconds)
2013-05-10 12:48:58	<--	HairyFotr1 (~hairy@89-212-217-158.dynamic.t-2.net) has quit (Quit: Leaving.)
2013-05-10 12:50:25	-->	io2 (~io2@unaffiliated/irrequietus) has joined #scala
2013-05-10 12:51:04	<--	datura (~datura@unaffiliated/datura) has quit (Ping timeout: 260 seconds)
2013-05-10 12:55:13	-->	Nekuromento (~Nekuromen@91.187.26.197) has joined #scala
2013-05-10 12:56:16	--	casualjim is now known as casualjim_zzz
2013-05-10 12:59:17	--	alippai1 is now known as alippai
2013-05-10 12:59:42	soc	aloiscochard: hey what's up? still playing with macro-paradise?
2013-05-10 12:59:55	-->	oriig (~ilia@78-83-56-21.spectrumnet.bg) has joined #scala
2013-05-10 13:00:16	<--	yacks (~py@180.151.36.168) has quit (Ping timeout: 272 seconds)
2013-05-10 13:01:04	-->	jibs (~jibs@212.74.97.241) has joined #scala
2013-05-10 13:02:48	<--	ajhager_ (~ajhager@108-71-214-22.lightspeed.iplsin.sbcglobal.net) has quit (Ping timeout: 272 seconds)
2013-05-10 13:02:51	jibs	maybe im getting this wrong -- but is it not possible to use implicits to mixin a trait into a companion object (to a trait) in a library in 2.9.3?
2013-05-10 13:04:57	-->	sleepynate (~sleepynat@108-80-181-6.lightspeed.livnmi.sbcglobal.net) has joined #scala
2013-05-10 13:05:22	<--	Leon (~Leon@s83-180-231-178.cust.tele2.se) has quit (Quit: Leon)
2013-05-10 13:05:44	--	milosn_ is now known as milosn
2013-05-10 13:06:34	Rogach	jibs: I'm not sure what you want to achieve. Something like that is possible, I think. For example:
2013-05-10 13:06:43	Rogach	! object A { def stuff = 1 }
2013-05-10 13:06:43	multibot_	 defined module A
2013-05-10 13:07:08	Rogach	! implicit def pimpA(a: A.type) = new { def otherStuff = 2 }
2013-05-10 13:07:09	multibot_	 pimpA: (a: A.type)AnyRef{def otherStuff: Int}
2013-05-10 13:07:14	Rogach	! A.otherStuff
2013-05-10 13:07:14	multibot_	 Int = 2
2013-05-10 13:07:18	Rogach	jibs: ^^ ?
2013-05-10 13:07:24	-->	datura (~datura@unaffiliated/datura) has joined #scala
2013-05-10 13:09:05	-->	yacks (~py@180.151.36.168) has joined #scala
2013-05-10 13:09:26	--	gpampara is now known as gpampara_off
2013-05-10 13:10:03	jibs	Rogach, thanks -- but can the pimp be a trait?
2013-05-10 13:11:35	<--	lizzin_ (~b@c-24-14-148-164.hsd1.il.comcast.net) has quit (Ping timeout: 260 seconds)
2013-05-10 13:12:45	-->	RSchulzB (~Adium@67.218.117.3) has joined #scala
2013-05-10 13:13:57	<--	bblfish (~bblfish@AAubervilliers-651-1-306-218.w83-114.abo.wanadoo.fr) has quit (Ping timeout: 256 seconds)
2013-05-10 13:14:21	<--	eklavya (~eklavya@194.237.142.10) has quit (Remote host closed the connection)
2013-05-10 13:15:55	-->	beawesomeinstead (uid1643@gateway/web/irccloud.com/x-fgomtezffryfxxoq) has joined #scala
2013-05-10 13:17:44	jibs	Rogach, sorry was confused -- this did however set me on the right path :) thanks
2013-05-10 13:20:27	--	Ezku_ is now known as Ezku
2013-05-10 13:21:27	<--	RSchulzB (~Adium@67.218.117.3) has quit (Ping timeout: 252 seconds)
2013-05-10 13:22:39	arussel	is there a thing similar to map.get for vector ? like vector.get(index: Int) => Option[A] ?
2013-05-10 13:22:44	-->	diiver (~diiver@178-16-148-1.obit.ru) has joined #scala
2013-05-10 13:22:50	<--	sleepynate (~sleepynat@108-80-181-6.lightspeed.livnmi.sbcglobal.net) has quit (Remote host closed the connection)
2013-05-10 13:25:38	soc	arussel: mhhh, interesting. would have expected that it existed already ...
2013-05-10 13:25:42	-->	Zweistein (~work@61-21-225-35.rev.home.ne.jp) has joined #scala
2013-05-10 13:26:45	-->	przl (~przlrkt@p5B298FD1.dip0.t-ipconnect.de) has joined #scala
2013-05-10 13:26:53	-->	bblfish (~bblfish@AAubervilliers-651-1-264-67.w86-212.abo.wanadoo.fr) has joined #scala
2013-05-10 13:27:21	Rogach	jibs: You're welcome :)
2013-05-10 13:27:35	arussel	applyOrElse seems to do the trick, but a bit long to type :-)
2013-05-10 13:27:45	soc	arussel: Vector is a function, you could always lift it
2013-05-10 13:27:47	Rogach	arussel: Pimp it :)
2013-05-10 13:28:28	soc	Vector(1,2,3).lift(4)
2013-05-10 13:29:28	benj_	a Vector is a PartialFunction (hence lift)
2013-05-10 13:29:53	soc	but having get would be a good idea too
2013-05-10 13:30:01	arussel	I can't match 'new Vector(startIndex: Int, endIndex: Int, focus: Int)' with '<soc> arussel: Vector is a function,'
2013-05-10 13:30:12	-->	lkba (~AndChat@aenq221.neoplus.adsl.tpnet.pl) has joined #scala
2013-05-10 13:30:23	<--	mercwith1mouth (~kingdom@99-38-191-69.lightspeed.clmasc.sbcglobal.net) has quit (Ping timeout: 256 seconds)
2013-05-10 13:30:46	<--	mercwithamouth (~kingdom@99-38-191-69.lightspeed.clmasc.sbcglobal.net) has quit (Ping timeout: 268 seconds)
2013-05-10 13:32:02	Rogach	arussel: scala.collection.Seq extends PartialFunction
2013-05-10 13:32:06	soc	arussel: Vector[T] extends Function[Int, T]
2013-05-10 13:32:07	<--	[mth] (~mth@110.151.20.114) has quit (Ping timeout: 260 seconds)
2013-05-10 13:32:13	soc	(or PartialFunction)
2013-05-10 13:32:16	aloiscochard	soc: hi mate, yes preparing my talk for scaladays, some macro will be harmed ;-)
2013-05-10 13:32:23	soc	that's nice
2013-05-10 13:32:28	soc	what will you be doing?
2013-05-10 13:32:31	soc	oh, wait?
2013-05-10 13:32:39	soc	you got a talk at ScalaDays?
2013-05-10 13:32:44	soc	wow, congratulations!
2013-05-10 13:32:45	<--	Zweistein (~work@61-21-225-35.rev.home.ne.jp) has quit (Quit: Zweistein)
2013-05-10 13:32:46	aloiscochard	soc: yeah :-) with ijuma 
2013-05-10 13:33:05	soc	ahhh, right
2013-05-10 13:33:06	aloiscochard	soc: thanks mate, and how what's up with your vm experimentation?
2013-05-10 13:33:12	aloiscochard	s/how//
2013-05-10 13:33:17	soc	it's running quite good
2013-05-10 13:33:46	aloiscochard	good to hear, I seen you fixed some stuff in scala you found due to those experimentations right?
2013-05-10 13:33:47	soc	5 failing tests remaining
2013-05-10 13:34:02	arussel	soc, Rogach : thanks, got the lift part of the answer now :-)
2013-05-10 13:34:03	soc	yes, lot of broken tests :-)
2013-05-10 13:34:32	soc	and a lot of work by Joe, fixing and implementing missing stuff in Avian
2013-05-10 13:34:35	-->	sleepynate (~sleepynat@108-80-181-6.lightspeed.livnmi.sbcglobal.net) has joined #scala
2013-05-10 13:34:36	-->	Kakadu (~1@217.71.235.234) has joined #scala
2013-05-10 13:34:45	<--	OOPMan (~adamj@41-134-255-154.dsl.mweb.co.za) has quit (Quit: Leaving.)
2013-05-10 13:34:55	soc	but i was quite busy with other stuff
2013-05-10 13:35:32	soc	d_m, tixxit and I managed to get the license for some magic, superfast BigInt algorithms
2013-05-10 13:35:32	<--	sleepynate (~sleepynat@108-80-181-6.lightspeed.livnmi.sbcglobal.net) has quit (Read error: Connection reset by peer)
2013-05-10 13:35:47	-->	sleepynate (~sleepynat@108-80-181-6.lightspeed.livnmi.sbcglobal.net) has joined #scala
2013-05-10 13:35:53	soc	non-working prototype is here: https://github.com/soc/spire/tree/bigint
2013-05-10 13:36:10	soc	i also started to work on getting rid of the java.lang default import
2013-05-10 13:36:40	-->	jamesiry (~Adium@c-24-7-67-118.hsd1.ca.comcast.net) has joined #scala
2013-05-10 13:37:08	soc	mailing list: https://groups.google.com/d/topic/scala-internals/ECY6vBzlx3A/discussion issue: https://issues.scala-lang.org/browse/SI-7462 first pull request: https://github.com/scala/scala/pull/2507
2013-05-10 13:37:27	-->	rexim (~rexim@unaffiliated/rexim) has joined #scala
2013-05-10 13:39:32	-->	HairyFotr1 (~hairy@89-212-217-158.dynamic.t-2.net) has joined #scala
2013-05-10 13:40:02	-->	OOPMan (~Adam_Jorg@41-134-255-154.dsl.mweb.co.za) has joined #scala
2013-05-10 13:40:03	--	irc: disconnected from server
