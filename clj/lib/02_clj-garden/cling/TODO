good textile + syntax highlighting
  Inline code: @(+ 1 2)@ or @@(+ 1 2)@@ or @@:clj (+ 1 2)@@ or
               <code>(+ 1 2)</code>  or <code:clj>(+ 1 2)</code>
  Block code: 
  @@
  (def plus [x y]
    (+ 1 2))
  @@
  or
  @@:clj
  (def plus [x y]
    (+ 1 2))
  @@
  or
  <code>
  (def plus [x y]
    (+ 1 2))
  </code>
  or
  <code:clj>
  (def plus [x y]
    (+ 1 2))
  </code>

  <pre><code> - allowing would make us a nice superset of textile  
  How are you going to put @@ on the wiki!!! use diff. syntax for each??  

  /pages/foo-bar:"Foo Bar" for external links,
  [[Foo Bar]], for internal links to allow tracking??
  note that we should disallow overlapping permalinks foo-2 etc.  

diffs
  clj-diff coming along
  should we show only diffs? diffs with context? diffs plus full versions?
    could show diff only and link to show-versions
  not that we can use the << foo >> bar form for e.g. diff feeds.

http://www.xml.com/lpt/a/1633
http://www.atomenabled.org/developers/syndication/#sampleFeed
http://validator.w3.org/feed/check.cgi

search interface
lucene search

javascript for guiding users of diff interface

users

examples
  http://webhooks.pbwiki.com/
  http://wiki.github.com/mislav/will_paginate
  http://wiki.merbivore.org
  http://jottit.com/tv2wv/?m=diff&r=3&r=2
  feed://en.wikipedia.org/w/index.php?title=Clojure&feed=atom&action=history
  
pages like on github for the most n frequently-accessed pages, then link more

name -> route-name because we need core/name

error case of no version-a because b was first version

unhelpfull error message on (form {:to (path :foo)}) instead of path-info
rething path path-info path* thing

pretty date formatting
  server side
  relative formating client side

better error messages

edits/version/history in code/text/urls

diff content in feeds

notion of "Wiki title"
  perhaps app config and installation config, the later for things like title

app-level analytics (cool features, like nav paths)

link -> link-to ?
  what was the original reason not?

restart with routing / interaction with cofig

assets / image uploads
  public "caching"

reload command for console

optomistic locking

controllers require in .app

add-column vector or not?

nofollow on links, like on crunchbase

(stash/find-one-by +page+ {:slug (params req :slug)})

"powered by Cling"

not-found on returning nil?

not that "versions" and "new" etc must be reserved permalinks

perhaps we can eliminate a lot of these (respond "foo") things - just ret. "foo"
perhaps ["foo" {:status 404}] for respond shorthand

find ways to shorten and eliminate tokens

not happy about no use of lets in defxml

what escaping is required with textilize??

perhaps auto-discovery-link tag api should be more like link(-to), perhaps shorter name

optional route tails
  /posts(/page/:page)
  need to consider recognition and generation semantics
  better than query params woot!