<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<process version="5.1.003">
  <context>
    <input/>
    <output/>
    <macros/>
  </context>
  <operator activated="true" class="process" compatibility="5.0.000" expanded="true" name="Root">
    <description>&lt;p&gt;This process is also a parameter optimization process like the first one discussed in the meta group. In this case, an evolutionary approach is used for the search of the best parameter combination. This approach is often more appropriate and leads to better results without defining the parameter combinations which should be tested (as for the Grid Search and  the quadratic parameter optimization approaches).&lt;/p&gt; &lt;p&gt;The parameters for the evolutionary parameter optimization approach are defined in the same way as for the other parameter optimization operators. Instead of a comma separated list of parameters which should be checked the user has to define a colon separated pair which is used as lower and upper bound for the specific parameters.&lt;/p&gt; </description>
    <parameter key="logverbosity" value="3"/>
    <parameter key="random_seed" value="2001"/>
    <parameter key="send_mail" value="1"/>
    <parameter key="process_duration_for_mail" value="30"/>
    <parameter key="encoding" value="SYSTEM"/>
    <process expanded="true" height="584" width="962">
      <operator activated="true" class="retrieve" compatibility="5.0.000" expanded="true" height="60" name="Retrieve" width="90" x="45" y="30">
        <parameter key="repository_entry" value="../../data/Polynomial"/>
      </operator>
      <operator activated="true" class="optimize_parameters_evolutionary" compatibility="5.0.000" expanded="true" height="94" name="ParameterOptimization" width="90" x="179" y="30">
        <list key="parameters">
          <parameter key="LibSVMLearner.C" value="0.1:100"/>
          <parameter key="LibSVMLearner.degree" value="2:7"/>
        </list>
        <parameter key="max_generations" value="10"/>
        <parameter key="use_early_stopping" value="false"/>
        <parameter key="generations_without_improval" value="2"/>
        <parameter key="specify_population_size" value="true"/>
        <parameter key="population_size" value="5"/>
        <parameter key="keep_best" value="true"/>
        <parameter key="mutation_type" value="1"/>
        <parameter key="selection_type" value="6"/>
        <parameter key="tournament_fraction" value="0.75"/>
        <parameter key="crossover_prob" value="1.0"/>
        <parameter key="use_local_random_seed" value="false"/>
        <parameter key="local_random_seed" value="1992"/>
        <parameter key="show_convergence_plot" value="false"/>
        <process expanded="true" height="626" width="806">
          <operator activated="true" class="loop_and_average" compatibility="5.0.000" expanded="true" height="76" name="IteratingPerformanceAverage" width="90" x="45" y="30">
            <parameter key="iterations" value="3"/>
            <parameter key="average_performances_only" value="true"/>
            <process expanded="true" height="644" width="806">
              <operator activated="true" class="x_validation" compatibility="5.1.003" expanded="true" height="112" name="Validation" width="90" x="45" y="30">
                <parameter key="create_complete_model" value="false"/>
                <parameter key="average_performances_only" value="true"/>
                <parameter key="leave_one_out" value="false"/>
                <parameter key="number_of_validations" value="2"/>
                <parameter key="sampling_type" value="shuffled sampling"/>
                <parameter key="use_local_random_seed" value="false"/>
                <parameter key="local_random_seed" value="1992"/>
                <process expanded="true">
                  <operator activated="true" class="support_vector_machine_libsvm" compatibility="5.0.000" expanded="true" name="LibSVMLearner">
                    <parameter key="svm_type" value="epsilon-SVR"/>
                    <parameter key="kernel_type" value="poly"/>
                    <parameter key="degree" value="3"/>
                    <parameter key="gamma" value="0.0"/>
                    <parameter key="coef0" value="0.0"/>
                    <parameter key="C" value="72.32051993983198"/>
                    <parameter key="nu" value="0.5"/>
                    <parameter key="cache_size" value="80"/>
                    <parameter key="epsilon" value="0.0010"/>
                    <parameter key="p" value="0.1"/>
                    <list key="class_weights"/>
                    <parameter key="shrinking" value="true"/>
                    <parameter key="calculate_confidences" value="false"/>
                    <parameter key="confidence_for_multiclass" value="true"/>
                  </operator>
                  <connect from_port="training" to_op="LibSVMLearner" to_port="training set"/>
                  <connect from_op="LibSVMLearner" from_port="model" to_port="model"/>
                  <portSpacing port="source_training" spacing="0"/>
                  <portSpacing port="sink_model" spacing="0"/>
                  <portSpacing port="sink_through 1" spacing="0"/>
                </process>
                <process expanded="true">
                  <operator activated="true" class="apply_model" compatibility="5.0.000" expanded="true" name="Test">
                    <list key="application_parameters"/>
                    <parameter key="create_view" value="false"/>
                  </operator>
                  <operator activated="true" class="performance" compatibility="5.0.000" expanded="true" name="Performance">
                    <parameter key="use_example_weights" value="true"/>
                  </operator>
                  <connect from_port="model" to_op="Test" to_port="model"/>
                  <connect from_port="test set" to_op="Test" to_port="unlabelled data"/>
                  <connect from_op="Test" from_port="labelled data" to_op="Performance" to_port="labelled data"/>
                  <connect from_op="Performance" from_port="performance" to_port="averagable 1"/>
                  <portSpacing port="source_model" spacing="0"/>
                  <portSpacing port="source_test set" spacing="0"/>
                  <portSpacing port="source_through 1" spacing="0"/>
                  <portSpacing port="sink_averagable 1" spacing="0"/>
                  <portSpacing port="sink_averagable 2" spacing="0"/>
                </process>
              </operator>
              <connect from_port="in 1" to_op="Validation" to_port="training"/>
              <connect from_op="Validation" from_port="averagable 1" to_port="averagable 1"/>
              <portSpacing port="source_in 1" spacing="0"/>
              <portSpacing port="source_in 2" spacing="0"/>
              <portSpacing port="sink_averagable 1" spacing="0"/>
              <portSpacing port="sink_averagable 2" spacing="0"/>
            </process>
          </operator>
          <operator activated="true" class="log" compatibility="5.0.000" expanded="true" height="76" name="Log" width="90" x="425" y="30">
            <parameter key="filename" value="paraopt.log"/>
            <list key="log">
              <parameter key="C" value="operator.LibSVMLearner.parameter.C"/>
              <parameter key="degree" value="operator.LibSVMLearner.parameter.degree"/>
              <parameter key="error" value="operator.IteratingPerformanceAverage.value.performance"/>
            </list>
            <parameter key="sorting_type" value="0"/>
            <parameter key="sorting_k" value="100"/>
            <parameter key="persistent" value="false"/>
          </operator>
          <connect from_port="input 1" to_op="IteratingPerformanceAverage" to_port="in 1"/>
          <connect from_op="IteratingPerformanceAverage" from_port="averagable 1" to_op="Log" to_port="through 1"/>
          <connect from_op="Log" from_port="through 1" to_port="performance"/>
          <portSpacing port="source_input 1" spacing="0"/>
          <portSpacing port="source_input 2" spacing="0"/>
          <portSpacing port="sink_performance" spacing="0"/>
          <portSpacing port="sink_result 1" spacing="0"/>
        </process>
      </operator>
      <connect from_op="Retrieve" from_port="output" to_op="ParameterOptimization" to_port="input 1"/>
      <connect from_op="ParameterOptimization" from_port="performance" to_port="result 1"/>
      <connect from_op="ParameterOptimization" from_port="parameter" to_port="result 2"/>
      <portSpacing port="source_input 1" spacing="0"/>
      <portSpacing port="sink_result 1" spacing="0"/>
      <portSpacing port="sink_result 2" spacing="0"/>
      <portSpacing port="sink_result 3" spacing="0"/>
    </process>
  </operator>
</process>
